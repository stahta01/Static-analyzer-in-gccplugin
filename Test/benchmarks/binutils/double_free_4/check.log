../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function ‘remote_filename_p’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: implicit declaration of function ‘strncmp’ [-Wimplicit-function-declaration]
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^~~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c:8:1: note: include ‘<string.h>’ or provide a declaration of ‘strncmp’
    7 | #include "../include/common.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:46: warning: ‘strncmp’ argument 3 type is ‘int’ where ‘long unsigned int’ is expected in a call to built-in function declared without prototype [-Wbuiltin-declaration-mismatch]
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                              ^
<built-in>: note: built-in ‘strncmp’ declared here
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                            ^~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
   66 |         name = strdup (name);   /* allocation site */
      |                ^~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
   95 |         srand(time(NULL));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  1298k ( 51%)
 phase parsing                      :   0.02 (100%)   0.02 ( 50%)   0.04 ( 57%)  1004k ( 40%)
 phase opt and generate             :   0.00 (  0%)   0.02 ( 50%)   0.02 ( 29%)   212k (  8%)
 callgraph optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    16  (  0%)
 callgraph ipa passes               :   0.00 (  0%)   0.02 ( 50%)   0.02 ( 29%)   122k (  5%)
 lto stream compression             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)     0  (  0%)
 ipa free lang data                 :   0.00 (  0%)   0.01 ( 25%)   0.00 (  0%)  3472  (  0%)
 preprocessing                      :   0.00 (  0%)   0.01 ( 25%)   0.01 ( 14%)   289k ( 11%)
 lexical analysis                   :   0.01 ( 50%)   0.01 ( 25%)   0.01 ( 14%)     0  (  0%)
 parser struct body                 :   0.01 ( 50%)   0.00 (  0%)   0.00 (  0%)    37k (  1%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    76k (  3%)
 loop init                          :   0.00 (  0%)   0.01 ( 25%)   0.00 (  0%)  8088  (  0%)
 plugin execution                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)     0  (  0%)
 TOTAL                              :   0.02          0.04          0.07         2525k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 phase stream in                    :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)    64k (  3%)
 phase stream out                   :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 ipa cp                             :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 ipa lto decl in                    :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)    43k (  2%)
 TOTAL                              :   0.01          0.00          0.01         2224k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
addr_expraddr_expraddr_expraddr_expraddr_expr------time--
addr_expraddr_expraddr_expraddr_expraddr_expr------srand--
addr_expraddr_expraddr_expraddr_expraddr_expr------symfile_bfd_open--
addr_expraddr_expraddr_expraddr_expraddr_expr------do_cleanups--
=======node_fun:symfile_bfd_open=========
node:= 2 
 	next_branch :=3
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------remote_filename_p--
node:= 3 
 	next_branch :=4
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------remote_bfd_open--
node:= 4 
 	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------error--
node:= 5 
 	next_branch :=10
node:= 6 
 	next_branch :=7
	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------getenv--
addr_expraddr_expraddr_expraddr_expraddr_expr------openp--
node:= 7 
 	next_branch :=8
addr_expraddr_expraddr_expraddr_expraddr_expr------make_cleanup--
addr_expraddr_expraddr_expraddr_expraddr_expr------error--
node:= 8 
 	next_branch :=9
	next_branch :=10
addr_expraddr_expraddr_expraddr_expraddr_expr------make_cleanup--
addr_expraddr_expraddr_expraddr_expraddr_expr------gdb_bfd_open--
node:= 9 
 	next_branch :=10
addr_expraddr_expraddr_expraddr_expraddr_expr------make_cleanup--
addr_expraddr_expraddr_expraddr_expraddr_expr------error--
=======node_fun:remote_bfd_open=========
addr_expraddr_expraddr_expraddr_expraddr_expr------gdb_bfd_open--
=======node_fun:gdb_bfd_open=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
node:= 3 
 	next_branch :=4
=======node_fun:error=========
=======node_fun:openp=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------rand--
=======node_fun:remote_filename_p=========
addr_expraddr_expraddr_expraddr_expraddr_expr------strncmp--
=======node_fun:make_cleanup=========
addr_expraddr_expraddr_expraddr_expraddr_expr------make_my_cleanup--
=======node_fun:make_my_cleanup=========
addr_expraddr_expraddr_expraddr_expraddr_expr------make_my_cleanup2--
=======node_fun:make_my_cleanup2=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
=======node_fun:do_cleanups=========
addr_expraddr_expraddr_expraddr_expraddr_expr------do_my_cleanups--
=======node_fun:do_my_cleanups=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_puts--
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 42 
===============The second stage : Mapping stmt=================
# .MEM_4 = VDEF <.MEM_3(D)>
_1 = time (0B);
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
# .MEM_6 = VDEF <.MEM_5>
symfile_bfd_open ("test");
# .MEM_7 = VDEF <.MEM_6>
do_cleanups (&sentinel_cleanup);
# VUSE <.MEM_28(D)>
_1 = remote_filename_p (name_8(D));
# .MEM_39 = VDEF <.MEM_28(D)>
sym_bfd_24 = remote_bfd_open (name_8(D));
# .MEM_40 = VDEF <.MEM_39>
error ("can\'t open to read symbols", name_8(D));
# .MEM_29 = VDEF <.MEM_28(D)>
name_10 = strdup (name_8(D));
# .MEM_30 = VDEF <.MEM_29>
_2 = getenv ("PATH");
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
# .MEM_32 = VDEF <.MEM_31>
make_cleanup (free, name_10);
# .MEM_33 = VDEF <.MEM_32>
error ("", name_10);
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
# .MEM_37 = VDEF <.MEM_36>
make_cleanup (free, name_17);
# .MEM_38 = VDEF <.MEM_37>
error ("can\'t open to read symbols", name_17);
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = strdup (name_8(D));
# .MEM_17 = VDEF <.MEM_13>
_2 = rand ();
# VUSE <.MEM_6(D)>
_1 = strncmp (filename_4(D), "remote:", 7);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_1 = time (0B);
========================================================
 <ssa_name 0x7f2db9170678
    type <integer_type 0x7f2db917d690 unsigned int public unsigned SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d690 precision:32 min <integer_cst 0x7f2db9168e28 0> max <integer_cst 0x7f2db9168de0 4294967295>
        pointer_to_this <pointer_type 0x7f2db9189690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
=============== *this point analyzable =================
srand (_2);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
symfile_bfd_open ("test");
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
do_cleanups (&sentinel_cleanup);
========================================================
=============== *this point analyzable =================
_1 = remote_filename_p (name_8(D));
========================================================
=============== *this point analyzable =================
_1 = remote_filename_p (name_8(D));
========================================================
=============== *this point analyzable =================
sym_bfd_24 = remote_bfd_open (name_8(D));
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
error ("can\'t open to read symbols", name_8(D));
========================================================
=============== *this point analyzable =================
name_10 = strdup (name_8(D));
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_2 = getenv ("PATH");
========================================================
=============== *this point analyzable =================
_2 = getenv ("PATH");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
desc_13 = openp (_2, name_10, &absolute_name);
========================================================
=============== *this point analyzable =================
desc_13 = openp (_2, name_10, &absolute_name);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
make_cleanup (free, name_10);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
error ("", name_10);
========================================================
=============== *this point analyzable =================
make_cleanup (free, name_17);
========================================================
=============== *this point analyzable =================
sym_bfd_20 = gdb_bfd_open (name_17);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
error ("can\'t open to read symbols", name_17);
========================================================
=============== *this point analyzable =================
_4 = gdb_bfd_open (name_2(D));
========================================================
=============== *this point analyzable =================
_4 = gdb_bfd_open (name_2(D));
========================================================
=============== *this point analyzable =================
_2 = rand ();
========================================================
=============== *this point analyzable =================
abfd_11 = malloc (4);
========================================================
=============== *this point analyzable =================
_1 = strdup (name_8(D));
========================================================
=============== *this point analyzable =================
_2 = rand ();
========================================================
=============== *this point analyzable =================
_1 = strncmp (filename_4(D), "remote:", 7);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_1 = strncmp (filename_4(D), "remote:", 7);
========================================================
=============== *this point analyzable =================
_1 = strncmp (filename_4(D), "remote:", 7);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
new_4 = malloc (32);
========================================================
=============== *this point analyzable =================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_puts (&"cleanup!!!!! ========="[0]);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f2db9172188
    type <integer_type 0x7f2db8c807e0 char readonly QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
        pointer_to_this <pointer_type 0x7f2db8c80888>>
   
    arg:0 <string_cst 0x7f2db8ca4720
        type <array_type 0x7f2db8c8a0a8 type <integer_type 0x7f2db8c807e0 char>
            BLK
            size <integer_cst 0x7f2db8c777e0 constant 184>
            unit-size <integer_cst 0x7f2db8c777c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2db8c8a000>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2db9168f48 type <integer_type 0x7f2db917d5e8 int> constant 0>>
 <array_ref 0x7f2db9172188
    type <integer_type 0x7f2db8c807e0 char readonly QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
        pointer_to_this <pointer_type 0x7f2db8c80888>>
   
    arg:0 <string_cst 0x7f2db8ca4720
        type <array_type 0x7f2db8c8a0a8 type <integer_type 0x7f2db8c807e0 char>
            BLK
            size <integer_cst 0x7f2db8c777e0 constant 184>
            unit-size <integer_cst 0x7f2db8c777c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2db8c8a000>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2db9168f48 type <integer_type 0x7f2db917d5e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f2db9172188
    type <integer_type 0x7f2db8c807e0 char readonly QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
        pointer_to_this <pointer_type 0x7f2db8c80888>>
   
    arg:0 <string_cst 0x7f2db8ca4720
        type <array_type 0x7f2db8c8a0a8 type <integer_type 0x7f2db8c807e0 char>
            BLK
            size <integer_cst 0x7f2db8c777e0 constant 184>
            unit-size <integer_cst 0x7f2db8c777c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2db8c8a000>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2db9168f48 type <integer_type 0x7f2db917d5e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_4/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:symfile_bfd_open========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path symfile_bfd_open  function_call count: 9 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path error  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:error========= [0m
[40;42m =======start_check_funciton:error========= [0m
[40;33m =======POP node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_4/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
if (_3 == 1)
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:12: warning: use location
   39 |         if (__RANDBOOL) {
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), abfd_11(3)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
abfd_11 = malloc (4);
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:29: warning: use location
   40 |                 bfd *abfd = malloc(sizeof(bfd));
      |                             ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:openp========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path openp  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre_check_funciton:openp========= [0m
[40;42m =======start_check_funciton:openp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d510
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _1 = strdup (name_8(D));
    version:1
    ptr-info 0x7f2db8c957f8>
 <ssa_name 0x7f2db8c9d510
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _1 = strdup (name_8(D));
    version:1
    ptr-info 0x7f2db8c957f8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = strdup (name_8(D));
_1 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                            ^
this stmt call this function :strdup
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d510
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _1 = strdup (name_8(D));
    version:1
    ptr-info 0x7f2db8c957f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
   28 |         return __RANDBOOL;
      |                ^
_4 = _3 == 1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
# .MEM_17 = VDEF <.MEM_13>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d678
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d500 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c95828>
 <ssa_name 0x7f2db8c9d678
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d500 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c95828>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d678
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d500 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c95828>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:openp========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:remote_bfd_open========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path remote_bfd_open  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
if (_3 == 1)
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:12: warning: use location
   39 |         if (__RANDBOOL) {
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), abfd_11(3)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
abfd_11 = malloc (4);
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:29: warning: use location
   40 |                 bfd *abfd = malloc(sizeof(bfd));
      |                             ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;42m =======pre_check_funciton:remote_bfd_open========= [0m
[40;42m =======start_check_funciton:remote_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
   48 |         return gdb_bfd_open(name);
      |                ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>

 ================== pre trace ptable ================== 
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
is Other function gdb_bfd_open
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remote_bfd_open========= [0m
[40;42m =======pre add _ fucntion:remote_filename_p========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path remote_filename_p  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre_check_funciton:remote_filename_p========= [0m
[40;42m =======start_check_funciton:remote_filename_p========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_6(D)>
_1 = strncmp (filename_4(D), "remote:", 7);
_1 = strncmp (filename_4(D), "remote:", 7);
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
_2 = _1 == 0;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                                 ^
_5 = (int) _2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db8ca01c0
    type <array_type 0x7f2db8c8ab28
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8aa80 type <integer_type 0x7f2db917d000 sizetype>
            DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db8c77840 7>>
        pointer_to_this <pointer_type 0x7f2db8c8abd0>>
    readonly constant static "remote:\000">

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_6(D)>
_1 = strncmp (filename_4(D), "remote:", 7);
_1 = strncmp (filename_4(D), "remote:", 7);
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
_2 = _1 == 0;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                                 ^
_5 = (int) _2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:remote_filename_p========= [0m
[40;42m =======pre_check_funciton:symfile_bfd_open========= [0m
[40;42m =======start_check_funciton:symfile_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_28(D)>
_1 = remote_filename_p (name_8(D));
_1 = remote_filename_p (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:13: warning: use location
   57 |         if (remote_filename_p (name))
      |             ^
this stmt call this function :remote_filename_p
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_1 != 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:12: warning: use location
   57 |         if (remote_filename_p (name))
      |            ^
name_10 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
error ("can\'t open to read symbols", name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
sym_bfd_24 = remote_bfd_open (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:59:35: warning: use location
   59 |                         sym_bfd = remote_bfd_open (name);
      |                                   ^
this stmt call this function :remote_bfd_open
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---remote_bfd_open-----
if (sym_bfd_24 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:60:28: warning: use location
   60 |                         if (!sym_bfd)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
is Other function remote_filename_p
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_28(D)>
_1 = remote_filename_p (name_8(D));
_1 = remote_filename_p (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:13: warning: use location
   57 |         if (remote_filename_p (name))
      |             ^
this stmt call this function :remote_filename_p
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_1 != 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:12: warning: use location
   57 |         if (remote_filename_p (name))
      |            ^
name_10 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
error ("can\'t open to read symbols", name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
sym_bfd_24 = remote_bfd_open (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:59:35: warning: use location
   59 |                         sym_bfd = remote_bfd_open (name);
      |                                   ^
this stmt call this function :remote_bfd_open
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---remote_bfd_open-----
if (sym_bfd_24 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:60:28: warning: use location
   60 |                         if (!sym_bfd)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>

 ================== pre trace ptable ================== 
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_6>
return _4;
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
   48 |         return gdb_bfd_open(name);
      |                ^
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :889========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
is Other function remote_bfd_open
 
 Start check Pointer Collect  

======================================================================
_1 = remote_filename_p (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:13: warning: use location
   57 |         if (remote_filename_p (name))
      |             ^
this stmt call this function :remote_filename_p
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
name_10 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
desc_13 = openp (_2, name_10, &absolute_name);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (desc_13 < 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:70:12: warning: use location
   70 |         if (desc < 0)
      |            ^
error ("can\'t open to read symbols", name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_39 = VDEF <.MEM_28(D)>
sym_bfd_24 = remote_bfd_open (name_8(D));
sym_bfd_24 = remote_bfd_open (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:59:35: warning: use location
   59 |                         sym_bfd = remote_bfd_open (name);
      |                                   ^
this stmt call this function :remote_bfd_open
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---remote_bfd_open-----
if (sym_bfd_24 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:60:28: warning: use location
   60 |                         if (!sym_bfd)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db9166a20
    type <array_type 0x7f2db8c8b150
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        BLK
        size <integer_cst 0x7f2db8c77888 constant 216>
        unit-size <integer_cst 0x7f2db8c77870 constant 27>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8b0a8 type <integer_type 0x7f2db917d000 sizetype>
            DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db8c77858 26>>
        pointer_to_this <pointer_type 0x7f2db8c8b1f8>>
    readonly constant static "can't open to read symbols\000">

dot graph START

======================================================================
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_1 = remote_filename_p (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:13: warning: use location
   57 |         if (remote_filename_p (name))
      |             ^
this stmt call this function :remote_filename_p
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_1 != 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:12: warning: use location
   57 |         if (remote_filename_p (name))
      |            ^
# .MEM_29 = VDEF <.MEM_28(D)>
name_10 = strdup (name_8(D));
name_10 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
desc_13 = openp (_2, name_10, &absolute_name);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
error ("can\'t open to read symbols", name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
sym_bfd_24 = remote_bfd_open (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:59:35: warning: use location
   59 |                         sym_bfd = remote_bfd_open (name);
      |                                   ^
this stmt call this function :remote_bfd_open
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---remote_bfd_open-----
if (sym_bfd_24 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:60:28: warning: use location
   60 |                         if (!sym_bfd)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db9364d20
    type <array_type 0x7f2db8c8b3f0
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        BLK
        size <integer_cst 0x7f2db8c778b8 constant 40>
        unit-size <integer_cst 0x7f2db8c778a0 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8b348 type <integer_type 0x7f2db917d000 sizetype>
            DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db9168e10 4>>
        pointer_to_this <pointer_type 0x7f2db8c8b498>>
    readonly constant static "PATH\000">

dot graph START

======================================================================
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>

 ================== pre trace ptable ================== 
trace fucntion name:getenv 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
is Other function getenv
 
 Start check Pointer Collect  

======================================================================
# .MEM_30 = VDEF <.MEM_29>
_2 = getenv ("PATH");
_2 = getenv ("PATH");
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:23: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                       ^
this stmt call this function :getenv
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
*filename_opened_6(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (desc_13 < 0)
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:70:12: warning: use location
   70 |         if (desc < 0)
      |            ^
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>

 ================== pre trace ptable ================== 
trace fucntion name:getenv 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
is Other function getenv
 
 Start check Pointer Collect  

======================================================================
_2 = getenv ("PATH");
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:23: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                       ^
this stmt call this function :getenv
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
*filename_opened_6(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (desc_13 < 0)
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:70:12: warning: use location
   70 |         if (desc < 0)
      |            ^
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <var_decl 0x7f2db8c9b120 absolute_name
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    addressable unsigned DI ./benchmarks/binutils/double_free_4/binutils_df_4.c:54:8 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2db8c88400 symfile_bfd_open> chain <var_decl 0x7f2db8c9b090 desc>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2db8c9b120 absolute_name
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    addressable unsigned DI ./benchmarks/binutils/double_free_4/binutils_df_4.c:54:8 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2db8c88400 symfile_bfd_open> chain <var_decl 0x7f2db8c9b090 desc>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <var_decl 0x7f2db8c9b120 absolute_name
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    addressable unsigned DI ./benchmarks/binutils/double_free_4/binutils_df_4.c:54:8 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2db8c88400 symfile_bfd_open> chain <var_decl 0x7f2db8c9b090 desc>>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with absolute_name ========= [0m
[40;36m ======= relate node_fun argument:absolute_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
*filename_opened_6(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
desc_13 = openp (_2, name_10, &absolute_name);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <var_decl 0x7f2db8c9b120 absolute_name
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    addressable unsigned DI ./benchmarks/binutils/double_free_4/binutils_df_4.c:54:8 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2db8c88400 symfile_bfd_open> chain <var_decl 0x7f2db8c9b090 desc>>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with absolute_name ========= [0m
[40;36m ======= relate node_fun argument:absolute_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
*filename_opened_6(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>

 ================== pre trace ptable ================== 
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
is Other function openp
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
desc_13 = openp (_2, name_10, &absolute_name);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (desc_13 < 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:70:12: warning: use location
   70 |         if (desc < 0)
      |            ^
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
name_17 = absolute_name;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
sym_bfd_20 = gdb_bfd_open (name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_34>
name_17 = absolute_name;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
name_17 = absolute_name;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_36>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_36>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>

 ================== pre trace ptable ================== 
trace fucntion name:free 

 ================== pre trace ptable finish================== 
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
is Other function free
 
 Start check Pointer Collect  

======================================================================
# .MEM_32 = VDEF <.MEM_31>
make_cleanup (free, name_10);
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_32 = VDEF <.MEM_31>
make_cleanup (free, name_10);
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db8c95450
    type <array_type 0x7f2db8c8b738
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        QI size <integer_cst 0x7f2db9168ca8 8> unit-size <integer_cst 0x7f2db9168cc0 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8b690 type <integer_type 0x7f2db917d000 sizetype>
            DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db9168be8 0>>
        pointer_to_this <pointer_type 0x7f2db8c8b7e0>>
    readonly constant static "\000">

dot graph START

======================================================================
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_cleanup
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
# .MEM_37 = VDEF <.MEM_36>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^
sym_bfd_20 = gdb_bfd_open (name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
make_cleanup (free, name_17);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
error ("can\'t open to read symbols", name_17);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
sym_bfd_20 = gdb_bfd_open (name_17);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
make_cleanup (free, name_17);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>

 ================== pre trace ptable ================== 
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return _4;
In function ‘main’:
lto1: warning: use location
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
is Other function gdb_bfd_open
 
 Start check Pointer Collect  

======================================================================
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
sym_bfd_20 = gdb_bfd_open (name_17);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db9166a50
    type <array_type 0x7f2db8c8b150
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        BLK
        size <integer_cst 0x7f2db8c77888 constant 216>
        unit-size <integer_cst 0x7f2db8c77870 constant 27>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8b0a8 type <integer_type 0x7f2db917d000 sizetype>
            DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db8c77858 26>>
        pointer_to_this <pointer_type 0x7f2db8c8b1f8>>
    readonly constant static "can't open to read symbols\000">
[40;33m =======POP node_fun stack:symfile_bfd_open========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db9170630
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = time (0B);
    version:1>
 <ssa_name 0x7f2db9170630
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = time (0B);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170630
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = time (0B);
    version:1>
is Other function time
 
 Start check Pointer Collect  

======================================================================
_2 = (unsigned int) _1;
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:9: warning: use location
   95 |         srand(time(NULL));
      |         ^
srand (_2);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
_1 = time (0B);
_1 = time (0B);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:15: warning: use location
   95 |         srand(time(NULL));
      |               ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170630
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = time (0B);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170678
    type <integer_type 0x7f2db917d690 unsigned int public unsigned SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d690 precision:32 min <integer_cst 0x7f2db9168e28 0> max <integer_cst 0x7f2db9168de0 4294967295>
        pointer_to_this <pointer_type 0x7f2db9189690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
 <ssa_name 0x7f2db9170678
    type <integer_type 0x7f2db917d690 unsigned int public unsigned SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d690 precision:32 min <integer_cst 0x7f2db9168e28 0> max <integer_cst 0x7f2db9168de0 4294967295>
        pointer_to_this <pointer_type 0x7f2db9189690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170678
    type <integer_type 0x7f2db917d690 unsigned int public unsigned SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d690 precision:32 min <integer_cst 0x7f2db9168e28 0> max <integer_cst 0x7f2db9168de0 4294967295>
        pointer_to_this <pointer_type 0x7f2db9189690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
srand (_2);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:9: warning: use location
   95 |         srand(time(NULL));
      |         ^
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
srand (_2);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170678
    type <integer_type 0x7f2db917d690 unsigned int public unsigned SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d690 precision:32 min <integer_cst 0x7f2db9168e28 0> max <integer_cst 0x7f2db9168de0 4294967295>
        pointer_to_this <pointer_type 0x7f2db9189690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db9364b60
    type <array_type 0x7f2db8c8b3f0
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        BLK
        size <integer_cst 0x7f2db8c778b8 constant 40>
        unit-size <integer_cst 0x7f2db8c778a0 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8b348 type <integer_type 0x7f2db917d000 sizetype>
            DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db9168e10 4>>
        pointer_to_this <pointer_type 0x7f2db8c8b498>>
    readonly constant static "test\000">

dot graph START

======================================================================
 <var_decl 0x7f2db9a10bd0 sentinel_cleanup
    type <record_type 0x7f2db8c87690 cleanup readonly BLK
        size <integer_cst 0x7f2db9168f18 constant 256>
        unit-size <integer_cst 0x7f2db9186018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70
        fields <field_decl 0x7f2db8c832f8 next type <pointer_type 0x7f2db8c80a80>
            unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:38:19
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f2db9168be8 constant 0>
            bit-offset <integer_cst 0x7f2db9168c30 constant 0> context <record_type 0x7f2db8c80e70 cleanup> chain <field_decl 0x7f2db8c83260 function>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c87dc8>>
    readonly addressable static BLK ./benchmarks/binutils/double_free_4/../include/common.h:44:29 size <integer_cst 0x7f2db9168f18 256> unit-size <integer_cst 0x7f2db9186018 32>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2db9a10bd0 sentinel_cleanup
    type <record_type 0x7f2db8c87690 cleanup readonly BLK
        size <integer_cst 0x7f2db9168f18 constant 256>
        unit-size <integer_cst 0x7f2db9186018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70
        fields <field_decl 0x7f2db8c832f8 next type <pointer_type 0x7f2db8c80a80>
            unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:38:19
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f2db9168be8 constant 0>
            bit-offset <integer_cst 0x7f2db9168c30 constant 0> context <record_type 0x7f2db8c80e70 cleanup> chain <field_decl 0x7f2db8c83260 function>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c87dc8>>
    readonly addressable static BLK ./benchmarks/binutils/double_free_4/../include/common.h:44:29 size <integer_cst 0x7f2db9168f18 256> unit-size <integer_cst 0x7f2db9186018 32>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6>
do_cleanups (&sentinel_cleanup);
do_cleanups (&sentinel_cleanup);
./benchmarks/binutils/double_free_4/binutils_df_4.c:100:9: warning: use location
  100 |         do_cleanups(old_chain);
      |         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <var_decl 0x7f2db9a10bd0 sentinel_cleanup
    type <record_type 0x7f2db8c87690 cleanup readonly BLK
        size <integer_cst 0x7f2db9168f18 constant 256>
        unit-size <integer_cst 0x7f2db9186018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70
        fields <field_decl 0x7f2db8c832f8 next type <pointer_type 0x7f2db8c80a80>
            unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:38:19
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f2db9168be8 constant 0>
            bit-offset <integer_cst 0x7f2db9168c30 constant 0> context <record_type 0x7f2db8c80e70 cleanup> chain <field_decl 0x7f2db8c83260 function>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c87dc8>>
    readonly addressable static BLK ./benchmarks/binutils/double_free_4/../include/common.h:44:29 size <integer_cst 0x7f2db9168f18 256> unit-size <integer_cst 0x7f2db9186018 32>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with sentinel_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2db9a10bd0 sentinel_cleanup
    type <record_type 0x7f2db8c87690 cleanup readonly BLK
        size <integer_cst 0x7f2db9168f18 constant 256>
        unit-size <integer_cst 0x7f2db9186018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70
        fields <field_decl 0x7f2db8c832f8 next type <pointer_type 0x7f2db8c80a80>
            unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:38:19
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f2db9168be8 constant 0>
            bit-offset <integer_cst 0x7f2db9168c30 constant 0> context <record_type 0x7f2db8c80e70 cleanup> chain <field_decl 0x7f2db8c83260 function>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c87dc8>>
    readonly addressable static BLK ./benchmarks/binutils/double_free_4/../include/common.h:44:29 size <integer_cst 0x7f2db9168f18 256> unit-size <integer_cst 0x7f2db9186018 32>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with sentinel_cleanup ========= [0m
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6>
do_cleanups (&sentinel_cleanup);
do_cleanups (&sentinel_cleanup);
In function ‘main’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:100:9: warning: use location
  100 |         do_cleanups(old_chain);
      |         ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <var_decl 0x7f2db9a10bd0 sentinel_cleanup
    type <record_type 0x7f2db8c87690 cleanup readonly BLK
        size <integer_cst 0x7f2db9168f18 constant 256>
        unit-size <integer_cst 0x7f2db9186018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70
        fields <field_decl 0x7f2db8c832f8 next type <pointer_type 0x7f2db8c80a80>
            unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:38:19
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f2db9168be8 constant 0>
            bit-offset <integer_cst 0x7f2db9168c30 constant 0> context <record_type 0x7f2db8c80e70 cleanup> chain <field_decl 0x7f2db8c83260 function>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c87dc8>>
    readonly addressable static BLK ./benchmarks/binutils/double_free_4/../include/common.h:44:29 size <integer_cst 0x7f2db9168f18 256> unit-size <integer_cst 0x7f2db9186018 32>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with sentinel_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2db9a10bd0 sentinel_cleanup
    type <record_type 0x7f2db8c87690 cleanup readonly BLK
        size <integer_cst 0x7f2db9168f18 constant 256>
        unit-size <integer_cst 0x7f2db9186018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70
        fields <field_decl 0x7f2db8c832f8 next type <pointer_type 0x7f2db8c80a80>
            unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:38:19
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7f2db9168be8 constant 0>
            bit-offset <integer_cst 0x7f2db9168c30 constant 0> context <record_type 0x7f2db8c80e70 cleanup> chain <field_decl 0x7f2db8c83260 function>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c87dc8>>
    readonly addressable static BLK ./benchmarks/binutils/double_free_4/../include/common.h:44:29 size <integer_cst 0x7f2db9168f18 256> unit-size <integer_cst 0x7f2db9186018 32>
    align:256 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with sentinel_cleanup ========= [0m
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sentinel_cleanup========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:symfile_bfd_open========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path symfile_bfd_open  function_call count: 9 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path error  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:error========= [0m
[40;42m =======start_check_funciton:error========= [0m
[40;33m =======POP node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_4/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
if (_3 == 1)
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:12: warning: use location
   39 |         if (__RANDBOOL) {
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), abfd_11(3)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
abfd_11 = malloc (4);
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:29: warning: use location
   40 |                 bfd *abfd = malloc(sizeof(bfd));
      |                             ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:openp========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path openp  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre_check_funciton:openp========= [0m
[40;42m =======start_check_funciton:openp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d510
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _1 = strdup (name_8(D));
    version:1
    ptr-info 0x7f2db8c957f8>
 <ssa_name 0x7f2db8c9d510
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _1 = strdup (name_8(D));
    version:1
    ptr-info 0x7f2db8c957f8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = strdup (name_8(D));
_1 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                            ^
this stmt call this function :strdup
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d510
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _1 = strdup (name_8(D));
    version:1
    ptr-info 0x7f2db8c957f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
   28 |         return __RANDBOOL;
      |                ^
_4 = _3 == 1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
# .MEM_17 = VDEF <.MEM_13>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d678
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d500 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c95828>
 <ssa_name 0x7f2db8c9d678
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d500 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c95828>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d678
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d500 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c95828>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:openp========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:remote_bfd_open========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path remote_bfd_open  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
if (_3 == 1)
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:12: warning: use location
   39 |         if (__RANDBOOL) {
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), abfd_11(3)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
abfd_11 = malloc (4);
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:29: warning: use location
   40 |                 bfd *abfd = malloc(sizeof(bfd));
      |                             ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;42m =======pre_check_funciton:remote_bfd_open========= [0m
[40;42m =======start_check_funciton:remote_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
   48 |         return gdb_bfd_open(name);
      |                ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>

 ================== pre trace ptable ================== 
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
is Other function gdb_bfd_open
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remote_bfd_open========= [0m
[40;42m =======pre add _ fucntion:remote_filename_p========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path remote_filename_p  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre_check_funciton:remote_filename_p========= [0m
[40;42m =======start_check_funciton:remote_filename_p========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_6(D)>
_1 = strncmp (filename_4(D), "remote:", 7);
_1 = strncmp (filename_4(D), "remote:", 7);
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
_2 = _1 == 0;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                                 ^
_5 = (int) _2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db8ca01c0
    type <array_type 0x7f2db8c8ab28
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8aa80 type <integer_type 0x7f2db917d000 sizetype>
            DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db8c77840 7>>
        pointer_to_this <pointer_type 0x7f2db8c8abd0>>
    readonly constant static "remote:\000">

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_6(D)>
_1 = strncmp (filename_4(D), "remote:", 7);
_1 = strncmp (filename_4(D), "remote:", 7);
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
_2 = _1 == 0;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                                 ^
_5 = (int) _2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:remote_filename_p========= [0m
[40;42m =======pre_check_funciton:symfile_bfd_open========= [0m
[40;42m =======start_check_funciton:symfile_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_28(D)>
_1 = remote_filename_p (name_8(D));
_1 = remote_filename_p (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:13: warning: use location
   57 |         if (remote_filename_p (name))
      |             ^
this stmt call this function :remote_filename_p
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_1 != 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:12: warning: use location
   57 |         if (remote_filename_p (name))
      |            ^
name_10 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
error ("can\'t open to read symbols", name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
sym_bfd_24 = remote_bfd_open (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:59:35: warning: use location
   59 |                         sym_bfd = remote_bfd_open (name);
      |                                   ^
this stmt call this function :remote_bfd_open
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---remote_bfd_open-----
if (sym_bfd_24 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:60:28: warning: use location
   60 |                         if (!sym_bfd)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170900
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c956d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
is Other function remote_filename_p
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_28(D)>
_1 = remote_filename_p (name_8(D));
_1 = remote_filename_p (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:13: warning: use location
   57 |         if (remote_filename_p (name))
      |             ^
this stmt call this function :remote_filename_p
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_1 != 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:12: warning: use location
   57 |         if (remote_filename_p (name))
      |            ^
name_10 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
error ("can\'t open to read symbols", name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
sym_bfd_24 = remote_bfd_open (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:59:35: warning: use location
   59 |                         sym_bfd = remote_bfd_open (name);
      |                                   ^
this stmt call this function :remote_bfd_open
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---remote_bfd_open-----
if (sym_bfd_24 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:60:28: warning: use location
   60 |                         if (!sym_bfd)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170828
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = remote_filename_p (name_8(D));
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>

 ================== pre trace ptable ================== 
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_6>
return _4;
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
   48 |         return gdb_bfd_open(name);
      |                ^
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :889========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
is Other function remote_bfd_open
 
 Start check Pointer Collect  

======================================================================
_1 = remote_filename_p (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:13: warning: use location
   57 |         if (remote_filename_p (name))
      |             ^
this stmt call this function :remote_filename_p
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
name_10 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
desc_13 = openp (_2, name_10, &absolute_name);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (desc_13 < 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:70:12: warning: use location
   70 |         if (desc < 0)
      |            ^
error ("can\'t open to read symbols", name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_39 = VDEF <.MEM_28(D)>
sym_bfd_24 = remote_bfd_open (name_8(D));
sym_bfd_24 = remote_bfd_open (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:59:35: warning: use location
   59 |                         sym_bfd = remote_bfd_open (name);
      |                                   ^
this stmt call this function :remote_bfd_open
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---remote_bfd_open-----
if (sym_bfd_24 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:60:28: warning: use location
   60 |                         if (!sym_bfd)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170a68
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_24 = remote_bfd_open (name_8(D));
    version:24
    ptr-info 0x7f2db8c95738>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db9166a20
    type <array_type 0x7f2db8c8b150
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        BLK
        size <integer_cst 0x7f2db8c77888 constant 216>
        unit-size <integer_cst 0x7f2db8c77870 constant 27>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8b0a8 type <integer_type 0x7f2db917d000 sizetype>
            DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db8c77858 26>>
        pointer_to_this <pointer_type 0x7f2db8c8b1f8>>
    readonly constant static "can't open to read symbols\000">

dot graph START

======================================================================
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_1 = remote_filename_p (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:13: warning: use location
   57 |         if (remote_filename_p (name))
      |             ^
this stmt call this function :remote_filename_p
trace fucntion name:remote_filename_p 
[40;44m =======trace_function_path remote_filename_p  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:remote_filename_p========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_1 != 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:12: warning: use location
   57 |         if (remote_filename_p (name))
      |            ^
# .MEM_29 = VDEF <.MEM_28(D)>
name_10 = strdup (name_8(D));
name_10 = strdup (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
desc_13 = openp (_2, name_10, &absolute_name);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:1 
error ("can\'t open to read symbols", name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
sym_bfd_24 = remote_bfd_open (name_8(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:59:35: warning: use location
   59 |                         sym_bfd = remote_bfd_open (name);
      |                                   ^
this stmt call this function :remote_bfd_open
trace fucntion name:remote_bfd_open 
[40;44m =======trace_function_path remote_bfd_open  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:remote_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
gdb_bfd_open this fucntion return value is heap-object 
remote_bfd_open this fucntion return value is heap-object gdb_bfd_open
[40;46m =======add node_fun stack:gdb_bfd_open========= [0m
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---remote_bfd_open-----
if (sym_bfd_24 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:60:28: warning: use location
   60 |                         if (!sym_bfd)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170948
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_10 = strdup (name_8(D));
    version:10
    ptr-info 0x7f2db8c956f0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db9364d20
    type <array_type 0x7f2db8c8b3f0
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        BLK
        size <integer_cst 0x7f2db8c778b8 constant 40>
        unit-size <integer_cst 0x7f2db8c778a0 constant 5>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8b348 type <integer_type 0x7f2db917d000 sizetype>
            DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db9168e10 4>>
        pointer_to_this <pointer_type 0x7f2db8c8b498>>
    readonly constant static "PATH\000">

dot graph START

======================================================================
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>

 ================== pre trace ptable ================== 
trace fucntion name:getenv 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
is Other function getenv
 
 Start check Pointer Collect  

======================================================================
# .MEM_30 = VDEF <.MEM_29>
_2 = getenv ("PATH");
_2 = getenv ("PATH");
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:23: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                       ^
this stmt call this function :getenv
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
*filename_opened_6(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (desc_13 < 0)
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:70:12: warning: use location
   70 |         if (desc < 0)
      |            ^
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>

 ================== pre trace ptable ================== 
trace fucntion name:getenv 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
is Other function getenv
 
 Start check Pointer Collect  

======================================================================
_2 = getenv ("PATH");
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:23: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                       ^
this stmt call this function :getenv
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
*filename_opened_6(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (desc_13 < 0)
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:70:12: warning: use location
   70 |         if (desc < 0)
      |            ^
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170870
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _2 = getenv ("PATH");
    version:2
    ptr-info 0x7f2db8c956a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <var_decl 0x7f2db8c9b120 absolute_name
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    addressable unsigned DI ./benchmarks/binutils/double_free_4/binutils_df_4.c:54:8 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2db8c88400 symfile_bfd_open> chain <var_decl 0x7f2db8c9b090 desc>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2db8c9b120 absolute_name
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    addressable unsigned DI ./benchmarks/binutils/double_free_4/binutils_df_4.c:54:8 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2db8c88400 symfile_bfd_open> chain <var_decl 0x7f2db8c9b090 desc>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
desc_13 = openp (_2, name_10, &absolute_name);
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <var_decl 0x7f2db8c9b120 absolute_name
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    addressable unsigned DI ./benchmarks/binutils/double_free_4/binutils_df_4.c:54:8 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2db8c88400 symfile_bfd_open> chain <var_decl 0x7f2db8c9b090 desc>>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with absolute_name ========= [0m
[40;36m ======= relate node_fun argument:absolute_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
*filename_opened_6(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
desc_13 = openp (_2, name_10, &absolute_name);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <var_decl 0x7f2db8c9b120 absolute_name
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    addressable unsigned DI ./benchmarks/binutils/double_free_4/binutils_df_4.c:54:8 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7f2db8c88400 symfile_bfd_open> chain <var_decl 0x7f2db8c9b090 desc>>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with absolute_name ========= [0m
[40;36m ======= relate node_fun argument:absolute_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
*filename_opened_6(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>

 ================== pre trace ptable ================== 
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :888========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
is Other function openp
 
 Start check Pointer Collect  

======================================================================
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
desc_13 = openp (_2, name_10, &absolute_name);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                ^
this stmt call this function :openp
trace fucntion name:openp 
[40;44m =======trace_function_path openp  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:openp========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (desc_13 < 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:70:12: warning: use location
   70 |         if (desc < 0)
      |            ^
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
name_17 = absolute_name;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
sym_bfd_20 = gdb_bfd_open (name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with desc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170990
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
    var <var_decl 0x7f2db8c9b090 desc>
    def_stmt desc_13 = openp (_2, name_10, &absolute_name);
    version:13>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_34>
name_17 = absolute_name;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# VUSE <.MEM_34>
name_17 = absolute_name;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_38 = VDEF <.MEM_37>
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_36>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_37 = VDEF <.MEM_36>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location

===== possiable asias =====
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_34 = VDEF <.MEM_26>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^

===== possiable asias =====
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>

 ================== pre trace ptable ================== 
trace fucntion name:free 

 ================== pre trace ptable finish================== 
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
is Other function free
 
 Start check Pointer Collect  

======================================================================
# .MEM_32 = VDEF <.MEM_31>
make_cleanup (free, name_10);
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
   72 |                         make_cleanup (free, name);
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_32 = VDEF <.MEM_31>
make_cleanup (free, name_10);
make_cleanup (free, name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:72:25: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f2db8c88500 free
    type <function_type 0x7f2db8c80d20
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
            chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c80dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
    attributes <tree_list 0x7f2db8c828e8
        purpose <identifier_node 0x7f2db91a2e10 nothrow>
        chain <tree_list 0x7f2db8c828c0
            purpose <identifier_node 0x7f2db91a2e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db8c95450
    type <array_type 0x7f2db8c8b738
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        QI size <integer_cst 0x7f2db9168ca8 8> unit-size <integer_cst 0x7f2db9168cc0 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8b690 type <integer_type 0x7f2db917d000 sizetype>
            DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db9168be8 0>>
        pointer_to_this <pointer_type 0x7f2db8c8b7e0>>
    readonly constant static "\000">

dot graph START

======================================================================
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_cleanup
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
# .MEM_37 = VDEF <.MEM_36>
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^
sym_bfd_20 = gdb_bfd_open (name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
make_cleanup (free, name_17);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
is Other function 
 
 Start check Pointer Collect  

======================================================================
error ("can\'t open to read symbols", name_17);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
sym_bfd_20 = gdb_bfd_open (name_17);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
make_cleanup (free, name_17);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db91709d8
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
    var <parm_decl 0x7f2db8c8d180 name>
    def_stmt name_17 = absolute_name;
    version:17
    ptr-info 0x7f2db8c95708>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>

 ================== pre trace ptable ================== 
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return _4;
In function ‘symfile_bfd_open’:
lto1: warning: use location
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
is Other function gdb_bfd_open
 
 Start check Pointer Collect  

======================================================================
error ("can\'t open to read symbols", name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:84:25: warning: use location
   84 |                         make_cleanup (free, name);      /* double-free */
      |                         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
sym_bfd_20 = gdb_bfd_open (name_17);
In function ‘symfile_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_20 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
make_cleanup (free, name_17);
./benchmarks/binutils/double_free_4/binutils_df_4.c:78:9: warning: use location
   78 |         make_cleanup (free, name);                      /* double-free */
      |         ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:sym_bfd========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170a20
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9b1b0 sym_bfd>
    def_stmt sym_bfd_20 = gdb_bfd_open (name_17);
    version:20
    ptr-info 0x7f2db8c95720>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db9166a50
    type <array_type 0x7f2db8c8b150
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        BLK
        size <integer_cst 0x7f2db8c77888 constant 216>
        unit-size <integer_cst 0x7f2db8c77870 constant 27>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8b0a8 type <integer_type 0x7f2db917d000 sizetype>
            DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db8c77858 26>>
        pointer_to_this <pointer_type 0x7f2db8c8b1f8>>
    readonly constant static "can't open to read symbols\000">
[40;33m =======POP node_fun stack:symfile_bfd_open========= [0m
[40;44m =======node_fun:remote_bfd_open========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path remote_bfd_open  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
In function ‘remote_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
if (_3 == 1)
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:12: warning: use location
   39 |         if (__RANDBOOL) {
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), abfd_11(3)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
abfd_11 = malloc (4);
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:29: warning: use location
   40 |                 bfd *abfd = malloc(sizeof(bfd));
      |                             ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;42m =======pre_check_funciton:remote_bfd_open========= [0m
[40;42m =======start_check_funciton:remote_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
   48 |         return gdb_bfd_open(name);
      |                ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db9170f78
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d200 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95750>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>

 ================== pre trace ptable ================== 
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
is Other function gdb_bfd_open
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
_4 = gdb_bfd_open (name_2(D));
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d000
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _4 = gdb_bfd_open (name_2(D));
    version:4
    ptr-info 0x7f2db8c95768>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:remote_bfd_open========= [0m
[40;44m =======node_fun:gdb_bfd_open========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
In function ‘gdb_bfd_open’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
if (_3 == 1)
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:12: warning: use location
   39 |         if (__RANDBOOL) {
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d120
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), abfd_11(3)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
abfd_11 = malloc (4);
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:29: warning: use location
   40 |                 bfd *abfd = malloc(sizeof(bfd));
      |                             ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d240
    type <pointer_type 0x7f2db8c87348
        type <integer_type 0x7f2db8c872a0 bfd SI
            size <integer_cst 0x7f2db9168df8 constant 32>
            unit-size <integer_cst 0x7f2db9168e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c87348>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f2db8c9bab0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7f2db8c957b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;44m =======node_fun:error========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path error  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:error========= [0m
[40;42m =======start_check_funciton:error========= [0m
[40;33m =======POP node_fun stack:error========= [0m
[40;44m =======node_fun:openp========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path openp  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre_check_funciton:openp========= [0m
[40;42m =======start_check_funciton:openp========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d510
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _1 = strdup (name_8(D));
    version:1
    ptr-info 0x7f2db8c957f8>
 <ssa_name 0x7f2db8c9d510
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _1 = strdup (name_8(D));
    version:1
    ptr-info 0x7f2db8c957f8>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = strdup (name_8(D));
_1 = strdup (name_8(D));
In function ‘openp’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                            ^
this stmt call this function :strdup
*filename_opened_6(D) = _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d510
    type <pointer_type 0x7f2db8c87000
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7f2db8c870a8>>
   
    def_stmt _1 = strdup (name_8(D));
    version:1
    ptr-info 0x7f2db8c957f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
   28 |         return __RANDBOOL;
      |                ^
_4 = _3 == 1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
# .MEM_17 = VDEF <.MEM_13>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d558
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d678
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d500 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c95828>
 <ssa_name 0x7f2db8c9d678
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d500 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c95828>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d678
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d500 name>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f2db8c95828>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:openp========= [0m
[40;44m =======node_fun:remote_filename_p========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path remote_filename_p  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre_check_funciton:remote_filename_p========= [0m
[40;42m =======start_check_funciton:remote_filename_p========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_6(D)>
_1 = strncmp (filename_4(D), "remote:", 7);
_1 = strncmp (filename_4(D), "remote:", 7);
In function ‘remote_filename_p’:
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
_2 = _1 == 0;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                                 ^
_5 = (int) _2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d900
    type <pointer_type 0x7f2db8c80888
        type <integer_type 0x7f2db8c807e0 char readonly QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c80888>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d680 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c95840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f2db8ca01c0
    type <array_type 0x7f2db8c8ab28
        type <integer_type 0x7f2db8c80738 char public QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
            pointer_to_this <pointer_type 0x7f2db8c87000>>
        DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f2db8c8aa80 type <integer_type 0x7f2db917d000 sizetype>
            DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d738 precision:64 min <integer_cst 0x7f2db9168be8 0> max <integer_cst 0x7f2db8c77840 7>>
        pointer_to_this <pointer_type 0x7f2db8c8abd0>>
    readonly constant static "remote:\000">

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_6(D)>
_1 = strncmp (filename_4(D), "remote:", 7);
_1 = strncmp (filename_4(D), "remote:", 7);
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
_2 = _1 == 0;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                                 ^
_5 = (int) _2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d870
    type <integer_type 0x7f2db917d5e8 int public SI
        size <integer_cst 0x7f2db9168df8 constant 32>
        unit-size <integer_cst 0x7f2db9168e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d5e8 precision:32 min <integer_cst 0x7f2db9168db0 -2147483648> max <integer_cst 0x7f2db9168dc8 2147483647>
        pointer_to_this <pointer_type 0x7f2db91849d8>>
   
    def_stmt _1 = strncmp (filename_4(D), "remote:", 7);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:remote_filename_p========= [0m
[40;44m =======node_fun:make_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_4/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f2db9a10b40 cleanup_chain
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7f2db9168ba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9d9d8
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d700 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c95858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9da20
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d780 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c95870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9da68
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f2db8c95888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_4/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9db40
    type <pointer_type 0x7f2db8c87e70
        type <pointer_type 0x7f2db8c80f18 type <record_type 0x7f2db8c80e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f2db9168bb8 constant 64>
            unit-size <integer_cst 0x7f2db9168bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db8c87e70>>
        public unsigned DI size <integer_cst 0x7f2db9168bb8 64> unit-size <integer_cst 0x7f2db9168bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d800 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c958a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9db88
    type <pointer_type 0x7f2db8c80498
        type <function_type 0x7f2db8c80348 make_cleanup_ftype type <void_type 0x7f2db917df18 void>
            QI
            size <integer_cst 0x7f2db9168ca8 constant 8>
            unit-size <integer_cst 0x7f2db9168cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f2db8c824b0 value <pointer_type 0x7f2db9184000>
                chain <tree_list 0x7f2db917cb18 value <void_type 0x7f2db917df18 void>>> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80498>>
        unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f2db8c8d880 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f2db8c958b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dbd0
    type <pointer_type 0x7f2db9184000
        type <void_type 0x7f2db917df18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f2db9184000>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db91899d8>>
    var <parm_decl 0x7f2db8c8d900 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f2db8c958d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/double_free_4/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dc18
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f2db8c958e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup2========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_4/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8c9dd38
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <var_decl 0x7f2db8ca6120 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f2db8c95918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;44m =======node_fun:do_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f2db9172188
    type <integer_type 0x7f2db8c807e0 char readonly QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
        pointer_to_this <pointer_type 0x7f2db8c80888>>
   
    arg:0 <string_cst 0x7f2db8ca4720
        type <array_type 0x7f2db8c8a0a8 type <integer_type 0x7f2db8c807e0 char>
            BLK
            size <integer_cst 0x7f2db8c777e0 constant 184>
            unit-size <integer_cst 0x7f2db8c777c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2db8c8a000>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2db9168f48 type <integer_type 0x7f2db917d5e8 int> constant 0>>
 <array_ref 0x7f2db9172188
    type <integer_type 0x7f2db8c807e0 char readonly QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
        pointer_to_this <pointer_type 0x7f2db8c80888>>
   
    arg:0 <string_cst 0x7f2db8ca4720
        type <array_type 0x7f2db8c8a0a8 type <integer_type 0x7f2db8c807e0 char>
            BLK
            size <integer_cst 0x7f2db8c777e0 constant 184>
            unit-size <integer_cst 0x7f2db8c777c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2db8c8a000>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2db9168f48 type <integer_type 0x7f2db917d5e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f2db9172188
    type <integer_type 0x7f2db8c807e0 char readonly QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
        pointer_to_this <pointer_type 0x7f2db8c80888>>
   
    arg:0 <string_cst 0x7f2db8ca4720
        type <array_type 0x7f2db8c8a0a8 type <integer_type 0x7f2db8c807e0 char>
            BLK
            size <integer_cst 0x7f2db8c777e0 constant 184>
            unit-size <integer_cst 0x7f2db8c777c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2db8c8a000>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2db9168f48 type <integer_type 0x7f2db917d5e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
In function ‘do_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_4/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘do_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/double_free_4/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f2db8ca8168
    type <pointer_type 0x7f2db8c80f18
        type <record_type 0x7f2db8c80e70 cleanup BLK
            size <integer_cst 0x7f2db9168f18 constant 256>
            unit-size <integer_cst 0x7f2db9186018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db8c80e70 fields <field_decl 0x7f2db8c832f8 next> context <translation_unit_decl 0x7f2db9173168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7f2db8c80f18>>
        public unsigned DI
        size <integer_cst 0x7f2db9168bb8 constant 64>
        unit-size <integer_cst 0x7f2db9168bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f2db8c87e70>>
    var <parm_decl 0x7f2db8c8db80 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f2db8c959a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;44m =======node_fun:do_my_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f2db9172188
    type <integer_type 0x7f2db8c807e0 char readonly QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
        pointer_to_this <pointer_type 0x7f2db8c80888>>
   
    arg:0 <string_cst 0x7f2db8ca4720
        type <array_type 0x7f2db8c8a0a8 type <integer_type 0x7f2db8c807e0 char>
            BLK
            size <integer_cst 0x7f2db8c777e0 constant 184>
            unit-size <integer_cst 0x7f2db8c777c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2db8c8a000>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2db9168f48 type <integer_type 0x7f2db917d5e8 int> constant 0>>
 <array_ref 0x7f2db9172188
    type <integer_type 0x7f2db8c807e0 char readonly QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
        pointer_to_this <pointer_type 0x7f2db8c80888>>
   
    arg:0 <string_cst 0x7f2db8ca4720
        type <array_type 0x7f2db8c8a0a8 type <integer_type 0x7f2db8c807e0 char>
            BLK
            size <integer_cst 0x7f2db8c777e0 constant 184>
            unit-size <integer_cst 0x7f2db8c777c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2db8c8a000>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2db9168f48 type <integer_type 0x7f2db917d5e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f2db9172188
    type <integer_type 0x7f2db8c807e0 char readonly QI
        size <integer_cst 0x7f2db9168ca8 constant 8>
        unit-size <integer_cst 0x7f2db9168cc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f2db917d3f0 precision:8 min <integer_cst 0x7f2db8c77768 -128> max <integer_cst 0x7f2db8c77750 127>
        pointer_to_this <pointer_type 0x7f2db8c80888>>
   
    arg:0 <string_cst 0x7f2db8ca4720
        type <array_type 0x7f2db8c8a0a8 type <integer_type 0x7f2db8c807e0 char>
            BLK
            size <integer_cst 0x7f2db8c777e0 constant 184>
            unit-size <integer_cst 0x7f2db8c777c8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f2db8c8a000>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f2db9168f48 type <integer_type 0x7f2db917d5e8 int> constant 0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_4/../include/common.h:107:25: warning: use location
  107 |                         printf("cleanup!!!!! =========\n");
      |                         ^
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
__builtin_puts (&"cleanup!!!!! ========="[0]);
./benchmarks/binutils/double_free_4/../include/common.h:107:25: warning: use location
this stmt call this function :__builtin_puts
trace fucntion name:__builtin_puts 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
symfile_bfd_open ("test");
do_cleanups (&sentinel_cleanup);
return 0;

=======Mapping node_fun:symfile_bfd_open=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = remote_filename_p (name_8(D));
if (_1 != 0)
  goto <bb 3>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 365072224]:
sym_bfd_24 = remote_bfd_open (name_8(D));
if (sym_bfd_24 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 146029]:
error ("can\'t open to read symbols", name_8(D));

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 365072224]:
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 708669600]:
name_10 = strdup (name_8(D));
_2 = getenv ("PATH");
desc_13 = openp (_2, name_10, &absolute_name);
if (desc_13 < 0)
  goto <bb 7>; [25.50%]
else
  goto <bb 8>; [74.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 180710750]:
make_cleanup (free, name_10);
error ("", name_10);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 708669600]:
free (name_10);
name_17 = absolute_name;
make_cleanup (free, name_17);
sym_bfd_20 = gdb_bfd_open (name_17);
if (sym_bfd_20 == 0B)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 283467]:
make_cleanup (free, name_17);
error ("can\'t open to read symbols", name_17);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# _3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
absolute_name ={v} {CLOBBER};
return _3;

=======Mapping node_fun:remote_bfd_open=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_4 = gdb_bfd_open (name_2(D));
return _4;

=======Mapping node_fun:gdb_bfd_open=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = MEM[(int *)name_7(D)];
printf ("%d\n", _1);
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 3>; [38.32%]
else
  goto <bb 4>; [61.68%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 411457864]:
abfd_11 = malloc (4);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _4 = PHI <0B(2), abfd_11(3)>
return _4;

=======Mapping node_fun:error=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
printf ("%s: %s\n", msg_2(D), s_3(D));
return;

=======Mapping node_fun:openp=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (filename_opened_6(D) != 0B)
  goto <bb 3>; [53.47%]
else
  goto <bb 4>; [46.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 574129753]:
_1 = strdup (name_8(D));
*filename_opened_6(D) = _1;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_2 = rand ();
_3 = _2 % 2;
_4 = _3 == 1;
_12 = (int) _4;
return _12;

=======Mapping node_fun:remote_filename_p=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = strncmp (filename_4(D), "remote:", 7);
_2 = _1 == 0;
_5 = (int) _2;
return _5;

=======Mapping node_fun:make_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
return _5;

=======Mapping node_fun:make_my_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
return _6;

=======Mapping node_fun:make_my_cleanup2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_4 = malloc (32);
old_chain_6 = *pmy_chain_5(D);
_1 = *pmy_chain_5(D);
new_4->next = _1;
new_4->function = function_8(D);
new_4->free_arg = free_arg_10(D);
new_4->arg = arg_12(D);
*pmy_chain_5(D) = new_4;
if (old_chain_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return old_chain_6;

=======Mapping node_fun:do_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
do_my_cleanups (&cleanup_chain, old_chain_2(D));
return;

=======Mapping node_fun:do_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ptr_12->next;
*pmy_chain_11(D) = _1;
_2 = ptr_12->function;
_3 = ptr_12->arg;
_2 (_3);
__builtin_puts (&"cleanup!!!!! ========="[0]);
_4 = ptr_12->arg;
printf ("%x\n", _4);
_5 = ptr_12->free_arg;
if (_5 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_6 = ptr_12->free_arg;
_7 = ptr_12->arg;
_6 (_7);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
free (ptr_12);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
ptr_12 = *pmy_chain_11(D);
if (ptr_12 != old_chain_13(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 2 [0m
[40;34m    all ptable point : 43 [0m
[40;34m    analyzable ptable point : 38 [0m
[40;34m    used_stmt array stack totalsize of : 0.002520 mb[0m
[40;34m    collect time: : 0.001545 s [0m
[40;34m    algorithm time: 0.337101 s [0m
[40;34m    gimple stmt count : : 83 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:54 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 74%)
 phase opt and generate             :   0.12 (100%)   0.26 (100%)   0.38 (100%)   698k ( 24%)
 callgraph functions expansion      :   0.02 ( 17%)   0.01 (  4%)   0.04 ( 11%)   582k ( 20%)
 ipa lto gimple in                  :   0.01 (  8%)   0.00 (  0%)   0.00 (  0%)    77k (  3%)
 cfg cleanup                        :   0.01 (  8%)   0.00 (  0%)   0.00 (  0%)   112  (  0%)
 loop init                          :   0.01 (  8%)   0.00 (  0%)   0.00 (  0%)    37k (  1%)
 integrated RA                      :   0.00 (  0%)   0.01 (  4%)   0.01 (  3%)   292k ( 10%)
 LRA hard reg assignment            :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)     0  (  0%)
 plugin execution                   :   0.09 ( 75%)   0.25 ( 96%)   0.34 ( 89%)  1264  (  0%)
 initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)    12k (  0%)
 rest of compilation                :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)    30k (  1%)
 TOTAL                              :   0.12          0.26          0.38         2911k
