In file included from ./benchmarks/binutils/double_free_4/binutils_df_4.c:7:0:
./benchmarks/binutils/double_free_4/../include/common.h: In function â€˜discard_my_cleanupsâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/double_free_4/../include/common.h: In function â€˜do_my_cleanupsâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜remote_filename_pâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:9: warning: implicit declaration of function â€˜strncmpâ€™ [-Wimplicit-function-declaration]
  return strncmp (filename, "remote:", 7) == 0;
         ^~~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜openpâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:23: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
    *filename_opened = strdup(name); /* allocation site */
                       ^~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:23: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜symfile_bfd_openâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:9: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
  name = strdup (name); /* allocation site */
         ^~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:8: warning: implicit declaration of function â€˜timeâ€™; did you mean â€˜dieâ€™? [-Wimplicit-function-declaration]
  srand(time(NULL));
        ^~~~
        die
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
succs:= 3
succs:= 2
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 7
succs:= 3
succs:= 7
--------GIMPLE Cond -------
succs:= 10
succs:= 10
--------GIMPLE Cond -------
succs:= 13
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = __printf_chk (1, "%s: %s\n", msg_2(D), s_3(D));
# .MEM_15 = VDEF <.MEM_14(D)>
_12 = __printf_chk (1, "%d\n", _1);
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
# .MEM_4 = VDEF <.MEM_3(D)>
_1 = time (0B);
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
# VUSE <.MEM_5>
_16 = strncmp ("test", "remote:", 7);
# .MEM_65 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");
# .MEM_67 = VDEF <.MEM_65>
error ("can\'t open to read symbols", "test");
# .MEM_46 = VDEF <.MEM_5>
name_10 = strdup ("test");
# .MEM_47 = VDEF <.MEM_46>
_11 = getenv ("PATH");
# .MEM_48 = VDEF <.MEM_47>
_20 = strdup (name_10);
# .MEM_50 = VDEF <.MEM_48>
_21 = rand ();
# .MEM_52 = VDEF <.MEM_50>
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
# .MEM_55 = VDEF <.MEM_52>
error ("", name_10);
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
# .MEM_72 = VDEF <.MEM_71>
_35 = __printf_chk (1, "cleanup!!!!! =========\n");
# .MEM_73 = VDEF <.MEM_72>
_37 = __printf_chk (1, "%x\n", _36);
 <var_decl 0x7fb2a28e8b40 cleanup_chain
    type <pointer_type 0x7fb2a167d9d8
        type <record_type 0x7fb2a167da80 cleanup BLK
            size <integer_cst 0x7fb2a1b53f48 constant 256>
            unit size <integer_cst 0x7fb2a1b6f048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fb2a167da80 fields <field_decl 0x7fb2a167f2f8 next> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167d9d8> chain <type_decl 0x7fb2a167f390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb2a167dbd0>>
    addressable static unsigned DI file ./benchmarks/binutils/double_free_4/../include/common.h line 49 col 24 size <integer_cst 0x7fb2a1b53be8 64> unit size <integer_cst 0x7fb2a1b53c00 8>
    align 64 context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7fb2a1b53bd0>>
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:make_my_cleanup2========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb2a1b5baf8
    type <pointer_type 0x7fb2a167d9d8
        type <record_type 0x7fb2a167da80 cleanup BLK
            size <integer_cst 0x7fb2a1b53f48 constant 256>
            unit size <integer_cst 0x7fb2a1b6f048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fb2a167da80 fields <field_decl 0x7fb2a167f2f8 next> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167d9d8> chain <type_decl 0x7fb2a167f390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb2a167dbd0>>
    var <var_decl 0x7fb2a28e8d80 new>
    def_stmt new_4 = malloc (32);
    version 4
    ptr-info 0x7fb2a1680f18>
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4 = malloc (32);
./benchmarks/binutils/double_free_4/../include/common.h:125:19: warning: use location
   struct cleanup *new
                   ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5baf8
    type <pointer_type 0x7fb2a167d9d8
        type <record_type 0x7fb2a167da80 cleanup BLK
            size <integer_cst 0x7fb2a1b53f48 constant 256>
            unit size <integer_cst 0x7fb2a1b6f048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fb2a167da80 fields <field_decl 0x7fb2a167f2f8 next> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167d9d8> chain <type_decl 0x7fb2a167f390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb2a167dbd0>>
    var <var_decl 0x7fb2a28e8d80 new>
    def_stmt new_4 = malloc (32);
    version 4
    ptr-info 0x7fb2a1680f18>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a1b5baf8
    type <pointer_type 0x7fb2a167d9d8
        type <record_type 0x7fb2a167da80 cleanup BLK
            size <integer_cst 0x7fb2a1b53f48 constant 256>
            unit size <integer_cst 0x7fb2a1b6f048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fb2a167da80 fields <field_decl 0x7fb2a167f2f8 next> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167d9d8> chain <type_decl 0x7fb2a167f390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb2a167dbd0>>
    var <var_decl 0x7fb2a28e8d80 new>
    def_stmt new_4 = malloc (32);
    version 4
    ptr-info 0x7fb2a1680f18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb2a1680c78 type <integer_type 0x7fb2a1b677e0 long unsigned int> constant 32>
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;44m =======node_fun:error========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path error  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:error========= [0m
[40;42m =======start_check_funciton:error========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb2a1b53f90 type <integer_type 0x7fb2a1b675e8 int> constant 1>
[40;33m =======POP node_fun stack:error========= [0m
[40;44m =======node_fun:gdb_bfd_open========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb2a169b1f8
    type <pointer_type 0x7fb2a167df18
        type <integer_type 0x7fb2a167de70 bfd SI
            size <integer_cst 0x7fb2a1b53e28 constant 32>
            unit size <integer_cst 0x7fb2a1b53e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167df18>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fb2a1699090 abfd>
    def_stmt abfd_10 = malloc (4);
    version 10
    ptr-info 0x7fb2a16b4018>
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜gdb_bfd_openâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_4 = PHI <0B(2), abfd_10(3)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_11 = abfd_10;
./benchmarks/binutils/double_free_4/binutils_df_4.c:41:10: warning: use location
   return abfd;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
abfd_10 = malloc (4);
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:8: warning: use location
   bfd *abfd = malloc(sizeof(bfd));
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb2a169b1f8
    type <pointer_type 0x7fb2a167df18
        type <integer_type 0x7fb2a167de70 bfd SI
            size <integer_cst 0x7fb2a1b53e28 constant 32>
            unit size <integer_cst 0x7fb2a1b53e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167df18>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fb2a1699090 abfd>
    def_stmt abfd_10 = malloc (4);
    version 10
    ptr-info 0x7fb2a16b4018>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a169b1f8
    type <pointer_type 0x7fb2a167df18
        type <integer_type 0x7fb2a167de70 bfd SI
            size <integer_cst 0x7fb2a1b53e28 constant 32>
            unit size <integer_cst 0x7fb2a1b53e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167df18>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fb2a1699090 abfd>
    def_stmt abfd_10 = malloc (4);
    version 10
    ptr-info 0x7fb2a16b4018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb2a1b53f90 type <integer_type 0x7fb2a1b675e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7fb2a169b0d8
    type <integer_type 0x7fb2a1b675e8 int public SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647>
        pointer_to_this <pointer_type 0x7fb2a1b6ea80>>
   
    def_stmt _2 = rand ();
    version 2>
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_3 = _2 % 2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:6: warning: use location
  if (__RANDBOOL) {
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (_3 == 1)
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:5: warning: use location
  if (__RANDBOOL) {
     ^
if (_3 == 1)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:5: warning: use location
Cond in fucntion gdb_bfd_open basic block 2
 ================== possible direct basic block ================= 
from gdb_bfd_open basic block 3
 ================== possible direct basic block ================= 
from gdb_bfd_open basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:6: warning: use location
  if (__RANDBOOL) {
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb2a169b0d8
    type <integer_type 0x7fb2a1b675e8 int public SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647>
        pointer_to_this <pointer_type 0x7fb2a1b6ea80>>
   
    def_stmt _2 = rand ();
    version 2>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a169b0d8
    type <integer_type 0x7fb2a1b675e8 int public SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647>
        pointer_to_this <pointer_type 0x7fb2a1b6ea80>>
   
    def_stmt _2 = rand ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb2a1680cf0 type <integer_type 0x7fb2a1b677e0 long unsigned int> constant 4>
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 11 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path error  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:error========= [0m
[40;42m =======start_check_funciton:error========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb2a1b53f90 type <integer_type 0x7fb2a1b675e8 int> constant 1>
[40;33m =======POP node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb2a1b5baf8
    type <pointer_type 0x7fb2a167d9d8
        type <record_type 0x7fb2a167da80 cleanup BLK
            size <integer_cst 0x7fb2a1b53f48 constant 256>
            unit size <integer_cst 0x7fb2a1b6f048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fb2a167da80 fields <field_decl 0x7fb2a167f2f8 next> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167d9d8> chain <type_decl 0x7fb2a167f390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb2a167dbd0>>
    var <var_decl 0x7fb2a28e8d80 new>
    def_stmt new_4 = malloc (32);
    version 4
    ptr-info 0x7fb2a1680f18>
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->arg = arg_12(D);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->arg = arg_12(D);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->function = function_8(D);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->function = function_8(D);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->next = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4->next = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
new_4 = malloc (32);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:125:19: warning: use location
   struct cleanup *new
                   ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5baf8
    type <pointer_type 0x7fb2a167d9d8
        type <record_type 0x7fb2a167da80 cleanup BLK
            size <integer_cst 0x7fb2a1b53f48 constant 256>
            unit size <integer_cst 0x7fb2a1b6f048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fb2a167da80 fields <field_decl 0x7fb2a167f2f8 next> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167d9d8> chain <type_decl 0x7fb2a167f390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb2a167dbd0>>
    var <var_decl 0x7fb2a28e8d80 new>
    def_stmt new_4 = malloc (32);
    version 4
    ptr-info 0x7fb2a1680f18>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a1b5baf8
    type <pointer_type 0x7fb2a167d9d8
        type <record_type 0x7fb2a167da80 cleanup BLK
            size <integer_cst 0x7fb2a1b53f48 constant 256>
            unit size <integer_cst 0x7fb2a1b6f048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7fb2a167da80 fields <field_decl 0x7fb2a167f2f8 next> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167d9d8> chain <type_decl 0x7fb2a167f390 D.3990>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7fb2a167dbd0>>
    var <var_decl 0x7fb2a28e8d80 new>
    def_stmt new_4 = malloc (32);
    version 4
    ptr-info 0x7fb2a1680f18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb2a1680c78 type <integer_type 0x7fb2a1b677e0 long unsigned int> constant 32>
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb2a169b1f8
    type <pointer_type 0x7fb2a167df18
        type <integer_type 0x7fb2a167de70 bfd SI
            size <integer_cst 0x7fb2a1b53e28 constant 32>
            unit size <integer_cst 0x7fb2a1b53e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167df18>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fb2a1699090 abfd>
    def_stmt abfd_10 = malloc (4);
    version 10
    ptr-info 0x7fb2a16b4018>
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜gdb_bfd_openâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), abfd_10(3)>
bb index := 4
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
_4 = PHI <0B(2), abfd_10(3)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜gdb_bfd_openâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_11 = abfd_10;
bb index := 3
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_11 = abfd_10;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:41:10: warning: use location
   return abfd;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜gdb_bfd_openâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
abfd_10 = malloc (4);
bb index := 3
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
abfd_10 = malloc (4);
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:8: warning: use location
   bfd *abfd = malloc(sizeof(bfd));
        ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7fb2a169b1f8
    type <pointer_type 0x7fb2a167df18
        type <integer_type 0x7fb2a167de70 bfd SI
            size <integer_cst 0x7fb2a1b53e28 constant 32>
            unit size <integer_cst 0x7fb2a1b53e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167df18>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fb2a1699090 abfd>
    def_stmt abfd_10 = malloc (4);
    version 10
    ptr-info 0x7fb2a16b4018>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a169b1f8
    type <pointer_type 0x7fb2a167df18
        type <integer_type 0x7fb2a167de70 bfd SI
            size <integer_cst 0x7fb2a1b53e28 constant 32>
            unit size <integer_cst 0x7fb2a1b53e40 constant 4>
            align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647> context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fb2a167df18>>
        public unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7fb2a1699090 abfd>
    def_stmt abfd_10 = malloc (4);
    version 10
    ptr-info 0x7fb2a16b4018>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb2a1b53f90 type <integer_type 0x7fb2a1b675e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7fb2a169b0d8
    type <integer_type 0x7fb2a1b675e8 int public SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647>
        pointer_to_this <pointer_type 0x7fb2a1b6ea80>>
   
    def_stmt _2 = rand ();
    version 2>
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜gdb_bfd_openâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 % 2;
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_3 = _2 % 2;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:6: warning: use location
  if (__RANDBOOL) {
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜gdb_bfd_openâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 1)
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
if (_3 == 1)
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:5: warning: use location
  if (__RANDBOOL) {
     ^
if (_3 == 1)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:5: warning: use location
Cond in fucntion gdb_bfd_open basic block 2
 ================== possible direct basic block ================= 
from gdb_bfd_open basic block 3
 ================== possible direct basic block ================= 
from gdb_bfd_open basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
In function â€˜gdb_bfd_openâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
_2 = rand ();
bb index := 2
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 14

======================================================================
_2 = rand ();
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:6: warning: use location
  if (__RANDBOOL) {
      ^
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb2a169b0d8
    type <integer_type 0x7fb2a1b675e8 int public SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647>
        pointer_to_this <pointer_type 0x7fb2a1b6ea80>>
   
    def_stmt _2 = rand ();
    version 2>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a169b0d8
    type <integer_type 0x7fb2a1b675e8 int public SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647>
        pointer_to_this <pointer_type 0x7fb2a1b6ea80>>
   
    def_stmt _2 = rand ();
    version 2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb2a1680cf0 type <integer_type 0x7fb2a1b677e0 long unsigned int> constant 4>
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
# .MEM_46 = VDEF <.MEM_5>
name_10 = strdup ("test");

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================
_16 = strncmp ("test", "remote:", 7);
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:9: warning: use location
  return strncmp (filename, "remote:", 7) == 0;
         ^
this stmt is child function---strncmp-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");
bb index := 3
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");
bb index := 3
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");
bb index := 3
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_65 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");
bb index := 3
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 14

======================================================================
_19 = gdb_bfd_open ("test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:9: warning: use location
  return gdb_bfd_open(name);
         ^
this stmt is child function---gdb_bfd_open-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_65>
error ("can\'t open to read symbols", "test");
bb index := 4
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_65>
error ("can\'t open to read symbols", "test");
bb index := 4
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_65>
error ("can\'t open to read symbols", "test");
bb index := 4
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_65>
error ("can\'t open to read symbols", "test");
bb index := 4
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_65>
error ("can\'t open to read symbols", "test");
bb index := 4
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_67 = VDEF <.MEM_65>
error ("can\'t open to read symbols", "test");
bb index := 4
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 14

======================================================================
error ("can\'t open to read symbols", "test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:5: warning: use location
     error (("can't open to read symbols"), name);
     ^
this stmt is child function---error-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 
name_10 = strdup ("test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:7: warning: use location
  name = strdup (name); /* allocation site */
       ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: use location
  free (name);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:4: warning: use location
    error ("", name);
    ^
this stmt is child function---error-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_53 = _26;
lto1: warning: use location
_25 = _53;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^
_54 = _25;
lto1: warning: use location
_20 = strdup (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:23: warning: use location
    *filename_opened = strdup(name); /* allocation site */
                       ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 
absolute_name_76 = _20;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:21: warning: use location
    *filename_opened = strdup(name); /* allocation site */
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
name_13 = absolute_name_76;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:7: warning: use location
  name = absolute_name;
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:4: warning: use location
    error (("can't open to read symbols"), name);
    ^
this stmt is child function---error-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_62 = _30;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_29 = _62;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_63 = _29;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:10: warning: use location
  sym_bfd = gdb_bfd_open (name);
          ^
this stmt is child function---gdb_bfd_open-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
_69 = _15;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:5: warning: use location
  if (!sym_bfd)
     ^
if (sym_bfd_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:5: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_58 = _28;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_27 = _58;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_59 = _27;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a1b5b9d8
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_10 = strdup ("test");
    version 10
    ptr-info 0x7fb2a16b4060>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: use location
  free (name);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
name_13 = absolute_name_76;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:7: warning: use location
  name = absolute_name;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
name_13 = absolute_name_76;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:7: warning: use location
  name = absolute_name;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:4: warning: use location
    error (("can't open to read symbols"), name);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:4: warning: use location
    error (("can't open to read symbols"), name);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_62 = _30;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_62 = _30;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_29 = _62;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_29 = _62;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_63 = _29;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_63 = _29;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:10: warning: use location
  sym_bfd = gdb_bfd_open (name);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:10: warning: use location
  sym_bfd = gdb_bfd_open (name);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:4: warning: Use after free error!: free location 
    free (ptr);
    ^
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_69 = _15;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_69 = _15;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:5: warning: use location
  if (!sym_bfd)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:5: warning: use location
  if (!sym_bfd)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_58 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_58 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_27 = _58;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_27 = _58;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_59 = _27;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_59 = _27;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7fb2a16a5828
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
   
    def_stmt _20 = strdup (name_10);
    version 20
    ptr-info 0x7fb2a16b40f0>
# .MEM_48 = VDEF <.MEM_47>
_20 = strdup (name_10);

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: use location
  free (name);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:4: warning: use location
    error ("", name);
    ^
this stmt is child function---error-----

 ================== trace ================== 
 <ssa_name 0x7fb2a16a5828
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
   
    def_stmt _20 = strdup (name_10);
    version 20
    ptr-info 0x7fb2a16b40f0>
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
 <ssa_name 0x7fb2a16a5828
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
   
    def_stmt _20 = strdup (name_10);
    version 20
    ptr-info 0x7fb2a16b40f0>
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_53 = _26;
lto1: warning: use location
_25 = _53;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^
_54 = _25;
lto1: warning: use location
_20 = strdup (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:23: warning: use location
    *filename_opened = strdup(name); /* allocation site */
                       ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7fb2a16a5828
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
   
    def_stmt _20 = strdup (name_10);
    version 20
    ptr-info 0x7fb2a16b40f0>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:1 
absolute_name_76 = _20;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:21: warning: use location
    *filename_opened = strdup(name); /* allocation site */
                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
name_13 = absolute_name_76;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
name_13 = absolute_name_76;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:7: warning: use location
  name = absolute_name;
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:4: warning: use location
    error (("can't open to read symbols"), name);
    ^
this stmt is child function---error-----

 ================== trace ================== 
 <ssa_name 0x7fb2a16a5828
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
   
    def_stmt _20 = strdup (name_10);
    version 20
    ptr-info 0x7fb2a16b40f0>
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
 <ssa_name 0x7fb2a16a5828
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
   
    def_stmt _20 = strdup (name_10);
    version 20
    ptr-info 0x7fb2a16b40f0>
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_62 = _30;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_29 = _62;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_63 = _29;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:10: warning: use location
  sym_bfd = gdb_bfd_open (name);
          ^
this stmt is child function---gdb_bfd_open-----

 ================== trace ================== 
 <ssa_name 0x7fb2a16a5828
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
   
    def_stmt _20 = strdup (name_10);
    version 20
    ptr-info 0x7fb2a16b40f0>
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
_69 = _15;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:5: warning: use location
  if (!sym_bfd)
     ^
if (sym_bfd_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:5: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
 <ssa_name 0x7fb2a16a5828
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
   
    def_stmt _20 = strdup (name_10);
    version 20
    ptr-info 0x7fb2a16b40f0>
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_58 = _28;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_27 = _58;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_59 = _27;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a16a5828
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
   
    def_stmt _20 = strdup (name_10);
    version 20
    ptr-info 0x7fb2a16b40f0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
name_13 = absolute_name_76;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:7: warning: use location
  name = absolute_name;
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:4: warning: use location
    error (("can't open to read symbols"), name);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_62 = _30;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_29 = _62;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_63 = _29;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:10: warning: use location
  sym_bfd = gdb_bfd_open (name);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:4: warning: Use after free error!: free location 
    free (ptr);
    ^
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_69 = _15;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:5: warning: use location
  if (!sym_bfd)
     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_58 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
_27 = _58;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: Use after free error!: free location 
  free (name);
  ^
_59 = _27;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fb2a1b6f000 type <pointer_type 0x7fb2a1b6e0a8> constant 0>

dot graph START

======================================================================
 <ssa_name 0x7fb2a169b4c8
    type <integer_type 0x7fb2a1b67690 unsigned int public unsigned SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b67690 precision 32 min <integer_cst 0x7fb2a1b53e58 0> max <integer_cst 0x7fb2a1b53e10 4294967295>
        pointer_to_this <pointer_type 0x7fb2a1b73888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
srand (_2);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:2: warning: use location
  srand(time(NULL));
  ^
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7fb2a169b4c8
    type <integer_type 0x7fb2a1b67690 unsigned int public unsigned SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b67690 precision 32 min <integer_cst 0x7fb2a1b53e58 0> max <integer_cst 0x7fb2a1b53e10 4294967295>
        pointer_to_this <pointer_type 0x7fb2a1b73888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
srand (_2);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:2: warning: use location
this stmt is child function---srand-----

 ================== trace ================== 
 <ssa_name 0x7fb2a169b4c8
    type <integer_type 0x7fb2a1b67690 unsigned int public unsigned SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b67690 precision 32 min <integer_cst 0x7fb2a1b53e58 0> max <integer_cst 0x7fb2a1b53e10 4294967295>
        pointer_to_this <pointer_type 0x7fb2a1b73888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a169b4c8
    type <integer_type 0x7fb2a1b67690 unsigned int public unsigned SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b67690 precision 32 min <integer_cst 0x7fb2a1b53e58 0> max <integer_cst 0x7fb2a1b53e10 4294967295>
        pointer_to_this <pointer_type 0x7fb2a1b73888>>
   
    def_stmt _2 = (unsigned int) _1;
    version 2>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: use location
  free (name);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a07c0
    type <pointer_type 0x7fb2a1685c78
        type <array_type 0x7fb2a1685bd0 type <integer_type 0x7fb2a167dd20 char>
            BLK
            size <integer_cst 0x7fb2a1680240 constant 40>
            unit size <integer_cst 0x7fb2a1680228 constant 5>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fb2a1685b28>
            pointer_to_this <pointer_type 0x7fb2a1685c78>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fb2a1671c20 type <array_type 0x7fb2a1685bd0>
        readonly constant static "test\000">
    ./benchmarks/binutils/double_free_4/binutils_df_4.c:98:19 start: ./benchmarks/binutils/double_free_4/binutils_df_4.c:98:19 finish: ./benchmarks/binutils/double_free_4/binutils_df_4.c:98:19>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a08a0
    type <pointer_type 0x7fb2a1685c78
        type <array_type 0x7fb2a1685bd0 type <integer_type 0x7fb2a167dd20 char>
            BLK
            size <integer_cst 0x7fb2a1680240 constant 40>
            unit size <integer_cst 0x7fb2a1680228 constant 5>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fb2a1685b28>
            pointer_to_this <pointer_type 0x7fb2a1685c78>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fb2a1671c20 type <array_type 0x7fb2a1685bd0>
        readonly constant static "test\000">
    ./benchmarks/binutils/double_free_4/binutils_df_4.c:98:19 start: ./benchmarks/binutils/double_free_4/binutils_df_4.c:98:19 finish: ./benchmarks/binutils/double_free_4/binutils_df_4.c:98:19>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a0220
    type <pointer_type 0x7fb2a16887e0
        type <array_type 0x7fb2a1688738 type <integer_type 0x7fb2a167dd20 char>
            BLK
            size <integer_cst 0x7fb2a16802d0 constant 216>
            unit size <integer_cst 0x7fb2a16802b8 constant 27>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fb2a1688690>
            pointer_to_this <pointer_type 0x7fb2a16887e0>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fb2a1b528d0 type <array_type 0x7fb2a1688738>
        readonly constant static "can't open to read symbols\000">
    ./benchmarks/binutils/double_free_4/binutils_df_4.c:61:12 start: ./benchmarks/binutils/double_free_4/binutils_df_4.c:61:12 finish: ./benchmarks/binutils/double_free_4/binutils_df_4.c:61:12>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a02a0
    type <pointer_type 0x7fb2a1685c78
        type <array_type 0x7fb2a1685bd0 type <integer_type 0x7fb2a167dd20 char>
            BLK
            size <integer_cst 0x7fb2a1680240 constant 40>
            unit size <integer_cst 0x7fb2a1680228 constant 5>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fb2a1685b28>
            pointer_to_this <pointer_type 0x7fb2a1685c78>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fb2a1671c20 type <array_type 0x7fb2a1685bd0>
        readonly constant static "test\000">
    ./benchmarks/binutils/double_free_4/binutils_df_4.c:98:19 start: ./benchmarks/binutils/double_free_4/binutils_df_4.c:98:19 finish: ./benchmarks/binutils/double_free_4/binutils_df_4.c:98:19>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a0320
    type <pointer_type 0x7fb2a1685c78
        type <array_type 0x7fb2a1685bd0 type <integer_type 0x7fb2a167dd20 char>
            BLK
            size <integer_cst 0x7fb2a1680240 constant 40>
            unit size <integer_cst 0x7fb2a1680228 constant 5>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fb2a1685b28>
            pointer_to_this <pointer_type 0x7fb2a1685c78>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fb2a1671f40 type <array_type 0x7fb2a1685bd0>
        readonly constant static "PATH\000">
    ./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16 start: ./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16 finish: ./benchmarks/binutils/double_free_4/binutils_df_4.c:68:16>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb2a16a5870
    type <integer_type 0x7fb2a1b675e8 int public SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647>
        pointer_to_this <pointer_type 0x7fb2a1b6ea80>>
   
    def_stmt _21 = rand ();
    version 21>
# .MEM_50 = VDEF <.MEM_48>
_21 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================
_22 = _21 % 2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:9: warning: use location
  return __RANDBOOL;
         ^
_21 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:9: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7fb2a16a5870
    type <integer_type 0x7fb2a1b675e8 int public SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647>
        pointer_to_this <pointer_type 0x7fb2a1b6ea80>>
   
    def_stmt _21 = rand ();
    version 21>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a16a5870
    type <integer_type 0x7fb2a1b675e8 int public SI
        size <integer_cst 0x7fb2a1b53e28 constant 32>
        unit size <integer_cst 0x7fb2a1b53e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7fb2a1b675e8 precision 32 min <integer_cst 0x7fb2a1b53de0 -2147483648> max <integer_cst 0x7fb2a1b53df8 2147483647>
        pointer_to_this <pointer_type 0x7fb2a1b6ea80>>
   
    def_stmt _21 = rand ();
    version 21>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_56 = VDEF <.MEM_41>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:2: warning: use location
  free (name);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a0c20
    type <pointer_type 0x7fb2a167dbd0
        type <pointer_type 0x7fb2a167d9d8 type <record_type 0x7fb2a167da80 cleanup>
            public unsigned DI
            size <integer_cst 0x7fb2a1b53be8 constant 64>
            unit size <integer_cst 0x7fb2a1b53c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb2a167dbd0>>
        public unsigned DI size <integer_cst 0x7fb2a1b53be8 64> unit size <integer_cst 0x7fb2a1b53c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7fb2a28e8b40 cleanup_chain type <pointer_type 0x7fb2a167d9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_4/../include/common.h line 49 col 24 size <integer_cst 0x7fb2a1b53be8 64> unit size <integer_cst 0x7fb2a1b53c00 8>
        align 64 context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7fb2a1b53bd0>>
    ./benchmarks/binutils/double_free_4/../include/common.h:151:10 start: ./benchmarks/binutils/double_free_4/../include/common.h:151:10 finish: ./benchmarks/binutils/double_free_4/../include/common.h:151:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a04a0
    type <pointer_type 0x7fb2a1688c78
        type <array_type 0x7fb2a1688bd0 type <integer_type 0x7fb2a167dd20 char>
            QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fb2a1688b28>
            pointer_to_this <pointer_type 0x7fb2a1688c78>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fb2a1680d68 type <array_type 0x7fb2a1688bd0>
        readonly constant static "\000">
    ./benchmarks/binutils/double_free_4/binutils_df_4.c:73:11 start: ./benchmarks/binutils/double_free_4/binutils_df_4.c:73:11 finish: ./benchmarks/binutils/double_free_4/binutils_df_4.c:73:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a0d40
    type <pointer_type 0x7fb2a167dbd0
        type <pointer_type 0x7fb2a167d9d8 type <record_type 0x7fb2a167da80 cleanup>
            public unsigned DI
            size <integer_cst 0x7fb2a1b53be8 constant 64>
            unit size <integer_cst 0x7fb2a1b53c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb2a167dbd0>>
        public unsigned DI size <integer_cst 0x7fb2a1b53be8 64> unit size <integer_cst 0x7fb2a1b53c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7fb2a28e8b40 cleanup_chain type <pointer_type 0x7fb2a167d9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_4/../include/common.h line 49 col 24 size <integer_cst 0x7fb2a1b53be8 64> unit size <integer_cst 0x7fb2a1b53c00 8>
        align 64 context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7fb2a1b53bd0>>
    ./benchmarks/binutils/double_free_4/../include/common.h:151:10 start: ./benchmarks/binutils/double_free_4/../include/common.h:151:10 finish: ./benchmarks/binutils/double_free_4/../include/common.h:151:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fb2a1b5b798
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_13 = absolute_name_76;
    version 13
    ptr-info 0x7fb2a16b4090>
name_13 = absolute_name_76;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_64 = VDEF <.MEM_61>
error ("can\'t open to read symbols", name_13);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:4: warning: use location
    error (("can't open to read symbols"), name);
    ^
this stmt is child function---error-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b798
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_13 = absolute_name_76;
    version 13
    ptr-info 0x7fb2a16b4090>
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:error========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_61 = VDEF <.MEM_60>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b798
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_13 = absolute_name_76;
    version 13
    ptr-info 0x7fb2a16b4090>
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_62 = _30;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_62 = _30;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_29 = _62;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_29 = _62;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_63 = _29;
bb index := 8
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 14

======================================================================
_63 = _29;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_60 = VDEF <.MEM_57>
sym_bfd_14 = gdb_bfd_open (name_13);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:10: warning: use location
  sym_bfd = gdb_bfd_open (name);
          ^
this stmt is child function---gdb_bfd_open-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b798
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_13 = absolute_name_76;
    version 13
    ptr-info 0x7fb2a16b4090>
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;46m =======add node_fun stack:__printf_chk========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_69 = _15;
bb index := 9
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 9 ,possiable got to succ := 14

======================================================================
_69 = _15;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (sym_bfd_14 == 0B)
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:5: warning: use location
  if (!sym_bfd)
     ^
if (sym_bfd_14 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:5: warning: use location
Cond in fucntion main basic block 7
 ================== possible direct basic block ================= 
from main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_56>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
 <ssa_name 0x7fb2a1b5b798
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_13 = absolute_name_76;
    version 13
    ptr-info 0x7fb2a16b4090>
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with name ========= [0m
[40;36m ======= relate stmt argument:name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_58 = _28;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_58 = _28;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_27 = _58;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_27 = _58;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
   return old_chain;
          ^
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/double_free_4/../include/common.h:138:10: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_13>
return _4;
lto1: warning: use location
beacuse in succ := 4 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_59 = _27;
bb index := 7
# VUSE <.MEM_44>
return 0;
<built-in>: warning: use location
beacuse in succ := 14 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 14

======================================================================
_59 = _27;
lto1: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fb2a1b5b798
    type <pointer_type 0x7fb2a167ddc8
        type <integer_type 0x7fb2a167dd20 char public string-flag QI
            size <integer_cst 0x7fb2a1b53cd8 constant 8>
            unit size <integer_cst 0x7fb2a1b53cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7fb2a1b673f0 precision 8 min <integer_cst 0x7fb2a1680198 -128> max <integer_cst 0x7fb2a1680180 127>
            pointer_to_this <pointer_type 0x7fb2a167ddc8>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fb2a167d498>>
    var <var_decl 0x7fb2a16a2000 name>
    def_stmt name_13 = absolute_name_76;
    version 13
    ptr-info 0x7fb2a16b4090>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_75 = VDEF <.MEM_43>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:4: warning: Use after free error!: free location 
_15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a0e60
    type <pointer_type 0x7fb2a167dbd0
        type <pointer_type 0x7fb2a167d9d8 type <record_type 0x7fb2a167da80 cleanup>
            public unsigned DI
            size <integer_cst 0x7fb2a1b53be8 constant 64>
            unit size <integer_cst 0x7fb2a1b53c00 constant 8>
            align 64 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7fb2a167dbd0>>
        public unsigned DI size <integer_cst 0x7fb2a1b53be8 64> unit size <integer_cst 0x7fb2a1b53c00 8>
        align 64 symtab 0 alias set -1 structural equality>
    constant
    arg 0 <var_decl 0x7fb2a28e8b40 cleanup_chain type <pointer_type 0x7fb2a167d9d8>
        addressable static unsigned DI file ./benchmarks/binutils/double_free_4/../include/common.h line 49 col 24 size <integer_cst 0x7fb2a1b53be8 64> unit size <integer_cst 0x7fb2a1b53c00 8>
        align 64 context <translation_unit_decl 0x7fb2a1b5e168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7fb2a1b53bd0>>
    ./benchmarks/binutils/double_free_4/../include/common.h:151:10 start: ./benchmarks/binutils/double_free_4/../include/common.h:151:10 finish: ./benchmarks/binutils/double_free_4/../include/common.h:151:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fb2a16a06a0
    type <pointer_type 0x7fb2a16887e0
        type <array_type 0x7fb2a1688738 type <integer_type 0x7fb2a167dd20 char>
            BLK
            size <integer_cst 0x7fb2a16802d0 constant 216>
            unit size <integer_cst 0x7fb2a16802b8 constant 27>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7fb2a1688690>
            pointer_to_this <pointer_type 0x7fb2a16887e0>>
        unsigned DI
        size <integer_cst 0x7fb2a1b53be8 constant 64>
        unit size <integer_cst 0x7fb2a1b53c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    readonly constant
    arg 0 <string_cst 0x7fb2a1b52900 type <array_type 0x7fb2a1688738>
        readonly constant static "can't open to read symbols\000">
    ./benchmarks/binutils/double_free_4/binutils_df_4.c:85:11 start: ./benchmarks/binutils/double_free_4/binutils_df_4.c:85:11 finish: ./benchmarks/binutils/double_free_4/binutils_df_4.c:85:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:make_my_cleanup2=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
new_4 = malloc (32);
old_chain_6 = *pmy_chain_5(D);
_1 = *pmy_chain_5(D);
new_4->next = _1;
new_4->function = function_8(D);
new_4->free_arg = free_arg_10(D);
new_4->arg = arg_12(D);
*pmy_chain_5(D) = new_4;
if (old_chain_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.04%]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [99.96%]:
return old_chain_6;

=======Mapping node_fun:error=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_4 = __printf_chk (1, "%s: %s\n", msg_2(D), s_3(D));
return;

=======Mapping node_fun:gdb_bfd_open=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = MEM[(int *)name_7(D)];
_12 = __printf_chk (1, "%d\n", _1);
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 3>; [71.96%]
else
  goto <bb 4>; [28.04%]

=======is loop:0=========

 bb index 3 
<bb 3> [71.96%]:
abfd_10 = malloc (4);
_11 = abfd_10;

=======is loop:0=========

 bb index 4 
<bb 4> [100.00%]:
# _4 = PHI <0B(2), abfd_10(3)>
return _4;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [15.00%]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
_16 = strncmp ("test", "remote:", 7);
_17 = _16 == 0;
_18 = (int) _17;
_45 = _18;
_8 = _45;
if (_8 != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 5>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [7.50%]:
_19 = gdb_bfd_open ("test");
_66 = _19;
sym_bfd_9 = _66;
if (sym_bfd_9 == 0B)
  goto <bb 4>; [17.43%]
else
  goto <bb 9>; [82.57%]

=======is loop:0=========

 bb index 4 
<bb 4> [1.31%]:
error ("can\'t open to read symbols", "test");
goto <bb 9>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [7.50%]:
name_10 = strdup ("test");
_11 = getenv ("PATH");
_20 = strdup (name_10);
absolute_name_76 = _20;
_21 = rand ();
_22 = _21 % 2;
_23 = _22 == 1;
_24 = (int) _23;
_51 = _24;
desc_12 = _51;
if (desc_12 < 0)
  goto <bb 6>; [21.69%]
else
  goto <bb 7>; [78.31%]

=======is loop:0=========

 bb index 6 
<bb 6> [1.63%]:
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
_53 = _26;
_25 = _53;
_54 = _25;
error ("", name_10);

=======is loop:0=========

 bb index 7 
<bb 7> [7.50%]:
free (name_10);
name_13 = absolute_name_76;
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
_58 = _28;
_27 = _58;
_59 = _27;
sym_bfd_14 = gdb_bfd_open (name_13);
if (sym_bfd_14 == 0B)
  goto <bb 8>; [19.86%]
else
  goto <bb 9>; [80.14%]

=======is loop:0=========

 bb index 8 
<bb 8> [1.49%]:
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
_62 = _30;
_29 = _62;
_63 = _29;
error ("can\'t open to read symbols", name_13);

=======is loop:0=========

 bb index 9 
<bb 9> [15.00%]:
# _15 = PHI <sym_bfd_9(3), sym_bfd_9(4), sym_bfd_14(7), sym_bfd_14(8)>
_69 = _15;
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [85.00%]:
_32 = ptr_31->next;
cleanup_chain = _32;
_33 = ptr_31->function;
_34 = ptr_31->arg;
_33 (_34);
_35 = __printf_chk (1, "cleanup!!!!! =========\n");
_36 = ptr_31->arg;
_37 = __printf_chk (1, "%x\n", _36);
_38 = ptr_31->free_arg;
if (_38 != 0B)
  goto <bb 11>; [93.48%]
else
  goto <bb 12>; [6.52%]

=======is loop:1=========

 bb index 11 
<bb 11> [79.46%]:
_39 = ptr_31->free_arg;
_40 = ptr_31->arg;
_39 (_40);

=======is loop:1=========

 bb index 12 
<bb 12> [85.00%]:
free (ptr_31);

=======is loop:1=========

 bb index 13 
<bb 13> [100.00%]:
ptr_31 = cleanup_chain;
if (ptr_31 != &sentinel_cleanup)
  goto <bb 10>; [85.00%]
else
  goto <bb 14>; [15.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [15.00%]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 8 [0m
[40;34m    used_stmt array stack totalsize of : 2032 [0m
[40;34m    collect time: : 0.000148 s [0m
[40;34m    algorithm time: 0.044116 s [0m
[40;34m    gimple stmt count : : 82 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
