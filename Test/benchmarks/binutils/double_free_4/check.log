../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜remote_filename_pâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: implicit declaration of function â€˜strncmpâ€™ [-Wimplicit-function-declaration]
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^~~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c:8:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strncmpâ€™
    7 | #include "../include/common.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:46: warning: â€˜strncmpâ€™ argument 3 type is â€˜intâ€™ where â€˜long unsigned intâ€™ is expected in a call to built-in function declared without prototype [-Wbuiltin-declaration-mismatch]
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                              ^
<built-in>: note: built-in â€˜strncmpâ€™ declared here
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜openpâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                            ^~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜symfile_bfd_openâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
   66 |         name = strdup (name);   /* allocation site */
      |                ^~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:15: warning: implicit declaration of function â€˜timeâ€™ [-Wimplicit-function-declaration]
   95 |         srand(time(NULL));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 ( 10%)   0.02 ( 40%)   0.01 (  7%)  1298k ( 51%)
 phase parsing                      :   0.07 ( 70%)   0.03 ( 60%)   0.11 ( 79%)  1004k ( 40%)
 phase opt and generate             :   0.02 ( 20%)   0.00 (  0%)   0.02 ( 14%)   212k (  8%)
 callgraph optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 (  7%)    16  (  0%)
 callgraph ipa passes               :   0.02 ( 20%)   0.00 (  0%)   0.02 ( 14%)   122k (  5%)
 lto stream compression             :   0.01 ( 10%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 ipa lto decl out                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  7%)   264  (  0%)
 preprocessing                      :   0.05 ( 50%)   0.00 (  0%)   0.04 ( 29%)   289k ( 11%)
 lexical analysis                   :   0.00 (  0%)   0.00 (  0%)   0.01 (  7%)     0  (  0%)
 parser (global)                    :   0.01 ( 10%)   0.03 ( 60%)   0.03 ( 21%)   591k ( 23%)
 parser struct body                 :   0.00 (  0%)   0.00 (  0%)   0.01 (  7%)    37k (  1%)
 parser function body               :   0.01 ( 10%)   0.00 (  0%)   0.01 (  7%)    76k (  3%)
 parser inl. func. body             :   0.00 (  0%)   0.00 (  0%)   0.01 (  7%)  8640  (  0%)
 tree operand scan                  :   0.01 ( 10%)   0.00 (  0%)   0.00 (  0%)    27k (  1%)
 TOTAL                              :   0.10          0.05          0.14         2525k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.01         2224k
../Compiler/newplugin.so 11.2.0 
--------plugin argument-----------
contextsentive 1
debugoutput 0
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:symfile_bfd_open=========
=======node_fun:remote_bfd_open=========
=======node_fun:gdb_bfd_open=========
=======node_fun:error=========
=======node_fun:openp=========
=======node_fun:remote_filename_p=========
=======node_fun:make_cleanup=========
=======node_fun:make_my_cleanup=========
=======node_fun:make_my_cleanup2=========
=======node_fun:do_cleanups=========
=======node_fun:do_my_cleanups=========
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 42 
===============The second stage : Mapping stmt=================
# .MEM_4 = VDEF <.MEM_3(D)>
_1 = time (0B);
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
# .MEM_6 = VDEF <.MEM_5>
symfile_bfd_open ("test");
# .MEM_7 = VDEF <.MEM_6>
do_cleanups (&sentinel_cleanup);
# VUSE <.MEM_28(D)>
_1 = remote_filename_p (name_8(D));
# .MEM_39 = VDEF <.MEM_28(D)>
sym_bfd_24 = remote_bfd_open (name_8(D));
# .MEM_40 = VDEF <.MEM_39>
error ("can\'t open to read symbols", name_8(D));
# .MEM_29 = VDEF <.MEM_28(D)>
name_10 = strdup (name_8(D));
# .MEM_30 = VDEF <.MEM_29>
_2 = getenv ("PATH");
# .MEM_31 = VDEF <.MEM_30>
desc_13 = openp (_2, name_10, &absolute_name);
# .MEM_32 = VDEF <.MEM_31>
make_cleanup (free, name_10);
# .MEM_33 = VDEF <.MEM_32>
error ("", name_10);
# .MEM_35 = VDEF <.MEM_34>
make_cleanup (free, name_17);
# .MEM_36 = VDEF <.MEM_35>
sym_bfd_20 = gdb_bfd_open (name_17);
# .MEM_37 = VDEF <.MEM_36>
make_cleanup (free, name_17);
# .MEM_38 = VDEF <.MEM_37>
error ("can\'t open to read symbols", name_17);
# .MEM_6 = VDEF <.MEM_5(D)>
_4 = gdb_bfd_open (name_2(D));
# .MEM_14 = VDEF <.MEM_13(D)>
printf ("%d\n", _1);
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
# .MEM_5 = VDEF <.MEM_4(D)>
printf ("%s: %s\n", msg_2(D), s_3(D));
# .MEM_15 = VDEF <.MEM_14(D)>
_1 = strdup (name_8(D));
# .MEM_17 = VDEF <.MEM_13>
_2 = rand ();
# VUSE <.MEM_6(D)>
_1 = strncmp (filename_4(D), "remote:", 7);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
# .MEM_20 = VDEF <.MEM_19>
printf ("%x\n", _4);
===============The second stage : Program slicing=================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
symfile_bfd_open ("test");
do_cleanups (&sentinel_cleanup);
return 0;

=======Mapping node_fun:symfile_bfd_open=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = remote_filename_p (name_8(D));
if (_1 != 0)
  goto <bb 3>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 365072224]:
sym_bfd_24 = remote_bfd_open (name_8(D));
if (sym_bfd_24 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 146029]:
error ("can\'t open to read symbols", name_8(D));

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 365072224]:
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 708669600]:
name_10 = strdup (name_8(D));
_2 = getenv ("PATH");
desc_13 = openp (_2, name_10, &absolute_name);
if (desc_13 < 0)
  goto <bb 7>; [25.50%]
else
  goto <bb 8>; [74.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 180710750]:
make_cleanup (free, name_10);
error ("", name_10);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 708669600]:
free (name_10);
name_17 = absolute_name;
make_cleanup (free, name_17);
sym_bfd_20 = gdb_bfd_open (name_17);
if (sym_bfd_20 == 0B)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 283467]:
make_cleanup (free, name_17);
error ("can\'t open to read symbols", name_17);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# _3 = PHI <sym_bfd_24(5), sym_bfd_20(8), sym_bfd_20(9)>
absolute_name ={v} {CLOBBER};
return _3;

=======Mapping node_fun:remote_bfd_open=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_4 = gdb_bfd_open (name_2(D));
return _4;

=======Mapping node_fun:gdb_bfd_open=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = MEM[(int *)name_7(D)];
printf ("%d\n", _1);
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 3>; [38.32%]
else
  goto <bb 4>; [61.68%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 411457864]:
abfd_11 = malloc (4);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _4 = PHI <0B(2), abfd_11(3)>
return _4;

=======Mapping node_fun:error=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
printf ("%s: %s\n", msg_2(D), s_3(D));
return;

=======Mapping node_fun:openp=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (filename_opened_6(D) != 0B)
  goto <bb 3>; [53.47%]
else
  goto <bb 4>; [46.53%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 574129753]:
_1 = strdup (name_8(D));
*filename_opened_6(D) = _1;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
_2 = rand ();
_3 = _2 % 2;
_4 = _3 == 1;
_12 = (int) _4;
return _12;

=======Mapping node_fun:remote_filename_p=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = strncmp (filename_4(D), "remote:", 7);
_2 = _1 == 0;
_5 = (int) _2;
return _5;

=======Mapping node_fun:make_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
return _5;

=======Mapping node_fun:make_my_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
return _6;

=======Mapping node_fun:make_my_cleanup2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_4 = malloc (32);
old_chain_6 = *pmy_chain_5(D);
_1 = *pmy_chain_5(D);
new_4->next = _1;
new_4->function = function_8(D);
new_4->free_arg = free_arg_10(D);
new_4->arg = arg_12(D);
*pmy_chain_5(D) = new_4;
if (old_chain_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return old_chain_6;

=======Mapping node_fun:do_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
do_my_cleanups (&cleanup_chain, old_chain_2(D));
return;

=======Mapping node_fun:do_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ptr_12->next;
*pmy_chain_11(D) = _1;
_2 = ptr_12->function;
_3 = ptr_12->arg;
_2 (_3);
__builtin_puts (&"cleanup!!!!! ========="[0]);
_4 = ptr_12->arg;
printf ("%x\n", _4);
_5 = ptr_12->free_arg;
if (_5 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_6 = ptr_12->free_arg;
_7 = ptr_12->arg;
_6 (_7);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
free (ptr_12);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
ptr_12 = *pmy_chain_11(D);
if (ptr_12 != old_chain_13(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 2 [0m
[40;34m    all ptable point : 42 [0m
[40;34m    analyzable ptable point : 38 [0m
[40;34m    analyzable ptable all point stmt : 68 [0m
[40;34m    used_stmt array stack totalsize of : 0.002608 mb[0m
[40;34m    collect time: : 0.000540 s [0m
[40;34m    mapping time: : 0.001437 s [0m
[40;34m    algorithm time: 0.005770 s [0m
[40;34m    gimple stmt count : : 83 [0m
[40;34m    this report analysis in Mon Jun 20 14:57:54 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.01 ( 20%)   0.00 (  0%)   0.00 (  0%)  2157k ( 74%)
 phase opt and generate             :   0.04 ( 80%)   0.02 (100%)   0.07 (100%)   698k ( 24%)
 callgraph functions expansion      :   0.03 ( 60%)   0.02 (100%)   0.05 ( 71%)   582k ( 20%)
 ipa points-to                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  8576  (  0%)
 cfg cleanup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)   112  (  0%)
 dominator optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  8104  (  0%)
 dominance computation              :   0.01 ( 20%)   0.01 ( 50%)   0.00 (  0%)     0  (  0%)
 loop init                          :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    37k (  1%)
 integrated RA                      :   0.01 ( 20%)   0.00 (  0%)   0.00 (  0%)   292k ( 10%)
 LRA non-specific                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  1600  (  0%)
 plugin execution                   :   0.01 ( 20%)   0.00 (  0%)   0.01 ( 14%)  1264  (  0%)
 initialize rtl                     :   0.01 ( 20%)   0.00 (  0%)   0.00 (  0%)    12k (  0%)
 rest of compilation                :   0.00 (  0%)   0.01 ( 50%)   0.01 ( 14%)    30k (  1%)
 TOTAL                              :   0.05          0.02          0.07         2911k
