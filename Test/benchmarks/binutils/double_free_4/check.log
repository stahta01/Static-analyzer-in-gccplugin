../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜remote_filename_pâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: implicit declaration of function â€˜strncmpâ€™ [-Wimplicit-function-declaration]
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^~~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c:8:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strncmpâ€™
    7 | #include "../include/common.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:46: warning: â€˜strncmpâ€™ argument 3 type is â€˜intâ€™ where â€˜long unsigned intâ€™ is expected in a call to built-in function declared without prototype [-Wbuiltin-declaration-mismatch]
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                              ^
<built-in>: note: built-in â€˜strncmpâ€™ declared here
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜openpâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                            ^~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜symfile_bfd_openâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™ [-Wbuiltin-declaration-mismatch]
   66 |         name = strdup (name);   /* allocation site */
      |                ^~~~~~
./benchmarks/binutils/double_free_4/binutils_df_4.c: In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:15: warning: implicit declaration of function â€˜timeâ€™ [-Wimplicit-function-declaration]
   95 |         srand(time(NULL));
      |               ^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 47%)
 phase parsing                      :   0.02 ( 50%)   0.02 (100%)   0.04 ( 57%)  1216k ( 44%)
 phase opt and generate             :   0.02 ( 50%)   0.00 (  0%)   0.02 ( 29%)   213k (  8%)
 callgraph construction             :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 14%)    25k (  1%)
 callgraph optimization             :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)    16  (  0%)
 callgraph ipa passes               :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 14%)   122k (  4%)
 ipa function summary               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    21k (  1%)
 preprocessing                      :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)   441k ( 16%)
 lexical analysis                   :   0.02 ( 50%)   0.00 (  0%)   0.02 ( 29%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)   633k ( 23%)
 parser struct body                 :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)    37k (  1%)
 plugin execution                   :   0.00 (  0%)   0.01 ( 50%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.04          0.02          0.07         2738k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.00         2226k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=3
	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=10
node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 	next_branch :=8
node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 	next_branch :=10
node:= 10 
 	next_branch :=14
node:= 11 
 	next_branch :=12
	next_branch :=13
node:= 12 
 	next_branch :=13
node:= 13 
 	next_branch :=14
node:= 14 
 	next_branch :=11
	next_branch :=15
=======node_fun:gdb_bfd_open=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
=======node_fun:error=========
=======node_fun:make_my_cleanup2=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 =============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 16 
===============The second stage : Mapping stmt=================
# .MEM_4 = VDEF <.MEM_3(D)>
_1 = time (0B);
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
# VUSE <.MEM_5>
_16 = strncmp ("test", "remote:", 7);
# .MEM_61 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");
# .MEM_63 = VDEF <.MEM_61>
error ("can\'t open to read symbols", "test");
# .MEM_45 = VDEF <.MEM_5>
name_10 = strdup ("test");
# .MEM_46 = VDEF <.MEM_45>
_11 = getenv ("PATH");
# .MEM_47 = VDEF <.MEM_46>
_20 = strdup (name_10);
# .MEM_49 = VDEF <.MEM_47>
_21 = rand ();
# .MEM_51 = VDEF <.MEM_49>
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
# .MEM_53 = VDEF <.MEM_51>
error ("", name_10);
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
# .MEM_60 = VDEF <.MEM_58>
error ("can\'t open to read symbols", name_13);
# .MEM_67 = VDEF <.MEM_66>
__builtin_puts (&"cleanup!!!!! ========="[0]);
 <var_decl 0x7fc02d347bd0 cleanup_chain
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
    addressable static unsigned DI ./benchmarks/binutils/double_free_4/../include/common.h:49:24 size <integer_cst 0x7fc02ca9fbb8 64> unit-size <integer_cst 0x7fc02ca9fbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c> initial <error_mark 0x7fc02ca9fba0>>
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
===============The second stage : Program slicing=================
=============== *this point analyzable =================
_1 = time (0B);
=============== *this point analyzable =================
_16 = strncmp ("test", "remote:", 7);
=============== *this point analyzable =================
_19 = gdb_bfd_open ("test");
=============== *this point analyzable =================
name_10 = strdup ("test");
=============== *this point analyzable =================
_11 = getenv ("PATH");
=============== *this point analyzable =================
_20 = strdup (name_10);
=============== *this point analyzable =================
_21 = rand ();
=============== *this point analyzable =================
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
=============== *this point analyzable =================
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
=============== *this point analyzable =================
sym_bfd_14 = gdb_bfd_open (name_13);
=============== *this point analyzable =================
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
=============== *this point analyzable =================
_2 = rand ();
=============== *this point analyzable =================
abfd_11 = malloc (4);
=============== *this point analyzable =================
new_4 = malloc (32);
=============== *this point analyzable =================
srand (_2);
=============== *this point analyzable =================
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 12 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:error========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path error  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:error========= [0m
[40;42m =======start_check_funciton:error========= [0m
[40;33m =======POP node_fun stack:error========= [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc02c5e1a68
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
    var <var_decl 0x7fc02c5e0750 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7fc02c5cbb70>
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜mainâ€™:
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_4/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5e1a68
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
    var <var_decl 0x7fc02c5e0750 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7fc02c5cbb70>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre add _ fucntion:gdb_bfd_open========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc02c5e1630
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _2 = rand ();
    version:2>
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
if (_3 == 1)
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:12: warning: use location
   39 |         if (__RANDBOOL) {
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5e1630
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02c5e1750
    type <pointer_type 0x7fc02c5b7690
        type <integer_type 0x7fc02c5b75e8 bfd SI
            size <integer_cst 0x7fc02ca9fdf8 constant 32>
            unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5b7690>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc02c5e03f0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7fc02c5cbb10>
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), abfd_11(3)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
abfd_11 = malloc (4);
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:29: warning: use location
   40 |                 bfd *abfd = malloc(sizeof(bfd));
      |                             ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5e1750
    type <pointer_type 0x7fc02c5b7690
        type <integer_type 0x7fc02c5b75e8 bfd SI
            size <integer_cst 0x7fc02ca9fdf8 constant 32>
            unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5b7690>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc02c5e03f0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7fc02c5cbb10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:getenv========= [0m
[40;33m =======POP node_fun stack:getenv========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc02caa7630
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _1 = time (0B);
    version:1>
# .MEM_4 = VDEF <.MEM_3(D)>
_1 = time (0B);

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function time
 
 Start check Pointer Collect  

======================================================================
_2 = (unsigned int) _1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:9: warning: use location
   95 |         srand(time(NULL));
      |         ^
srand (_2);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_4 = VDEF <.MEM_3(D)>
_1 = time (0B);
_1 = time (0B);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:15: warning: use location
   95 |         srand(time(NULL));
      |               ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02caa7630
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _1 = time (0B);
    version:1>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02caa7ea0
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _16 = strncmp ("test", "remote:", 7);
    version:16>
# VUSE <.MEM_5>
_16 = strncmp ("test", "remote:", 7);

 ================== pre trace ptable ================== 
trace fucntion name:strncmp 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function strncmp
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_5>
_16 = strncmp ("test", "remote:", 7);
_16 = strncmp ("test", "remote:", 7);
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
_19 = gdb_bfd_open ("test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
   48 |         return gdb_bfd_open(name);
      |                ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
error ("can\'t open to read symbols", "test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
name_10 = strdup ("test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
_17 = _16 == 0;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                                                 ^
_18 = (int) _17;
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:49: warning: use location
_44 = _18;
lto1: warning: use location
_8 = _44;
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:13: warning: use location
   57 |         if (remote_filename_p (name))
      |             ^
if (_8 != 0)
./benchmarks/binutils/double_free_4/binutils_df_4.c:57:12: warning: use location
   57 |         if (remote_filename_p (name))
      |            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02caa7ea0
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _16 = strncmp ("test", "remote:", 7);
    version:16>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02caa7af8
    type <pointer_type 0x7fc02c5b7690
        type <integer_type 0x7fc02c5b75e8 bfd SI
            size <integer_cst 0x7fc02ca9fdf8 constant 32>
            unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5b7690>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = gdb_bfd_open ("test");
    version:19
    ptr-info 0x7fc02c5cb8e8>
# .MEM_61 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");

 ================== pre trace ptable ================== 
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function gdb_bfd_open
 
 Start check Pointer Collect  

======================================================================
_16 = strncmp ("test", "remote:", 7);
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_61 = VDEF <.MEM_5>
_19 = gdb_bfd_open ("test");
_19 = gdb_bfd_open ("test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
   48 |         return gdb_bfd_open(name);
      |                ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
error ("can\'t open to read symbols", "test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
name_10 = strdup ("test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
_62 = _19;
lto1: warning: use location
sym_bfd_9 = _62;
./benchmarks/binutils/double_free_4/binutils_df_4.c:59:35: warning: use location
   59 |                         sym_bfd = remote_bfd_open (name);
      |                                   ^
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location
this stmt have mutiple branch ---strdup-----
if (sym_bfd_9 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:60:28: warning: use location
   60 |                         if (!sym_bfd)
      |                            ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02caa7af8
    type <pointer_type 0x7fc02c5b7690
        type <integer_type 0x7fc02c5b75e8 bfd SI
            size <integer_cst 0x7fc02ca9fdf8 constant 32>
            unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5b7690>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _19 = gdb_bfd_open ("test");
    version:19
    ptr-info 0x7fc02c5cb8e8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02caa7bd0
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
    var <var_decl 0x7fc02c5d2bd0 name>
    def_stmt name_10 = strdup ("test");
    version:10
    ptr-info 0x7fc02c5cb870>
# .MEM_45 = VDEF <.MEM_5>
name_10 = strdup ("test");

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
_16 = strncmp ("test", "remote:", 7);
./benchmarks/binutils/double_free_4/binutils_df_4.c:16:16: warning: use location
   16 |         return strncmp (filename, "remote:", 7) == 0;
      |                ^
this stmt call this function :strncmp
trace fucntion name:strncmp 

 ================== trace ================== 
trace fucntion free:0 
_19 = gdb_bfd_open ("test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:48:16: warning: use location
   48 |         return gdb_bfd_open(name);
      |                ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
error ("can\'t open to read symbols", "test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:61:33: warning: use location
   61 |                                 error (("can't open to read symbols"), name);
      |                                 ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_45 = VDEF <.MEM_5>
name_10 = strdup ("test");
name_10 = strdup ("test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
this stmt call this function :strdup
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_52 = _26;
lto1: warning: use location
_25 = _52;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :strdup
# .MEM_45 = VDEF <.MEM_5>
name_10 = strdup ("test");
./benchmarks/binutils/double_free_4/binutils_df_4.c:66:16: warning: use location
   66 |         name = strdup (name);   /* allocation site */
      |                ^
# .MEM_47 = VDEF <.MEM_46>
_20 = strdup (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                            ^
absolute_name_71 = _20;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
name_13 = absolute_name_71;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_59 = _30;
lto1: warning: use location
_29 = _59;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_56 = _28;
lto1: warning: use location
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02caa7bd0
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
    var <var_decl 0x7fc02c5d2bd0 name>
    def_stmt name_10 = strdup ("test");
    version:10
    ptr-info 0x7fc02c5cb870>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
name_13 = absolute_name_71;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
name_13 = absolute_name_71;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_60 = VDEF <.MEM_58>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_60 = VDEF <.MEM_58>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_59 = _30;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_59 = _30;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_29 = _59;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_29 = _59;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_56 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_56 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02caa7c18
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
   
    def_stmt _11 = getenv ("PATH");
    version:11
    ptr-info 0x7fc02c5cb888>
# .MEM_46 = VDEF <.MEM_45>
_11 = getenv ("PATH");

 ================== pre trace ptable ================== 
trace fucntion name:getenv 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function getenv
 
 Start check Pointer Collect  

======================================================================
# .MEM_46 = VDEF <.MEM_45>
_11 = getenv ("PATH");
_11 = getenv ("PATH");
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:23: warning: use location
   68 |         desc = openp (getenv ("PATH"), name, &absolute_name);
      |                       ^
this stmt call this function :getenv
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_46 = VDEF <.MEM_45>
_11 = getenv ("PATH");
_11 = getenv ("PATH");
./benchmarks/binutils/double_free_4/binutils_df_4.c:68:23: warning: use location
this stmt call this function :getenv
trace fucntion name:getenv 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02caa7c18
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
   
    def_stmt _11 = getenv ("PATH");
    version:11
    ptr-info 0x7fc02c5cb888>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02c5d91f8
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
   
    def_stmt _20 = strdup (name_10);
    version:20
    ptr-info 0x7fc02c5cb900>
# .MEM_47 = VDEF <.MEM_46>
_20 = strdup (name_10);

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_52 = _26;
lto1: warning: use location
_25 = _52;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
# .MEM_47 = VDEF <.MEM_46>
_20 = strdup (name_10);
_20 = strdup (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                            ^
this stmt call this function :strdup
absolute_name_71 = _20;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^
name_13 = absolute_name_71;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_59 = _30;
lto1: warning: use location
_29 = _59;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
_56 = _28;
lto1: warning: use location
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5d91f8
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
   
    def_stmt _20 = strdup (name_10);
    version:20
    ptr-info 0x7fc02c5cb900>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
name_13 = absolute_name_71;
./benchmarks/binutils/double_free_4/binutils_df_4.c:77:14: warning: use location
   77 |         name = absolute_name;
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_60 = VDEF <.MEM_58>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_59 = _30;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_29 = _59;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_56 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02c5d9240
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _21 = rand ();
    version:21>
# .MEM_49 = VDEF <.MEM_47>
_21 = rand ();

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_22 = _21 % 2;
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
   28 |         return __RANDBOOL;
      |                ^
_23 = _22 == 1;
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
# .MEM_49 = VDEF <.MEM_47>
_21 = rand ();
_21 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:28:16: warning: use location
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5d9240
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _21 = rand ();
    version:21>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02c5d95a0
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
   
    def_stmt _26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
    version:26
    ptr-info 0x7fc02c5cb930>
# .MEM_51 = VDEF <.MEM_49>
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
./benchmarks/binutils/double_free_4/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_my_cleanup2
# .MEM_51 = VDEF <.MEM_49>
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = ptr_31->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cleanup_chain = _32;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_my_cleanup2
# .MEM_51 = VDEF <.MEM_49>
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
_56 = _28;
lto1: warning: use location
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%x\n", _35);
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = ptr_31->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^
# .MEM_51 = VDEF <.MEM_49>
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
error ("", name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:73:25: warning: use location
   73 |                         error ("", name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:2 
_52 = _26;
lto1: warning: use location
_25 = _52;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
_20 = strdup (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:44: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                            ^
this stmt call this function :strdup
absolute_name_71 = _20;
./benchmarks/binutils/double_free_4/binutils_df_4.c:25:42: warning: use location
   25 |                         *filename_opened = strdup(name); /* allocation site */
      |                                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5d95a0
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
   
    def_stmt _26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
    version:26
    ptr-info 0x7fc02c5cb930>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_43>
_32 = ptr_31->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_43>
_32 = ptr_31->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: var_decl [0m
# .MEM_65 = VDEF <.MEM_43>
cleanup_chain = _32;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: var_decl [0m
# .MEM_65 = VDEF <.MEM_43>
cleanup_chain = _32;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_60 = VDEF <.MEM_58>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_60 = VDEF <.MEM_58>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_56 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_56 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: component_ref [0m
# VUSE <.MEM_65>
_34 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: component_ref [0m
# VUSE <.MEM_65>
_34 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: component_ref [0m
# VUSE <.MEM_67>
_35 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: component_ref [0m
# VUSE <.MEM_67>
_35 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_68 = VDEF <.MEM_67>
printf ("%x\n", _35);
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_68 = VDEF <.MEM_67>
printf ("%x\n", _35);
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_65>
_33 = ptr_31->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_65>
_33 = ptr_31->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_68>
_36 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_68>
_36 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_68>
_37 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_68>
_37 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02c5d9630
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
   
    def_stmt _28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
    version:28
    ptr-info 0x7fc02c5cb960>
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
./benchmarks/binutils/double_free_4/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_my_cleanup2
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = ptr_31->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cleanup_chain = _32;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_56 = _28;
lto1: warning: use location
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%x\n", _35);
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = ptr_31->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_my_cleanup2
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
# .MEM_51 = VDEF <.MEM_49>
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5d9630
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
   
    def_stmt _28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
    version:28
    ptr-info 0x7fc02c5cb960>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_43>
_32 = ptr_31->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: var_decl [0m
# .MEM_65 = VDEF <.MEM_43>
cleanup_chain = _32;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_60 = VDEF <.MEM_58>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_56 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: component_ref [0m
# VUSE <.MEM_65>
_34 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: component_ref [0m
# VUSE <.MEM_67>
_35 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_68 = VDEF <.MEM_67>
printf ("%x\n", _35);
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_65>
_33 = ptr_31->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_68>
_36 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_68>
_37 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02caa7cf0
    type <pointer_type 0x7fc02c5b7690
        type <integer_type 0x7fc02c5b75e8 bfd SI
            size <integer_cst 0x7fc02ca9fdf8 constant 32>
            unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5b7690>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc02c5d2c60 sym_bfd>
    def_stmt sym_bfd_14 = gdb_bfd_open (name_13);
    version:14
    ptr-info 0x7fc02c5cb8b8>
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);

 ================== pre trace ptable ================== 
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
[40;36m ======= node_fun:gdb_bfd_open========= [0m
[40;36m ======= find relate stmt with sym_bfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function gdb_bfd_open
 
 Start check Pointer Collect  

======================================================================
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_59 = _30;
lto1: warning: use location
_29 = _59;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02caa7cf0
    type <pointer_type 0x7fc02c5b7690
        type <integer_type 0x7fc02c5b75e8 bfd SI
            size <integer_cst 0x7fc02ca9fdf8 constant 32>
            unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5b7690>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc02c5d2c60 sym_bfd>
    def_stmt sym_bfd_14 = gdb_bfd_open (name_13);
    version:14
    ptr-info 0x7fc02c5cb8b8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02c5d96c0
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
   
    def_stmt _30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
    version:30
    ptr-info 0x7fc02c5cb990>
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
./benchmarks/binutils/double_free_4/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32 = ptr_31->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
cleanup_chain = _32;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_my_cleanup2
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
_56 = _28;
lto1: warning: use location
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_34 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_35 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%x\n", _35);
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_33 = ptr_31->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_my_cleanup2
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
# .MEM_51 = VDEF <.MEM_49>
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5d96c0
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
   
    def_stmt _30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
    version:30
    ptr-info 0x7fc02c5cb990>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_43>
_32 = ptr_31->next;
./benchmarks/binutils/double_free_4/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: var_decl [0m
# .MEM_65 = VDEF <.MEM_43>
cleanup_chain = _32;
./benchmarks/binutils/double_free_4/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_60 = VDEF <.MEM_58>
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
_56 = _28;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: component_ref [0m
# VUSE <.MEM_65>
_34 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: component_ref [0m
# VUSE <.MEM_67>
_35 = ptr_31->arg;
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: addr_expr [0m
# .MEM_68 = VDEF <.MEM_67>
printf ("%x\n", _35);
./benchmarks/binutils/double_free_4/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_65>
_33 = ptr_31->function;
./benchmarks/binutils/double_free_4/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_68>
_36 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: function_decl [0m
# VUSE <.MEM_68>
_37 = ptr_31->free_arg;
./benchmarks/binutils/double_free_4/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: free in this location
   76 |         free (name);
      |         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
  112 |                         free (ptr);
      |                         ^
[40;35m target gimple type: ssa_name [0m
if (ptr_31 != &sentinel_cleanup)
./benchmarks/binutils/double_free_4/../include/common.h:103:35: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                                   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:1 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02caa7678
    type <integer_type 0x7fc02cab4690 unsigned int public unsigned SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab4690 precision:32 min <integer_cst 0x7fc02ca9fe28 0> max <integer_cst 0x7fc02ca9fde0 4294967295>
        pointer_to_this <pointer_type 0x7fc02cac0690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
_2 = (unsigned int) _1;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
srand (_2);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:9: warning: use location
   95 |         srand(time(NULL));
      |         ^
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_5 = VDEF <.MEM_4>
srand (_2);
srand (_2);
./benchmarks/binutils/double_free_4/binutils_df_4.c:95:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02caa7678
    type <integer_type 0x7fc02cab4690 unsigned int public unsigned SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab4690 precision:32 min <integer_cst 0x7fc02ca9fe28 0> max <integer_cst 0x7fc02ca9fde0 4294967295>
        pointer_to_this <pointer_type 0x7fc02cac0690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_40>
free (name_10);
./benchmarks/binutils/double_free_4/binutils_df_4.c:76:9: warning: use location
   76 |         free (name);
      |         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:2 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02caa7ca8
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
    var <var_decl 0x7fc02c5d2bd0 name>
    def_stmt name_13 = absolute_name_71;
    version:13
    ptr-info 0x7fc02c5cb8a0>
name_13 = absolute_name_71;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :make_my_cleanup2
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
# .MEM_58 = VDEF <.MEM_57>
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
_59 = _30;
lto1: warning: use location
_29 = _59;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
# .MEM_55 = VDEF <.MEM_54>
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_56 = _28;
lto1: warning: use location
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02caa7ca8
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
    var <var_decl 0x7fc02c5d2bd0 name>
    def_stmt name_13 = absolute_name_71;
    version:13
    ptr-info 0x7fc02c5cb8a0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02caa7ca8
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
    var <var_decl 0x7fc02c5d2bd0 name>
    def_stmt name_13 = absolute_name_71;
    version:13
    ptr-info 0x7fc02c5cb8a0>
name_13 = absolute_name_71;

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function 
 
 Start check Pointer Collect  

======================================================================
error ("can\'t open to read symbols", name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:85:25: warning: use location
   85 |                         error (("can't open to read symbols"), name);
      |                         ^
this stmt call this function :error
trace fucntion name:error 
[40;44m =======trace_function_path error  function_call count: 1 level :0========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_59 = _30;
lto1: warning: use location
_29 = _59;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
# .MEM_57 = VDEF <.MEM_55>
sym_bfd_14 = gdb_bfd_open (name_13);
sym_bfd_14 = gdb_bfd_open (name_13);
./benchmarks/binutils/double_free_4/binutils_df_4.c:80:19: warning: use location
   80 |         sym_bfd = gdb_bfd_open (name);
      |                   ^
this stmt call this function :gdb_bfd_open
trace fucntion name:gdb_bfd_open 
[40;44m =======trace_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:0 
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location
this stmt have mutiple branch ---gdb_bfd_open-----
if (sym_bfd_14 == 0B)
./benchmarks/binutils/double_free_4/binutils_df_4.c:81:12: warning: use location
   81 |         if (!sym_bfd)
      |            ^
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
./benchmarks/binutils/double_free_4/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_56 = _28;
lto1: warning: use location
_27 = _56;
./benchmarks/binutils/double_free_4/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02caa7ca8
    type <pointer_type 0x7fc02c5be2a0
        type <integer_type 0x7fc02c5b7f18 char public QI
            size <integer_cst 0x7fc02ca9fca8 constant 8>
            unit-size <integer_cst 0x7fc02ca9fcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab43f0 precision:8 min <integer_cst 0x7fc02c5ae750 -128> max <integer_cst 0x7fc02c5ae738 127>
            pointer_to_this <pointer_type 0x7fc02c5be2a0>>
        unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
        pointer_to_this <pointer_type 0x7fc02c5be540>>
    var <var_decl 0x7fc02c5d2bd0 name>
    def_stmt name_13 = absolute_name_71;
    version:13
    ptr-info 0x7fc02c5cb8a0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_70 = VDEF <.MEM_42>
free (ptr_31);
./benchmarks/binutils/double_free_4/../include/common.h:112:25: warning: free in this location
[40;35m target gimple type: ssa_name [0m
_15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:gdb_bfd_open========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path gdb_bfd_open  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:gdb_bfd_open========= [0m
[40;42m =======start_check_funciton:gdb_bfd_open========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc02c5e1630
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _2 = rand ();
    version:2>
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();

 ================== pre trace ptable ================== 
trace fucntion name:rand 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Other function rand
 
 Start check Pointer Collect  

======================================================================
_3 = _2 % 2;
In function â€˜gdb_bfd_openâ€™:
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
if (_3 == 1)
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:12: warning: use location
   39 |         if (__RANDBOOL) {
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_2 = rand ();
_2 = rand ();
./benchmarks/binutils/double_free_4/binutils_df_4.c:39:13: warning: use location
   39 |         if (__RANDBOOL) {
      |             ^
this stmt call this function :rand
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5e1630
    type <integer_type 0x7fc02cab45e8 int public SI
        size <integer_cst 0x7fc02ca9fdf8 constant 32>
        unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647>
        pointer_to_this <pointer_type 0x7fc02cabb9d8>>
   
    def_stmt _2 = rand ();
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fc02c5e1750
    type <pointer_type 0x7fc02c5b7690
        type <integer_type 0x7fc02c5b75e8 bfd SI
            size <integer_cst 0x7fc02ca9fdf8 constant 32>
            unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5b7690>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc02c5e03f0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7fc02c5cbb10>
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), abfd_11(3)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
# .MEM_16 = VDEF <.MEM_15>
abfd_11 = malloc (4);
abfd_11 = malloc (4);
./benchmarks/binutils/double_free_4/binutils_df_4.c:40:29: warning: use location
   40 |                 bfd *abfd = malloc(sizeof(bfd));
      |                             ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5e1750
    type <pointer_type 0x7fc02c5b7690
        type <integer_type 0x7fc02c5b75e8 bfd SI
            size <integer_cst 0x7fc02ca9fdf8 constant 32>
            unit-size <integer_cst 0x7fc02ca9fe10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02cab45e8 precision:32 min <integer_cst 0x7fc02ca9fdb0 -2147483648> max <integer_cst 0x7fc02ca9fdc8 2147483647> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5b7690>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fc02c5e03f0 abfd>
    def_stmt abfd_11 = malloc (4);
    version:11
    ptr-info 0x7fc02c5cbb10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:gdb_bfd_open========= [0m
[40;44m =======node_fun:error========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path error  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:error========= [0m
[40;42m =======start_check_funciton:error========= [0m
[40;33m =======POP node_fun stack:error========= [0m
[40;44m =======node_fun:make_my_cleanup2========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fc02c5e1a68
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
    var <var_decl 0x7fc02c5e0750 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7fc02c5cbb70>
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 

 ================== this stmt hava call fucntion ================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/double_free_4/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/double_free_4/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/double_free_4/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/double_free_4/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/double_free_4/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/double_free_4/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fc02c5e1a68
    type <pointer_type 0x7fc02c5be150
        type <record_type 0x7fc02c5b7930 cleanup BLK
            size <integer_cst 0x7fc02ca9ff18 constant 256>
            unit-size <integer_cst 0x7fc02cabd018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fc02c5b7930 fields <field_decl 0x7fc02c5ba2f8 next> context <translation_unit_decl 0x7fc02caaa168 ./benchmarks/binutils/double_free_4/binutils_df_4.c>
            pointer_to_this <pointer_type 0x7fc02c5be150>>
        public unsigned DI
        size <integer_cst 0x7fc02ca9fbb8 constant 64>
        unit-size <integer_cst 0x7fc02ca9fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fc02c5bee70>>
    var <var_decl 0x7fc02c5e0750 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7fc02c5cbb70>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
_1 = time (0B);
_2 = (unsigned int) _1;
srand (_2);
_16 = strncmp ("test", "remote:", 7);
_17 = _16 == 0;
_18 = (int) _17;
_44 = _18;
_8 = _44;
if (_8 != 0)
  goto <bb 3>; [34.00%]
else
  goto <bb 6>; [66.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 40157944]:
_19 = gdb_bfd_open ("test");
_62 = _19;
sym_bfd_9 = _62;
if (sym_bfd_9 == 0B)
  goto <bb 4>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 16063]:
error ("can\'t open to read symbols", "test");

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 40157944]:
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 77953654]:
name_10 = strdup ("test");
_11 = getenv ("PATH");
_20 = strdup (name_10);
absolute_name_71 = _20;
_21 = rand ();
_22 = _21 % 2;
_23 = _22 == 1;
_24 = (int) _23;
_50 = _24;
desc_12 = _50;
if (desc_12 < 0)
  goto <bb 7>; [25.50%]
else
  goto <bb 8>; [74.50%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 19878182]:
_26 = make_my_cleanup2 (&cleanup_chain, free, name_10, 0B);
_52 = _26;
_25 = _52;
error ("", name_10);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 77953654]:
free (name_10);
name_13 = absolute_name_71;
_28 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
_56 = _28;
_27 = _56;
sym_bfd_14 = gdb_bfd_open (name_13);
if (sym_bfd_14 == 0B)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 31181]:
_30 = make_my_cleanup2 (&cleanup_chain, free, name_13, 0B);
_59 = _30;
_29 = _59;
error ("can\'t open to read symbols", name_13);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118111598]:
# _15 = PHI <sym_bfd_9(5), sym_bfd_14(8), sym_bfd_14(9)>
goto <bb 14>; [100.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 955630225]:
_32 = ptr_31->next;
cleanup_chain = _32;
_33 = ptr_31->function;
_34 = ptr_31->arg;
_33 (_34);
__builtin_puts (&"cleanup!!!!! ========="[0]);
_35 = ptr_31->arg;
printf ("%x\n", _35);
_36 = ptr_31->free_arg;
if (_36 != 0B)
  goto <bb 12>; [70.00%]
else
  goto <bb 13>; [30.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 668941161]:
_37 = ptr_31->free_arg;
_38 = ptr_31->arg;
_37 (_38);

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 955630225]:
free (ptr_31);

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 1073741824]:
ptr_31 = cleanup_chain;
if (ptr_31 != &sentinel_cleanup)
  goto <bb 11>; [89.00%]
else
  goto <bb 15>; [11.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 118111600]:
return 0;

=======Mapping node_fun:gdb_bfd_open=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = MEM[(int *)name_7(D)];
printf ("%d\n", _1);
_2 = rand ();
_3 = _2 % 2;
if (_3 == 1)
  goto <bb 3>; [38.32%]
else
  goto <bb 4>; [61.68%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 411457864]:
abfd_11 = malloc (4);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# _4 = PHI <0B(2), abfd_11(3)>
return _4;

=======Mapping node_fun:error=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
printf ("%s: %s\n", msg_2(D), s_3(D));
return;

=======Mapping node_fun:make_my_cleanup2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_4 = malloc (32);
old_chain_6 = *pmy_chain_5(D);
_1 = *pmy_chain_5(D);
new_4->next = _1;
new_4->function = function_8(D);
new_4->free_arg = free_arg_10(D);
new_4->arg = arg_12(D);
*pmy_chain_5(D) = new_4;
if (old_chain_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return old_chain_6;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 2 [0m
[40;34m    all ptable point : 19 [0m
[40;34m    analyzable ptable point : 16 [0m
[40;34m    used_stmt array stack totalsize of : 0.003056 mb[0m
[40;34m    collect time: : 0.002028 s [0m
[40;34m    algorithm time: 0.036960 s [0m
[40;34m    gimple stmt count : : 77 [0m
[40;34m    this report analysis in Fri Feb 18 06:36:35 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)  2157k ( 82%)
 phase opt and generate             :   0.01 (100%)   0.05 (100%)   0.05 ( 83%)   416k ( 16%)
 callgraph functions expansion      :   0.00 (  0%)   0.02 ( 40%)   0.01 ( 17%)   254k ( 10%)
 plugin execution                   :   0.00 (  0%)   0.04 ( 80%)   0.04 ( 67%)   872  (  0%)
 initialize rtl                     :   0.00 (  0%)   0.01 ( 20%)   0.00 (  0%)    12k (  0%)
 rest of compilation                :   0.00 (  0%)   0.00 (  0%)   0.01 ( 17%)    10k (  0%)
 TOTAL                              :   0.01          0.05          0.06         2631k
