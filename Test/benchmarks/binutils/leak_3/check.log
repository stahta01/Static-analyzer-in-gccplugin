../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/leak_3/binutils_leak_3.c: In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:39: warning: passing argument 1 of ‘objalloc_free’ from incompatible pointer type [-Wincompatible-pointer-types]
  148 |                         objalloc_free(table);
      |                                       ^~~~~
      |                                       |
      |                                       struct bfd_hash_table *
./benchmarks/binutils/leak_3/binutils_leak_3.c:110:33: note: expected ‘struct objalloc *’ but argument is of type ‘struct bfd_hash_table *’
  110 | objalloc_free (struct objalloc *o)
      |                ~~~~~~~~~~~~~~~~~^
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: implicit declaration of function ‘memset’ [-Wimplicit-function-declaration]
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^~~~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:7:1: note: include ‘<string.h>’ or provide a declaration of ‘memset’
    6 | #include "../include/common.h"
  +++ |+#include <string.h>
    7 | 
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^~~~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: note: include ‘<string.h>’ or provide a declaration of ‘memset’
./benchmarks/binutils/leak_3/binutils_leak_3.c: In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:15: warning: implicit declaration of function ‘time’ [-Wimplicit-function-declaration]
  197 |         srand(time(&t));
      |               ^~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: ‘return’ with no value, in function returning non-void
  200 |                 return;
      |                 ^~~~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:185:5: note: declared here
  185 | int main()
      |     ^~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: warning: incompatible implicit declaration of built-in function ‘memset’ [-Wbuiltin-declaration-mismatch]
  210 |         memset (&table, 0, sizeof(struct bfd_hash_table)); /* memory leak */
      |         ^~~~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: note: include ‘<string.h>’ or provide a declaration of ‘memset’

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 50%)
 phase parsing                      :   0.02 ( 67%)   0.02 ( 67%)   0.04 ( 80%)  1023k ( 40%)
 phase opt and generate             :   0.01 ( 33%)   0.01 ( 33%)   0.01 ( 20%)   253k ( 10%)
 callgraph ipa passes               :   0.01 ( 33%)   0.01 ( 33%)   0.01 ( 20%)   151k (  6%)
 lto stream compression             :   0.01 ( 33%)   0.01 ( 33%)   0.00 (  0%)     0  (  0%)
 preprocessing                      :   0.00 (  0%)   0.00 (  0%)   0.02 ( 40%)   291k ( 11%)
 lexical analysis                   :   0.02 ( 67%)   0.00 (  0%)   0.01 ( 20%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.01 ( 33%)   0.00 (  0%)   593k ( 23%)
 parser function body               :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 20%)    89k (  3%)
 dominance computation              :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)     0  (  0%)
 TOTAL                              :   0.03          0.03          0.05         2584k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.00         2225k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
node:= 2 
 	next_branch :=3
	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------time--
addr_expraddr_expraddr_expraddr_expraddr_expr------srand--
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_hash_table_init_n--
node:= 7 
 	next_branch :=5
node:= 3 
 	next_branch :=1
node:= 4 
 	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_hash_insert--
node:= 5 
 	next_branch :=4
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------bfd_dwarf2_cleanup_debug_info--
addr_expraddr_expraddr_expraddr_expraddr_expr------memset--
=======node_fun:bfd_dwarf2_cleanup_debug_info=========
addr_expraddr_expraddr_expraddr_expraddr_expr------objalloc_free--
=======node_fun:bfd_hash_insert=========
addr_expraddr_expraddr_expraddr_expraddr_expr------objalloc_alloc--
=======node_fun:bfd_hash_table_init_n=========
node:= 2 
 	next_branch :=6
	next_branch :=3
addr_expraddr_expraddr_expraddr_expraddr_expr------objalloc_create--
node:= 3 
 	next_branch :=4
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------objalloc_alloc--
node:= 4 
 	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------objalloc_free--
node:= 5 
 	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------memset--
=======node_fun:objalloc_free=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=5
=======node_fun:objalloc_alloc=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 4 
 	next_branch :=6
	next_branch :=5
node:= 5 
 	next_branch :=6
=======node_fun:objalloc_create=========
node:= 2 
 	next_branch :=6
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=5
node:= 4 
 	next_branch :=6
node:= 5 
 	next_branch :=6
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 22 
===============The second stage : Mapping stmt=================
# .MEM_31 = VDEF <.MEM_30(D)>
hash[0] = "a";
# .MEM_32 = VDEF <.MEM_31>
hash[1] = "b";
# .MEM_33 = VDEF <.MEM_32>
hash[2] = "c";
# .MEM_34 = VDEF <.MEM_33>
hash[3] = "d";
# .MEM_35 = VDEF <.MEM_34>
hash[4] = "e";
# .MEM_36 = VDEF <.MEM_35>
hash[5] = "f";
# .MEM_37 = VDEF <.MEM_36>
hash[6] = "g";
# .MEM_38 = VDEF <.MEM_37>
hash[7] = "h";
# .MEM_39 = VDEF <.MEM_38>
hash[8] = "i";
# .MEM_40 = VDEF <.MEM_39>
hash[9] = "j";
# .MEM_41 = VDEF <.MEM_40>
_1 = time (&t);
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
# .MEM_43 = VDEF <.MEM_42>
_3 = bfd_hash_table_init_n (&table, 10, 10);
# .MEM_49 = VDEF <.MEM_29>
bfd_hash_insert (&table, _5, _4);
# .MEM_44 = VDEF <.MEM_29>
bfd_dwarf2_cleanup_debug_info (&table);
# .MEM_45 = VDEF <.MEM_44>
memset (&table, 0, 32);
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_1 = time (&t);
========================================================
=============== *this point analyzable =================
_1 = time (&t);
========================================================
 <ssa_name 0x7fd415016678
    type <integer_type 0x7fd415023690 unsigned int public unsigned SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023690 precision:32 min <integer_cst 0x7fd41500ee28 0> max <integer_cst 0x7fd41500ede0 4294967295>
        pointer_to_this <pointer_type 0x7fd41502f690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
=============== *this point analyzable =================
srand (_2);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_3 = bfd_hash_table_init_n (&table, 10, 10);
========================================================
=============== *this point analyzable =================
_3 = bfd_hash_table_init_n (&table, 10, 10);
========================================================
=============== *this point analyzable =================
bfd_hash_insert (&table, _5, _4);
========================================================
=============== *this point analyzable =================
bfd_hash_insert (&table, _5, _4);
========================================================
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>
=============== *this point analyzable =================
objalloc_free (_1);
========================================================
=============== *this point analyzable =================
hashp_13 = objalloc_alloc (_1, 24);
========================================================
=============== *this point analyzable =================
hashp_13 = objalloc_alloc (_1, 24);
========================================================
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>
=============== *this point analyzable =================
_1 = objalloc_create ();
========================================================
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>
=============== *this point analyzable =================
_4 = objalloc_alloc (_3, alloc_11);
========================================================
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>
=============== *this point analyzable =================
_4 = objalloc_alloc (_3, alloc_11);
========================================================
=============== *this point analyzable =================
_4 = objalloc_alloc (_3, alloc_11);
========================================================
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>
=============== *this point analyzable =================
objalloc_free (table_14(D));
========================================================
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>
=============== *this point analyzable =================
memset (_6, 0, alloc_11);
========================================================
=============== *this point analyzable =================
chunk_8 = malloc (4064);
========================================================
=============== *this point analyzable =================
ret_8 = malloc (24);
========================================================
=============== *this point analyzable =================
_1 = malloc (4064);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:bfd_dwarf2_cleanup_debug_info========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_dwarf2_cleanup_debug_info  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;42m =======pre_check_funciton:bfd_dwarf2_cleanup_debug_info========= [0m
[40;42m =======start_check_funciton:bfd_dwarf2_cleanup_debug_info========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
objalloc_free (_1);
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
objalloc_free (_1);
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_dwarf2_cleanup_debug_info========= [0m
[40;42m =======pre add _ fucntion:bfd_hash_insert========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_hash_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_15 = chunk_8 + 512;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
o_9(D)->chunks = chunk_8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^
o_9(D)->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
chunk_8->next = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^
chunk_8->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^
if (chunk_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
chunk_8 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;42m =======pre_check_funciton:bfd_hash_insert========= [0m
[40;42m =======start_check_funciton:bfd_hash_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
hashp_13 = objalloc_alloc (_1, 24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
*_7 = hashp_13;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
hashp_13->hash = hash_14(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^
_4 = hash_14(D) % _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^
_20 = _4 & 4294967295;
lto1: warning: use location
_6 = _20 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^
_7 = _5 + _6;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>

 ================== pre trace ptable ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_24 = VDEF <.MEM_17(D)>
exit (1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:92:17: warning: use location
   92 |                 exit (1);
      |                 ^
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with hashp ========= [0m
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>
is Other function objalloc_alloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
hashp_13 = objalloc_alloc (_1, 24);
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with hashp ========= [0m
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
*_7 = hashp_13;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
hashp_13->hash = hash_14(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^
_4 = hash_14(D) % _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^
_20 = _4 & 4294967295;
lto1: warning: use location
_6 = _20 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^
_7 = _5 + _6;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_hash_insert========= [0m
[40;42m =======pre add _ fucntion:bfd_hash_table_init_n========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_hash_table_init_n  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
o_9(D)->chunks = chunk_8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^
o_9(D)->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
chunk_8->next = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^
chunk_8->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^
if (chunk_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
chunk_8 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;42m =======pre add _ fucntion:objalloc_create========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path objalloc_create  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:objalloc_create========= [0m
[40;42m =======start_check_funciton:objalloc_create========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b49438
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3dbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7fd414b35918>
 <ssa_name 0x7fd414b49438
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3dbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7fd414b35918>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
ret_8 = malloc (24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:61:35: warning: use location
   61 |         ret = (struct objalloc *) malloc (sizeof *ret); /* allocation site */
      |                                   ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b49438
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3dbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7fd414b35918>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
_1 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:23: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                       ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
_1 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:23: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                       ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:objalloc_create========= [0m
[40;42m =======pre_check_funciton:bfd_hash_table_init_n========= [0m
[40;42m =======start_check_funciton:bfd_hash_table_init_n========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>

 ================== pre trace ptable ================== 
trace fucntion name:objalloc_create 
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_create’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:chunk========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
chunk_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                           ^
_3 = chunk_11 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
is Other function objalloc_create
 
 Start check Pointer Collect  

======================================================================
table_14(D)->memory = _1;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
this stmt call this function :objalloc_create
trace fucntion name:objalloc_create 
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :0========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_create’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:chunk========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
chunk_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                           ^
_3 = chunk_11 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# VUSE <.MEM_26>
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>

 ================== pre trace ptable ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_24 = VDEF <.MEM_17(D)>
exit (1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:92:17: warning: use location
   92 |                 exit (1);
      |                 ^
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
is Other function objalloc_alloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
_4 = objalloc_alloc (_3, alloc_11);
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_hash_table_init_n========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <var_decl 0x7fd4158b6cf0 t
    type <integer_type 0x7fd414b2f348 time_t DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee40 -9223372036854775808> max <integer_cst 0x7fd41500ee58 9223372036854775807> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
        pointer_to_this <pointer_type 0x7fd414b2f690>>
    addressable DI ./benchmarks/binutils/leak_3/binutils_leak_3.c:187:9 size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fd414b2d000 main> chain <var_decl 0x7fd4158b6c60 table>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fd4158b6cf0 t
    type <integer_type 0x7fd414b2f348 time_t DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee40 -9223372036854775808> max <integer_cst 0x7fd41500ee58 9223372036854775807> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
        pointer_to_this <pointer_type 0x7fd414b2f690>>
    addressable DI ./benchmarks/binutils/leak_3/binutils_leak_3.c:187:9 size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
    align:64 warn_if_not_align:0 context <function_decl 0x7fd414b2d000 main> chain <var_decl 0x7fd4158b6c60 table>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_41 = VDEF <.MEM_40>
_1 = time (&t);
_1 = time (&t);
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:15: warning: use location
  197 |         srand(time(&t));
      |               ^
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_41 = VDEF <.MEM_40>
_1 = time (&t);
_1 = time (&t);
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:15: warning: use location
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd415016630
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _1 = time (&t);
    version:1>
 <ssa_name 0x7fd415016630
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _1 = time (&t);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:time 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd415016630
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _1 = time (&t);
    version:1>
is Other function time
 
 Start check Pointer Collect  

======================================================================
# .MEM_41 = VDEF <.MEM_40>
_1 = time (&t);
_1 = time (&t);
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:15: warning: use location
this stmt call this function :time
trace fucntion name:time 

 ================== trace ================== 
trace fucntion free:0 
_2 = (unsigned int) _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:9: warning: use location
  197 |         srand(time(&t));
      |         ^
srand (_2);
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd415016630
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _1 = time (&t);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd415016678
    type <integer_type 0x7fd415023690 unsigned int public unsigned SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023690 precision:32 min <integer_cst 0x7fd41500ee28 0> max <integer_cst 0x7fd41500ede0 4294967295>
        pointer_to_this <pointer_type 0x7fd41502f690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
 <ssa_name 0x7fd415016678
    type <integer_type 0x7fd415023690 unsigned int public unsigned SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023690 precision:32 min <integer_cst 0x7fd41500ee28 0> max <integer_cst 0x7fd41500ede0 4294967295>
        pointer_to_this <pointer_type 0x7fd41502f690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd415016678
    type <integer_type 0x7fd415023690 unsigned int public unsigned SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023690 precision:32 min <integer_cst 0x7fd41500ee28 0> max <integer_cst 0x7fd41500ede0 4294967295>
        pointer_to_this <pointer_type 0x7fd41502f690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:9: warning: use location
this stmt call this function :srand
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd415016678
    type <integer_type 0x7fd415023690 unsigned int public unsigned SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023690 precision:32 min <integer_cst 0x7fd41500ee28 0> max <integer_cst 0x7fd41500ede0 4294967295>
        pointer_to_this <pointer_type 0x7fd41502f690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <var_decl 0x7fd4158b6c60 table
    type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
        size <integer_cst 0x7fd41500ef18 constant 256>
        unit-size <integer_cst 0x7fd41502c018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0
        fields <field_decl 0x7fd414b29688 table type <pointer_type 0x7fd414b2eb28>
            unsigned DI ./benchmarks/binutils/leak_3/binutils_leak_3.c:29:26
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fd41500ebe8 constant 0>
            bit-offset <integer_cst 0x7fd41500ec30 constant 0> context <record_type 0x7fd414b2ebd0 bfd_hash_table> chain <field_decl 0x7fd414b295f0 memory>> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
        pointer_to_this <pointer_type 0x7fd414b2ec78>>
    addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7fd41500ef18 256> unit-size <integer_cst 0x7fd41502c018 32>
    align:64 warn_if_not_align:0 context <function_decl 0x7fd414b2d000 main> chain <var_decl 0x7fd4158b6bd0 cnt>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7fd4158b6c60 table
    type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
        size <integer_cst 0x7fd41500ef18 constant 256>
        unit-size <integer_cst 0x7fd41502c018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0
        fields <field_decl 0x7fd414b29688 table type <pointer_type 0x7fd414b2eb28>
            unsigned DI ./benchmarks/binutils/leak_3/binutils_leak_3.c:29:26
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fd41500ebe8 constant 0>
            bit-offset <integer_cst 0x7fd41500ec30 constant 0> context <record_type 0x7fd414b2ebd0 bfd_hash_table> chain <field_decl 0x7fd414b295f0 memory>> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
        pointer_to_this <pointer_type 0x7fd414b2ec78>>
    addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7fd41500ef18 256> unit-size <integer_cst 0x7fd41502c018 32>
    align:64 warn_if_not_align:0 context <function_decl 0x7fd414b2d000 main> chain <var_decl 0x7fd4158b6bd0 cnt>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_43 = VDEF <.MEM_42>
_3 = bfd_hash_table_init_n (&table, 10, 10);
_3 = bfd_hash_table_init_n (&table, 10, 10);
./benchmarks/binutils/leak_3/binutils_leak_3.c:199:15: warning: use location
  199 |         if (! bfd_hash_table_init_n (&table, entsize, size))
      |               ^
this stmt call this function :bfd_hash_table_init_n
trace fucntion name:bfd_hash_table_init_n 
[40;44m =======trace_function_path bfd_hash_table_init_n  function_call count: 4 level :0========  [0m
 <var_decl 0x7fd4158b6c60 table
    type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
        size <integer_cst 0x7fd41500ef18 constant 256>
        unit-size <integer_cst 0x7fd41502c018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0
        fields <field_decl 0x7fd414b29688 table type <pointer_type 0x7fd414b2eb28>
            unsigned DI ./benchmarks/binutils/leak_3/binutils_leak_3.c:29:26
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fd41500ebe8 constant 0>
            bit-offset <integer_cst 0x7fd41500ec30 constant 0> context <record_type 0x7fd414b2ebd0 bfd_hash_table> chain <field_decl 0x7fd414b295f0 memory>> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
        pointer_to_this <pointer_type 0x7fd414b2ec78>>
    addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7fd41500ef18 256> unit-size <integer_cst 0x7fd41502c018 32>
    align:64 warn_if_not_align:0 context <function_decl 0x7fd414b2d000 main> chain <var_decl 0x7fd4158b6bd0 cnt>>
[40;36m ======= node_fun:bfd_hash_table_init_n========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;46m =======add node_fun stack:objalloc_free========= [0m
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :1========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <var_decl 0x7fd4158b6c60 table
    type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
        size <integer_cst 0x7fd41500ef18 constant 256>
        unit-size <integer_cst 0x7fd41502c018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0
        fields <field_decl 0x7fd414b29688 table type <pointer_type 0x7fd414b2eb28>
            unsigned DI ./benchmarks/binutils/leak_3/binutils_leak_3.c:29:26
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fd41500ebe8 constant 0>
            bit-offset <integer_cst 0x7fd41500ec30 constant 0> context <record_type 0x7fd414b2ebd0 bfd_hash_table> chain <field_decl 0x7fd414b295f0 memory>> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
        pointer_to_this <pointer_type 0x7fd414b2ec78>>
    addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7fd41500ef18 256> unit-size <integer_cst 0x7fd41502c018 32>
    align:64 warn_if_not_align:0 context <function_decl 0x7fd414b2d000 main> chain <var_decl 0x7fd4158b6bd0 cnt>>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;46m =======add node_fun stack:objalloc_alloc========= [0m
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
 <var_decl 0x7fd4158b6c60 table
    type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
        size <integer_cst 0x7fd41500ef18 constant 256>
        unit-size <integer_cst 0x7fd41502c018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0
        fields <field_decl 0x7fd414b29688 table type <pointer_type 0x7fd414b2eb28>
            unsigned DI ./benchmarks/binutils/leak_3/binutils_leak_3.c:29:26
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fd41500ebe8 constant 0>
            bit-offset <integer_cst 0x7fd41500ec30 constant 0> context <record_type 0x7fd414b2ebd0 bfd_hash_table> chain <field_decl 0x7fd414b295f0 memory>> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
        pointer_to_this <pointer_type 0x7fd414b2ec78>>
    addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7fd41500ef18 256> unit-size <integer_cst 0x7fd41502c018 32>
    align:64 warn_if_not_align:0 context <function_decl 0x7fd414b2d000 main> chain <var_decl 0x7fd4158b6bd0 cnt>>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:objalloc_create========= [0m
objalloc_create this fucntion return value is heap-object 
bfd_hash_table_init_n this fucntion return value is heap-object objalloc_create
[40;46m =======add node_fun stack:objalloc_create========= [0m
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :1========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
 <var_decl 0x7fd4158b6c60 table
    type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
        size <integer_cst 0x7fd41500ef18 constant 256>
        unit-size <integer_cst 0x7fd41502c018 constant 32>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0
        fields <field_decl 0x7fd414b29688 table type <pointer_type 0x7fd414b2eb28>
            unsigned DI ./benchmarks/binutils/leak_3/binutils_leak_3.c:29:26
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 offset_align 128
            offset <integer_cst 0x7fd41500ebe8 constant 0>
            bit-offset <integer_cst 0x7fd41500ec30 constant 0> context <record_type 0x7fd414b2ebd0 bfd_hash_table> chain <field_decl 0x7fd414b295f0 memory>> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
        pointer_to_this <pointer_type 0x7fd414b2ec78>>
    addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7fd41500ef18 256> unit-size <integer_cst 0x7fd41502c018 32>
    align:64 warn_if_not_align:0 context <function_decl 0x7fd414b2d000 main> chain <var_decl 0x7fd4158b6bd0 cnt>>
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_create’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:chunk========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
chunk_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                           ^
_3 = chunk_11 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 
memset (&table, 0, 32);
In function ‘main’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: warning: use location
  210 |         memset (&table, 0, sizeof(struct bfd_hash_table)); /* memory leak */
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:3 
memset (&table, 0, 32);
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
_3 = bfd_hash_table_init_n (&table, 10, 10);
./benchmarks/binutils/leak_3/binutils_leak_3.c:199:15: warning: free in this location
  199 |         if (! bfd_hash_table_init_n (&table, entsize, size))
      |               ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
memset (&table, 0, 32);
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: warning: use location
  210 |         memset (&table, 0, sizeof(struct bfd_hash_table)); /* memory leak */
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
_3 = bfd_hash_table_init_n (&table, 10, 10);
./benchmarks/binutils/leak_3/binutils_leak_3.c:199:15: warning: free in this location
  199 |         if (! bfd_hash_table_init_n (&table, entsize, size))
      |               ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
memset (&table, 0, 32);
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: warning: use location
  210 |         memset (&table, 0, sizeof(struct bfd_hash_table)); /* memory leak */
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_hash_table_init_n 
[40;44m =======trace_function_path bfd_hash_table_init_n  function_call count: 4 level :888========  [0m
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
[40;36m ======= node_fun:bfd_hash_table_init_n========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;46m =======add node_fun stack:objalloc_free========= [0m
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :889========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;46m =======add node_fun stack:objalloc_alloc========= [0m
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :889========  [0m
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:objalloc_create========= [0m
objalloc_create this fucntion return value is heap-object 
bfd_hash_table_init_n this fucntion return value is heap-object objalloc_create
[40;46m =======add node_fun stack:objalloc_create========= [0m
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :889========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
some fucntion return value is heap-object and with Collection SSA_NAME alias relation

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
is Other function bfd_hash_table_init_n
 
 Start check Pointer Collect  

======================================================================
memset (&table, 0, 32);
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: warning: use location
  210 |         memset (&table, 0, sizeof(struct bfd_hash_table)); /* memory leak */
      |         ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
if (_3 == 0)
./benchmarks/binutils/leak_3/binutils_leak_3.c:199:12: warning: use location
  199 |         if (! bfd_hash_table_init_n (&table, entsize, size))
      |            ^
# .MEM_43 = VDEF <.MEM_42>
_3 = bfd_hash_table_init_n (&table, 10, 10);
_3 = bfd_hash_table_init_n (&table, 10, 10);
./benchmarks/binutils/leak_3/binutils_leak_3.c:199:15: warning: use location
  199 |         if (! bfd_hash_table_init_n (&table, entsize, size))
      |               ^
this stmt call this function :bfd_hash_table_init_n
trace fucntion name:bfd_hash_table_init_n 
[40;44m =======trace_function_path bfd_hash_table_init_n  function_call count: 4 level :0========  [0m
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
[40;36m ======= node_fun:bfd_hash_table_init_n========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memset========= [0m
[40;46m =======add node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;46m =======add node_fun stack:objalloc_free========= [0m
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :1========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;46m =======add node_fun stack:objalloc_alloc========= [0m
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:objalloc_create========= [0m
objalloc_create this fucntion return value is heap-object 
bfd_hash_table_init_n this fucntion return value is heap-object objalloc_create
[40;46m =======add node_fun stack:objalloc_create========= [0m
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :1========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd4150166c0
    type <integer_type 0x7fd4150235e8 int public SI
        size <integer_cst 0x7fd41500edf8 constant 32>
        unit-size <integer_cst 0x7fd41500ee10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150235e8 precision:32 min <integer_cst 0x7fd41500edb0 -2147483648> max <integer_cst 0x7fd41500edc8 2147483647>
        pointer_to_this <pointer_type 0x7fd41502a9d8>>
   
    def_stmt _3 = bfd_hash_table_init_n (&table, 10, 10);
    version:3>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
_3 = bfd_hash_table_init_n (&table, 10, 10);
./benchmarks/binutils/leak_3/binutils_leak_3.c:199:15: warning: free in this location
  199 |         if (! bfd_hash_table_init_n (&table, entsize, size))
      |               ^

===== possiable asias =====
# .MEM_45 = VDEF <.MEM_44>
memset (&table, 0, 32);
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: warning: use location
  210 |         memset (&table, 0, sizeof(struct bfd_hash_table)); /* memory leak */
      |         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_43 = VDEF <.MEM_42>
_3 = bfd_hash_table_init_n (&table, 10, 10);
./benchmarks/binutils/leak_3/binutils_leak_3.c:199:15: warning: free in this location
  199 |         if (! bfd_hash_table_init_n (&table, entsize, size))
      |               ^

===== possiable asias =====
if (_3 == 0)
./benchmarks/binutils/leak_3/binutils_leak_3.c:199:12: warning: use location
  199 |         if (! bfd_hash_table_init_n (&table, entsize, size))
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd415016750
    type <pointer_type 0x7fd414b26540
        type <integer_type 0x7fd414b26498 char readonly QI
            size <integer_cst 0x7fd41500eca8 constant 8>
            unit-size <integer_cst 0x7fd41500ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150233f0 precision:8 min <integer_cst 0x7fd414b1d738 -128> max <integer_cst 0x7fd414b1d720 127>
            pointer_to_this <pointer_type 0x7fd414b26540>>
        unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = hash[cnt_6];
    version:5
    ptr-info 0x7fd414b35648>
 <ssa_name 0x7fd415016750
    type <pointer_type 0x7fd414b26540
        type <integer_type 0x7fd414b26498 char readonly QI
            size <integer_cst 0x7fd41500eca8 constant 8>
            unit-size <integer_cst 0x7fd41500ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150233f0 precision:8 min <integer_cst 0x7fd414b1d738 -128> max <integer_cst 0x7fd414b1d720 127>
            pointer_to_this <pointer_type 0x7fd414b26540>>
        unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = hash[cnt_6];
    version:5
    ptr-info 0x7fd414b35648>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd415016750
    type <pointer_type 0x7fd414b26540
        type <integer_type 0x7fd414b26498 char readonly QI
            size <integer_cst 0x7fd41500eca8 constant 8>
            unit-size <integer_cst 0x7fd41500ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150233f0 precision:8 min <integer_cst 0x7fd414b1d738 -128> max <integer_cst 0x7fd414b1d720 127>
            pointer_to_this <pointer_type 0x7fd414b26540>>
        unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = hash[cnt_6];
    version:5
    ptr-info 0x7fd414b35648>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_49 = VDEF <.MEM_29>
bfd_hash_insert (&table, _5, _4);
bfd_hash_insert (&table, _5, _4);
./benchmarks/binutils/leak_3/binutils_leak_3.c:204:25: warning: use location
  204 |                         bfd_hash_insert (&table, hash[cnt], cnt);
      |                         ^
this stmt call this function :bfd_hash_insert
trace fucntion name:bfd_hash_insert 
[40;44m =======trace_function_path bfd_hash_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fd415016750
    type <pointer_type 0x7fd414b26540
        type <integer_type 0x7fd414b26498 char readonly QI
            size <integer_cst 0x7fd41500eca8 constant 8>
            unit-size <integer_cst 0x7fd41500ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150233f0 precision:8 min <integer_cst 0x7fd414b1d738 -128> max <integer_cst 0x7fd414b1d720 127>
            pointer_to_this <pointer_type 0x7fd414b26540>>
        unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = hash[cnt_6];
    version:5
    ptr-info 0x7fd414b35648>
[40;36m ======= node_fun:bfd_hash_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;46m =======add node_fun stack:objalloc_alloc========= [0m
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fd415016750
    type <pointer_type 0x7fd414b26540
        type <integer_type 0x7fd414b26498 char readonly QI
            size <integer_cst 0x7fd41500eca8 constant 8>
            unit-size <integer_cst 0x7fd41500ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150233f0 precision:8 min <integer_cst 0x7fd414b1d738 -128> max <integer_cst 0x7fd414b1d720 127>
            pointer_to_this <pointer_type 0x7fd414b26540>>
        unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = hash[cnt_6];
    version:5
    ptr-info 0x7fd414b35648>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_49 = VDEF <.MEM_29>
bfd_hash_insert (&table, _5, _4);
bfd_hash_insert (&table, _5, _4);
./benchmarks/binutils/leak_3/binutils_leak_3.c:204:25: warning: use location
this stmt call this function :bfd_hash_insert
trace fucntion name:bfd_hash_insert 
[40;44m =======trace_function_path bfd_hash_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fd415016750
    type <pointer_type 0x7fd414b26540
        type <integer_type 0x7fd414b26498 char readonly QI
            size <integer_cst 0x7fd41500eca8 constant 8>
            unit-size <integer_cst 0x7fd41500ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150233f0 precision:8 min <integer_cst 0x7fd414b1d738 -128> max <integer_cst 0x7fd414b1d720 127>
            pointer_to_this <pointer_type 0x7fd414b26540>>
        unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = hash[cnt_6];
    version:5
    ptr-info 0x7fd414b35648>
[40;36m ======= node_fun:bfd_hash_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;46m =======add node_fun stack:objalloc_alloc========= [0m
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fd415016750
    type <pointer_type 0x7fd414b26540
        type <integer_type 0x7fd414b26498 char readonly QI
            size <integer_cst 0x7fd41500eca8 constant 8>
            unit-size <integer_cst 0x7fd41500ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150233f0 precision:8 min <integer_cst 0x7fd414b1d738 -128> max <integer_cst 0x7fd414b1d720 127>
            pointer_to_this <pointer_type 0x7fd414b26540>>
        unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = hash[cnt_6];
    version:5
    ptr-info 0x7fd414b35648>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd415016750
    type <pointer_type 0x7fd414b26540
        type <integer_type 0x7fd414b26498 char readonly QI
            size <integer_cst 0x7fd41500eca8 constant 8>
            unit-size <integer_cst 0x7fd41500ecc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd4150233f0 precision:8 min <integer_cst 0x7fd414b1d738 -128> max <integer_cst 0x7fd414b1d720 127>
            pointer_to_this <pointer_type 0x7fd414b26540>>
        unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = hash[cnt_6];
    version:5
    ptr-info 0x7fd414b35648>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd415016708
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
   
    def_stmt _4 = (long unsigned int) cnt_6;
    version:4>
 <ssa_name 0x7fd415016708
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
   
    def_stmt _4 = (long unsigned int) cnt_6;
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd415016708
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
   
    def_stmt _4 = (long unsigned int) cnt_6;
    version:4>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_49 = VDEF <.MEM_29>
bfd_hash_insert (&table, _5, _4);
bfd_hash_insert (&table, _5, _4);
./benchmarks/binutils/leak_3/binutils_leak_3.c:204:25: warning: use location
this stmt call this function :bfd_hash_insert
trace fucntion name:bfd_hash_insert 
[40;44m =======trace_function_path bfd_hash_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fd415016708
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
   
    def_stmt _4 = (long unsigned int) cnt_6;
    version:4>
[40;36m ======= node_fun:bfd_hash_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;46m =======add node_fun stack:objalloc_alloc========= [0m
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fd415016708
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
   
    def_stmt _4 = (long unsigned int) cnt_6;
    version:4>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_49 = VDEF <.MEM_29>
bfd_hash_insert (&table, _5, _4);
bfd_hash_insert (&table, _5, _4);
./benchmarks/binutils/leak_3/binutils_leak_3.c:204:25: warning: use location
this stmt call this function :bfd_hash_insert
trace fucntion name:bfd_hash_insert 
[40;44m =======trace_function_path bfd_hash_insert  function_call count: 1 level :0========  [0m
 <ssa_name 0x7fd415016708
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
   
    def_stmt _4 = (long unsigned int) cnt_6;
    version:4>
[40;36m ======= node_fun:bfd_hash_insert========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;46m =======add node_fun stack:objalloc_alloc========= [0m
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fd415016708
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
   
    def_stmt _4 = (long unsigned int) cnt_6;
    version:4>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd415016708
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
   
    def_stmt _4 = (long unsigned int) cnt_6;
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:bfd_dwarf2_cleanup_debug_info========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_dwarf2_cleanup_debug_info  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;42m =======pre_check_funciton:bfd_dwarf2_cleanup_debug_info========= [0m
[40;42m =======start_check_funciton:bfd_dwarf2_cleanup_debug_info========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
objalloc_free (_1);
In function ‘bfd_dwarf2_cleanup_debug_info’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
objalloc_free (_1);
In function ‘bfd_dwarf2_cleanup_debug_info’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd415016ee8
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7fd414b35660>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_dwarf2_cleanup_debug_info========= [0m
[40;44m =======node_fun:bfd_hash_insert========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_hash_insert  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_15 = chunk_8 + 512;
In function ‘bfd_hash_insert’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
o_9(D)->chunks = chunk_8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^
o_9(D)->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
chunk_8->next = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^
chunk_8->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^
if (chunk_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
chunk_8 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;42m =======pre_check_funciton:bfd_hash_insert========= [0m
[40;42m =======start_check_funciton:bfd_hash_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
hashp_13 = objalloc_alloc (_1, 24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
*_7 = hashp_13;
In function ‘bfd_hash_insert’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
hashp_13->hash = hash_14(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^
_4 = hash_14(D) % _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^
_20 = _4 & 4294967295;
lto1: warning: use location
_6 = _20 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^
_7 = _5 + _6;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40000
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7fd414b35690>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>

 ================== pre trace ptable ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_24 = VDEF <.MEM_17(D)>
exit (1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:92:17: warning: use location
   92 |                 exit (1);
      |                 ^
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with hashp ========= [0m
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>
is Other function objalloc_alloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
hashp_13 = objalloc_alloc (_1, 24);
In function ‘bfd_hash_insert’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with hashp ========= [0m
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:hashp========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
*_7 = hashp_13;
In function ‘bfd_hash_insert’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
hashp_13->hash = hash_14(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^
_4 = hash_14(D) % _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^
_20 = _4 & 4294967295;
lto1: warning: use location
_6 = _20 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^
_7 = _5 + _6;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b402d0
    type <pointer_type 0x7fd414b2edc8
        type <record_type 0x7fd414b2ed20 bfd_hash_entry BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ed20 fields <field_decl 0x7fd414b29850 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2edc8>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd414b2ee70>>
    var <var_decl 0x7fd414b3d1b0 hashp>
    def_stmt hashp_13 = objalloc_alloc (_1, 24);
    version:13
    ptr-info 0x7fd414b356f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_hash_insert========= [0m
[40;44m =======node_fun:bfd_hash_table_init_n========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_hash_table_init_n  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_15 = chunk_8 + 512;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
o_9(D)->chunks = chunk_8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^
o_9(D)->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
chunk_8->next = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^
chunk_8->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^
if (chunk_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
chunk_8 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;42m =======pre add _ fucntion:objalloc_create========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path objalloc_create  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:objalloc_create========= [0m
[40;42m =======start_check_funciton:objalloc_create========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b49438
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3dbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7fd414b35918>
 <ssa_name 0x7fd414b49438
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3dbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7fd414b35918>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
ret_8 = malloc (24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:61:35: warning: use location
   61 |         ret = (struct objalloc *) malloc (sizeof *ret); /* allocation site */
      |                                   ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b49438
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3dbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7fd414b35918>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
_1 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:23: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                       ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
_1 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:23: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                       ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:objalloc_create========= [0m
[40;42m =======pre_check_funciton:bfd_hash_table_init_n========= [0m
[40;42m =======start_check_funciton:bfd_hash_table_init_n========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>

 ================== pre trace ptable ================== 
trace fucntion name:objalloc_create 
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_create’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:chunk========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
chunk_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                           ^
_3 = chunk_11 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
is Other function objalloc_create
 
 Start check Pointer Collect  

======================================================================
table_14(D)->memory = _1;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
this stmt call this function :objalloc_create
trace fucntion name:objalloc_create 
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :0========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_create’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:chunk========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
chunk_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                           ^
_3 = chunk_11 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:43: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b405a0
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7fd414b35720>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# VUSE <.MEM_26>
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: free in this location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^

===== possiable asias =====
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40630
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7fd414b35750>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with alloc ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40828
    type <integer_type 0x7fd4150237e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd415023738 precision:64 min <integer_cst 0x7fd41500ee88 0> max <integer_cst 0x7fd41500f500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fd41502f7e0>>
    var <var_decl 0x7fd414b3d360 alloc>
    def_stmt alloc_11 = alloc_10 * 8;
    version:11>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>

 ================== pre trace ptable ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_24 = VDEF <.MEM_17(D)>
exit (1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:92:17: warning: use location
   92 |                 exit (1);
      |                 ^
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
is Other function objalloc_alloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
_4 = objalloc_alloc (_3, alloc_11);
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                                         ^
_2 = chunk_8 + 32;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:41: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40678
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _4 = objalloc_alloc (_3, alloc_11);
    version:4
    ptr-info 0x7fd414b35768>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt call this function :objalloc_alloc
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
table_14(D)->table = _4;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt call this function :objalloc_free
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:l========= [0m
In function ‘objalloc_free’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
  115 |         l = (struct objalloc_chunk *) o->chunks;
      |           ^
l_5 = o_4(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:115:11: warning: use location
l_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:table========= [0m
[40;36m ======= relate gimple_assign_lhs:next========= [0m
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
  121 |                         next = l->next;
      |                              ^
next_7 = l_1->next;
./benchmarks/binutils/leak_3/binutils_leak_3.c:121:30: warning: use location
next_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
_5 = table_14(D)->table;
In function ‘bfd_hash_table_init_n’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40870
    type <pointer_type 0x7fd414b2ec78
        type <record_type 0x7fd414b2ebd0 bfd_hash_table BLK
            size <integer_cst 0x7fd41500ef18 constant 256>
            unit-size <integer_cst 0x7fd41502c018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2ebd0 fields <field_decl 0x7fd414b29688 table> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2ec78>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fd414b3e200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7fd414b357b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: free in this location
  148 |                         objalloc_free(table);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
this stmt call this function :memset
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40708
    type <pointer_type 0x7fd414b2ee70
        type <pointer_type 0x7fd414b2edc8 type <record_type 0x7fd414b2ed20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7fd41500ebb8 constant 64>
            unit-size <integer_cst 0x7fd41500ebd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd414b2ee70>>
        public unsigned DI size <integer_cst 0x7fd41500ebb8 64> unit-size <integer_cst 0x7fd41500ebd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7fd414b35798>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_hash_table_init_n========= [0m
[40;44m =======node_fun:objalloc_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;44m =======node_fun:objalloc_alloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_15 = chunk_8 + 512;
In function ‘objalloc_alloc’:
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
o_9(D)->chunks = chunk_8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^
o_9(D)->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^
chunk_8->next = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^
chunk_8->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^
if (chunk_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
chunk_8 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b40f78
    type <pointer_type 0x7fd414b2e7e0
        type <record_type 0x7fd414b2e738 objalloc_chunk TI
            size <integer_cst 0x7fd41500ec00 constant 128>
            unit-size <integer_cst 0x7fd41500ec18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e738 fields <field_decl 0x7fd414b29390 next> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e7e0>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3d870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7fd414b35870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;44m =======node_fun:objalloc_create========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path objalloc_create  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:objalloc_create========= [0m
[40;42m =======start_check_funciton:objalloc_create========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fd414b49438
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3dbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7fd414b35918>
 <ssa_name 0x7fd414b49438
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3dbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7fd414b35918>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_4 = PHI <0B(2), 0B(4), ret_8(5)>
In function ‘objalloc_create’:
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
ret_8 = malloc (24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:61:35: warning: use location
   61 |         ret = (struct objalloc *) malloc (sizeof *ret); /* allocation site */
      |                                   ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b49438
    type <pointer_type 0x7fd414b2e540
        type <record_type 0x7fd414b2e498 objalloc BLK
            size <integer_cst 0x7fd41502c078 constant 192>
            unit-size <integer_cst 0x7fd41502c048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fd414b2e498 fields <field_decl 0x7fd414b29260 current_ptr> context <translation_unit_decl 0x7fd415019168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7fd414b2e540>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fd414b3dbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7fd414b35918>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
_1 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:23: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                       ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
_1 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:23: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                       ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fd414b49318
    type <pointer_type 0x7fd41502a000
        type <void_type 0x7fd415023f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7fd41502a000>>
        public unsigned DI
        size <integer_cst 0x7fd41500ebb8 constant 64>
        unit-size <integer_cst 0x7fd41500ebd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fd41502f9d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7fd414b358b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location

===== possiable asias =====
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: free in this location
   69 |                         free (ret);
      |                         ^

===== possiable asias =====
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:objalloc_create========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 147883528]:
hash[0] = "a";
hash[1] = "b";
hash[2] = "c";
hash[3] = "d";
hash[4] = "e";
hash[5] = "f";
hash[6] = "g";
hash[7] = "h";
hash[8] = "i";
hash[9] = "j";
_1 = time (&t);
_2 = (unsigned int) _1;
srand (_2);
_3 = bfd_hash_table_init_n (&table, 10, 10);
if (_3 == 0)
  goto <bb 3>; [34.00%]
else
  goto <bb 7>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 97603128]:
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 50280400]:
t ={v} {CLOBBER};
table ={v} {CLOBBER};
hash ={v} {CLOBBER};
return;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 976138697]:
_4 = (long unsigned int) cnt_6;
_5 = hash[cnt_6];
bfd_hash_insert (&table, _5, _4);
cnt_28 = cnt_6 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# cnt_6 = PHI <0(7), cnt_28(4)>
if (cnt_6 <= 9)
  goto <bb 4>; [90.91%]
else
  goto <bb 6>; [9.09%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 97603128]:
bfd_dwarf2_cleanup_debug_info (&table);
memset (&table, 0, 32);
t ={v} {CLOBBER};
table ={v} {CLOBBER};
hash ={v} {CLOBBER};
return 0;

=======Mapping node_fun:bfd_dwarf2_cleanup_debug_info=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = table_3(D)->memory;
objalloc_free (_1);
return;

=======Mapping node_fun:bfd_hash_insert=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = table_11(D)->memory;
hashp_13 = objalloc_alloc (_1, 24);
hashp_13->hash = hash_14(D);
hashp_13->string = string_16(D);
_2 = table_11(D)->size;
_3 = (long unsigned int) _2;
_4 = hash_14(D) % _3;
_5 = table_11(D)->table;
_20 = _4 & 4294967295;
_6 = _20 * 8;
_7 = _5 + _6;
*_7 = hashp_13;
_8 = table_11(D)->count;
_9 = _8 + 1;
table_11(D)->count = _9;
return hashp_13;

=======Mapping node_fun:bfd_hash_table_init_n=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
alloc_10 = (long unsigned int) size_9(D);
alloc_11 = alloc_10 * 8;
_1 = objalloc_create ();
table_14(D)->memory = _1;
_2 = table_14(D)->memory;
if (_2 == 0B)
  goto <bb 6>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418729]:
_3 = table_14(D)->memory;
_4 = objalloc_alloc (_3, alloc_11);
table_14(D)->table = _4;
_5 = table_14(D)->table;
if (_5 == 0B)
  goto <bb 4>; [18.09%]
else
  goto <bb 5>; [81.91%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 134122648]:
objalloc_free (table_14(D));
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 607296081]:
_6 = table_14(D)->table;
memset (_6, 0, alloc_11);
table_14(D)->size = size_9(D);
table_14(D)->entsize = entsize_20(D);
table_14(D)->count = 0;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _7 = PHI <0(2), 0(4), 1(5)>
return _7;

=======Mapping node_fun:objalloc_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
l_5 = o_4(D)->chunks;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
next_7 = l_1->next;
free (l_1);

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# l_1 = PHI <l_5(2), next_7(3)>
if (l_1 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
free (o_4(D));
return;

=======Mapping node_fun:objalloc_alloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (len_5(D) > 4064)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
chunk_8 = malloc (4064);
if (chunk_8 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1072883005]:
_1 = o_9(D)->chunks;
chunk_8->next = _1;
chunk_8->current_ptr = 0B;
_2 = chunk_8 + 32;
o_9(D)->current_ptr = _2;
o_9(D)->current_space = 4032;
o_9(D)->chunks = chunk_8;
_15 = chunk_8 + 512;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073312329]:
# _3 = PHI <0B(4), _15(5)>
return _3;

=======Mapping node_fun:objalloc_create=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ret_8 = malloc (24);
if (ret_8 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 3>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1073312329]:
_1 = malloc (4064);
ret_8->chunks = _1;
_2 = ret_8->chunks;
if (_2 == 0B)
  goto <bb 4>; [4.25%]
else
  goto <bb 5>; [95.75%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 45615770]:
free (ret_8);
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1027696559]:
chunk_11 = ret_8->chunks;
chunk_11->next = 0B;
chunk_11->current_ptr = 0B;
chunk_11->next = 0B;
_3 = chunk_11 + 32;
ret_8->current_ptr = _3;
ret_8->current_space = 4032;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _4 = PHI <0B(2), 0B(4), ret_8(5)>
return _4;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    all ptable point : 23 [0m
[40;34m    analyzable ptable point : 19 [0m
[40;34m    used_stmt array stack totalsize of : 0.002840 mb[0m
[40;34m    collect time: : 0.003597 s [0m
[40;34m    algorithm time: 0.095619 s [0m
[40;34m    gimple stmt count : : 101 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:44 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 79%)
 phase opt and generate             :   0.07 (100%)   0.06 (100%)   0.13 (100%)   526k ( 19%)
 dump files                         :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 callgraph functions expansion      :   0.03 ( 43%)   0.00 (  0%)   0.03 ( 23%)   420k ( 15%)
 ipa points-to                      :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)  5320  (  0%)
 df live regs                       :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)     0  (  0%)
 tree CCP                           :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)   272  (  0%)
 reorder blocks                     :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)  1184  (  0%)
 plugin execution                   :   0.04 ( 57%)   0.06 (100%)   0.09 ( 69%)  1136  (  0%)
 initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  8%)    12k (  0%)
 rest of compilation                :   0.01 ( 14%)   0.00 (  0%)   0.00 (  0%)    19k (  1%)
 TOTAL                              :   0.07          0.06          0.13         2726k
