./benchmarks/binutils/leak_3/binutils_leak_3.c: In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:39: warning: passing argument 1 of â€˜objalloc_freeâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
  148 |                         objalloc_free(table);
      |                                       ^~~~~
      |                                       |
      |                                       struct bfd_hash_table *
./benchmarks/binutils/leak_3/binutils_leak_3.c:110:33: note: expected â€˜struct objalloc *â€™ but argument is of type â€˜struct bfd_hash_table *â€™
  110 | objalloc_free (struct objalloc *o)
      |                ~~~~~~~~~~~~~~~~~^
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: implicit declaration of function â€˜memsetâ€™ [-Wimplicit-function-declaration]
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^~~~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:7:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memsetâ€™
    6 | #include "../include/common.h"
  +++ |+#include <string.h>
    7 | 
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: incompatible implicit declaration of built-in function â€˜memsetâ€™ [-Wbuiltin-declaration-mismatch]
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^~~~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memsetâ€™
./benchmarks/binutils/leak_3/binutils_leak_3.c: In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:15: warning: implicit declaration of function â€˜timeâ€™ [-Wimplicit-function-declaration]
  197 |         srand(time(&t));
      |               ^~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: â€˜returnâ€™ with no value, in function returning non-void
  200 |                 return;
      |                 ^~~~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:185:5: note: declared here
  185 | int main()
      |     ^~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: warning: incompatible implicit declaration of built-in function â€˜memsetâ€™ [-Wbuiltin-declaration-mismatch]
  210 |         memset (&table, 0, sizeof(struct bfd_hash_table)); /* memory leak */
      |         ^~~~~~
./benchmarks/binutils/leak_3/binutils_leak_3.c:210:9: note: include â€˜<string.h>â€™ or provide a declaration of â€˜memsetâ€™
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -2.9%|          |
nothrow                          |      |      |      |      |     -3.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     +0.2%|          |
ethread                          |      |      |      |      |     +0.2%|          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.2%|          |
phiopt                           |      |      |      |      |     -0.2%|          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:bfd_dwarf2_cleanup_debug_info=========
=======node_fun:bfd_hash_insert=========
=======node_fun:bfd_hash_table_init_n=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:objalloc_free=========
--------GIMPLE Cond -------
=======node_fun:objalloc_alloc=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:objalloc_create=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_31 = VDEF <.MEM_30(D)>
hash[0] = "a";
# .MEM_32 = VDEF <.MEM_31>
hash[1] = "b";
# .MEM_33 = VDEF <.MEM_32>
hash[2] = "c";
# .MEM_34 = VDEF <.MEM_33>
hash[3] = "d";
# .MEM_35 = VDEF <.MEM_34>
hash[4] = "e";
# .MEM_36 = VDEF <.MEM_35>
hash[5] = "f";
# .MEM_37 = VDEF <.MEM_36>
hash[6] = "g";
# .MEM_38 = VDEF <.MEM_37>
hash[7] = "h";
# .MEM_39 = VDEF <.MEM_38>
hash[8] = "i";
# .MEM_40 = VDEF <.MEM_39>
hash[9] = "j";
# .MEM_41 = VDEF <.MEM_40>
_1 = time (&t);
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
# .MEM_43 = VDEF <.MEM_42>
_3 = bfd_hash_table_init_n (&table, 10, 10);
# .MEM_49 = VDEF <.MEM_29>
bfd_hash_insert (&table, _5, _4);
# .MEM_44 = VDEF <.MEM_29>
bfd_dwarf2_cleanup_debug_info (&table);
# .MEM_45 = VDEF <.MEM_44>
memset (&table, 0, 32);
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:bfd_dwarf2_cleanup_debug_info========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_dwarf2_cleanup_debug_info  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;42m =======pre_check_funciton:bfd_dwarf2_cleanup_debug_info========= [0m
[40;42m =======start_check_funciton:bfd_dwarf2_cleanup_debug_info========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c5217ee8
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7f05c4d47660>
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
objalloc_free (_1);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
objalloc_free (_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c5217ee8
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7f05c4d47660>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_dwarf2_cleanup_debug_info========= [0m
[40;42m =======pre add _ fucntion:bfd_hash_insert========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_hash_insert  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = chunk_8 + 512;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->chunks = chunk_8;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_space = 4032;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_1 = o_9(D)->chunks;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->next = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->current_ptr = 0B;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (chunk_8 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
if (chunk_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
Cond in fucntion objalloc_alloc basic block 4
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 6
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
chunk_8 = malloc (4064);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f05c4d47540 type <integer_type 0x7f05c4d400a8 size_t> constant 4064>
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;42m =======pre_check_funciton:bfd_hash_insert========= [0m
[40;42m =======start_check_funciton:bfd_hash_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52000
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7f05c4d47690>
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
hashp_13 = objalloc_alloc (_1, 24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
*_7 = hashp_13;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
hashp_13->hash = hash_14(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^
_4 = hash_14(D) % _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^
_20 = _4 & 4294967295;
lto1: warning: use location
_6 = _20 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^
_7 = _5 + _6;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52000
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7f05c4d47690>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_hash_insert========= [0m
[40;42m =======pre add _ fucntion:bfd_hash_table_init_n========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_hash_table_init_n  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = chunk_8 + 512;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->chunks = chunk_8;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_space = 4032;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_1 = o_9(D)->chunks;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->next = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->current_ptr = 0B;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (chunk_8 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
if (chunk_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
Cond in fucntion objalloc_alloc basic block 4
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 6
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
chunk_8 = malloc (4064);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f05c4d47540 type <integer_type 0x7f05c4d400a8 size_t> constant 4064>
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;42m =======pre add _ fucntion:objalloc_create========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path objalloc_create  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:objalloc_create========= [0m
[40;42m =======start_check_funciton:objalloc_create========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d5b438
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4fbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7f05c4d47918>
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), 0B(4), ret_8(5)>
bb index := 6
# VUSE <.MEM_48>
return 0;
In function â€˜objalloc_createâ€™:
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================
_4 = PHI <0B(2), 0B(4), ret_8(5)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
ret_8->chunks = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_2 = ret_8->chunks;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
Cond in fucntion objalloc_create basic block 3
 ================== possible direct basic block ================= 
from objalloc_create basic block 4
 ================== possible direct basic block ================= 
from objalloc_create basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (ret_8 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
Cond in fucntion objalloc_create basic block 2
 ================== possible direct basic block ================= 
from objalloc_create basic block 6
 ================== possible direct basic block ================= 
from objalloc_create basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
ret_8 = malloc (24);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:61:35: warning: use location
   61 |         ret = (struct objalloc *) malloc (sizeof *ret); /* allocation site */
      |                                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d5b438
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4fbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7f05c4d47918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f05c4d5b318
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7f05c4d478b8>
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
ret_8->chunks = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
ret_8->chunks = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), 0B(4), ret_8(5)>
bb index := 6
# VUSE <.MEM_48>
return 0;
In function â€˜objalloc_createâ€™:
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================
_4 = PHI <0B(2), 0B(4), ret_8(5)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_2 = ret_8->chunks;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
Cond in fucntion objalloc_create basic block 3
 ================== possible direct basic block ================= 
from objalloc_create basic block 4
 ================== possible direct basic block ================= 
from objalloc_create basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (ret_8 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
Cond in fucntion objalloc_create basic block 2
 ================== possible direct basic block ================= 
from objalloc_create basic block 6
 ================== possible direct basic block ================= 
from objalloc_create basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_1 = malloc (4064);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:23: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d5b318
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7f05c4d478b8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f05c4d47438 type <integer_type 0x7f05c52247e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:objalloc_create========= [0m
[40;42m =======pre_check_funciton:bfd_hash_table_init_n========= [0m
[40;42m =======start_check_funciton:bfd_hash_table_init_n========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d525a0
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7f05c4d47720>
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();

 ================== trace ptable================== 
trace fucntion name:objalloc_create 
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :888========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---objalloc_create-----
this other function ------objalloc_create-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_10 = (long unsigned int) size_9(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_11 = alloc_10 * 8;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_4 = objalloc_alloc (_3, alloc_11);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
table_14(D)->table = _4;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_5 = table_14(D)->table;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_5 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 3
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 4
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_3 = table_14(D)->memory;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_2 = table_14(D)->memory;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 2
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 6
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = objalloc_create ();
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
this stmt is child function---objalloc_create-----

 ================== trace ================== 
trace fucntion name:objalloc_create 
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :0========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d525a0
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7f05c4d47720>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# VUSE <.MEM_26>
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52630
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7f05c4d47750>
# VUSE <.MEM_24>
_3 = table_14(D)->memory;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_4 = objalloc_alloc (_3, alloc_11);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
table_14(D)->table = _4;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_10 = (long unsigned int) size_9(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_11 = alloc_10 * 8;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_5 = table_14(D)->table;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_5 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 3
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 4
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_3 = table_14(D)->memory;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_2 = table_14(D)->memory;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 2
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 6
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52630
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7f05c4d47750>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52870
    type <pointer_type 0x7f05c4d40c78
        type <record_type 0x7f05c4d40bd0 bfd_hash_table BLK
            size <integer_cst 0x7f05c520ff18 constant 256>
            unit-size <integer_cst 0x7f05c522d018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40bd0 fields <field_decl 0x7f05c4d3b688 table> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40c78>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f05c4d50200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f05c4d477b0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_10 = (long unsigned int) size_9(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_11 = alloc_10 * 8;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_4 = objalloc_alloc (_3, alloc_11);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate stmt argument:table ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
table_14(D)->table = _4;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = table_3(D)->memory;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:28: warning: use location
  181 |         objalloc_free(table->memory);
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

 Expand conflict 
 The same function may have multiple branches :objalloc_free
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = table_11(D)->memory;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:64: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
hashp_13 = objalloc_alloc (_1, 24);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate stmt argument:table ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
*_7 = hashp_13;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
hashp_13->string = string_16(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
hashp_13->string = string_16(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
hashp_13->hash = hash_14(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = hash_14(D) % _3;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = hash_14(D) % _3;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = hash_14(D) % _3;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = hash_14(D) % _3;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_4 = hash_14(D) % _3;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_20 = _4 & 4294967295;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_20 = _4 & 4294967295;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_20 = _4 & 4294967295;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_20 = _4 & 4294967295;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_20 = _4 & 4294967295;
In function â€˜mainâ€™:
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _20 * 8;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _20 * 8;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _20 * 8;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _20 * 8;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_6 = _20 * 8;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _5 + _6;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _5 + _6;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _5 + _6;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _5 + _6;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_7 = _5 + _6;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_2 = table_14(D)->memory;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 2
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 6
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_3 = table_14(D)->memory;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate stmt argument:table ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_5 = table_14(D)->table;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_5 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 3
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 4
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52870
    type <pointer_type 0x7f05c4d40c78
        type <record_type 0x7f05c4d40bd0 bfd_hash_table BLK
            size <integer_cst 0x7f05c520ff18 constant 256>
            unit-size <integer_cst 0x7f05c522d018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40bd0 fields <field_decl 0x7f05c4d3b688 table> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40c78>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f05c4d50200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f05c4d477b0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:28: warning: use location
  181 |         objalloc_free(table->memory);
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:64: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
_4 = hash_14(D) % _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
_20 = _4 & 4294967295;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
_6 = _20 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
_7 = _5 + _6;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52708
    type <pointer_type 0x7f05c4d40e70
        type <pointer_type 0x7f05c4d40dc8 type <record_type 0x7f05c4d40d20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7f05c520fbb8 constant 64>
            unit-size <integer_cst 0x7f05c520fbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c4d40e70>>
        public unsigned DI size <integer_cst 0x7f05c520fbb8 64> unit-size <integer_cst 0x7f05c520fbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7f05c4d47798>
# VUSE <.MEM_26>
_6 = table_14(D)->table;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52708
    type <pointer_type 0x7f05c4d40e70
        type <pointer_type 0x7f05c4d40dc8 type <record_type 0x7f05c4d40d20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7f05c520fbb8 constant 64>
            unit-size <integer_cst 0x7f05c520fbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c4d40e70>>
        public unsigned DI size <integer_cst 0x7f05c520fbb8 64> unit-size <integer_cst 0x7f05c520fbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7f05c4d47798>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_hash_table_init_n========= [0m
[40;42m =======pre add _ fucntion:srand========= [0m
[40;33m =======POP node_fun stack:srand========= [0m
[40;42m =======pre add _ fucntion:time========= [0m
[40;33m =======POP node_fun stack:time========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f05c540bc60
    type <pointer_type 0x7f05c4d41690
        type <integer_type 0x7f05c4d41348 time_t DI
            size <integer_cst 0x7f05c520fbb8 constant 64>
            unit-size <integer_cst 0x7f05c520fbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c5224738 precision:64 min <integer_cst 0x7f05c520fe40 -9223372036854775808> max <integer_cst 0x7f05c520fe58 9223372036854775807> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d41690>>
        unsigned DI size <integer_cst 0x7f05c520fbb8 64> unit-size <integer_cst 0x7f05c520fbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f05c5ab7cf0 t type <integer_type 0x7f05c4d41348 time_t>
        addressable DI ./benchmarks/binutils/leak_3/binutils_leak_3.c:187:9 size <integer_cst 0x7f05c520fbb8 64> unit-size <integer_cst 0x7f05c520fbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main>
        chain <var_decl 0x7f05c5ab7c60 table type <record_type 0x7f05c4d40bd0 bfd_hash_table>
            addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24
            size <integer_cst 0x7f05c520ff18 constant 256>
            unit-size <integer_cst 0x7f05c522d018 constant 32>
            align:64 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main> chain <var_decl 0x7f05c5ab7bd0 cnt>>>
    ./benchmarks/binutils/leak_3/binutils_leak_3.c:197:8 start: ./benchmarks/binutils/leak_3/binutils_leak_3.c:197:8 finish: ./benchmarks/binutils/leak_3/binutils_leak_3.c:197:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f05c5217678
    type <integer_type 0x7f05c5224690 unsigned int public unsigned SI
        size <integer_cst 0x7f05c520fdf8 constant 32>
        unit-size <integer_cst 0x7f05c520fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c5224690 precision:32 min <integer_cst 0x7f05c520fe28 0> max <integer_cst 0x7f05c520fde0 4294967295>
        pointer_to_this <pointer_type 0x7f05c5230690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>
_2 = (unsigned int) _1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:9: warning: use location
  197 |         srand(time(&t));
      |         ^
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
# .MEM_42 = VDEF <.MEM_41>
srand (_2);
srand (_2);
./benchmarks/binutils/leak_3/binutils_leak_3.c:197:9: warning: use location
  197 |         srand(time(&t));
      |         ^
this stmt is child function---srand-----

 ================== trace ================== 
trace fucntion name:srand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c5217678
    type <integer_type 0x7f05c5224690 unsigned int public unsigned SI
        size <integer_cst 0x7f05c520fdf8 constant 32>
        unit-size <integer_cst 0x7f05c520fe10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c5224690 precision:32 min <integer_cst 0x7f05c520fe28 0> max <integer_cst 0x7f05c520fde0 4294967295>
        pointer_to_this <pointer_type 0x7f05c5230690>>
   
    def_stmt _2 = (unsigned int) _1;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f05c540bcc0
    type <pointer_type 0x7f05c4d40c78
        type <record_type 0x7f05c4d40bd0 bfd_hash_table BLK
            size <integer_cst 0x7f05c520ff18 constant 256>
            unit-size <integer_cst 0x7f05c522d018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40bd0 fields <field_decl 0x7f05c4d3b688 table> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40c78>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f05c5ab7c60 table type <record_type 0x7f05c4d40bd0 bfd_hash_table>
        addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7f05c520ff18 256> unit-size <integer_cst 0x7f05c522d018 32>
        align:64 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main>
        chain <var_decl 0x7f05c5ab7bd0 cnt type <integer_type 0x7f05c5224690 unsigned int>
            unsigned SI ./benchmarks/binutils/leak_3/binutils_leak_3.c:193:15
            size <integer_cst 0x7f05c520fdf8 constant 32>
            unit-size <integer_cst 0x7f05c520fe10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main> chain <var_decl 0x7f05c5ab7b40 hash>>>
    ./benchmarks/binutils/leak_3/binutils_leak_3.c:199:8 start: ./benchmarks/binutils/leak_3/binutils_leak_3.c:199:8 finish: ./benchmarks/binutils/leak_3/binutils_leak_3.c:199:8>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f05c540bd00
    type <pointer_type 0x7f05c4d40c78
        type <record_type 0x7f05c4d40bd0 bfd_hash_table BLK
            size <integer_cst 0x7f05c520ff18 constant 256>
            unit-size <integer_cst 0x7f05c522d018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40bd0 fields <field_decl 0x7f05c4d3b688 table> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40c78>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f05c5ab7c60 table type <record_type 0x7f05c4d40bd0 bfd_hash_table>
        addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7f05c520ff18 256> unit-size <integer_cst 0x7f05c522d018 32>
        align:64 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main>
        chain <var_decl 0x7f05c5ab7bd0 cnt type <integer_type 0x7f05c5224690 unsigned int>
            unsigned SI ./benchmarks/binutils/leak_3/binutils_leak_3.c:193:15
            size <integer_cst 0x7f05c520fdf8 constant 32>
            unit-size <integer_cst 0x7f05c520fe10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main> chain <var_decl 0x7f05c5ab7b40 hash>>>
    ./benchmarks/binutils/leak_3/binutils_leak_3.c:204:4 start: ./benchmarks/binutils/leak_3/binutils_leak_3.c:204:4 finish: ./benchmarks/binutils/leak_3/binutils_leak_3.c:204:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f05c540bd40
    type <pointer_type 0x7f05c4d40c78
        type <record_type 0x7f05c4d40bd0 bfd_hash_table BLK
            size <integer_cst 0x7f05c520ff18 constant 256>
            unit-size <integer_cst 0x7f05c522d018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40bd0 fields <field_decl 0x7f05c4d3b688 table> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40c78>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f05c5ab7c60 table type <record_type 0x7f05c4d40bd0 bfd_hash_table>
        addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7f05c520ff18 256> unit-size <integer_cst 0x7f05c522d018 32>
        align:64 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main>
        chain <var_decl 0x7f05c5ab7bd0 cnt type <integer_type 0x7f05c5224690 unsigned int>
            unsigned SI ./benchmarks/binutils/leak_3/binutils_leak_3.c:193:15
            size <integer_cst 0x7f05c520fdf8 constant 32>
            unit-size <integer_cst 0x7f05c520fe10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main> chain <var_decl 0x7f05c5ab7b40 hash>>>
    ./benchmarks/binutils/leak_3/binutils_leak_3.c:209:2 start: ./benchmarks/binutils/leak_3/binutils_leak_3.c:209:2 finish: ./benchmarks/binutils/leak_3/binutils_leak_3.c:209:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f05c540bd80
    type <pointer_type 0x7f05c4d40c78
        type <record_type 0x7f05c4d40bd0 bfd_hash_table BLK
            size <integer_cst 0x7f05c520ff18 constant 256>
            unit-size <integer_cst 0x7f05c522d018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40bd0 fields <field_decl 0x7f05c4d3b688 table> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40c78>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f05c5ab7c60 table type <record_type 0x7f05c4d40bd0 bfd_hash_table>
        addressable BLK ./benchmarks/binutils/leak_3/binutils_leak_3.c:189:24 size <integer_cst 0x7f05c520ff18 256> unit-size <integer_cst 0x7f05c522d018 32>
        align:64 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main>
        chain <var_decl 0x7f05c5ab7bd0 cnt type <integer_type 0x7f05c5224690 unsigned int>
            unsigned SI ./benchmarks/binutils/leak_3/binutils_leak_3.c:193:15
            size <integer_cst 0x7f05c520fdf8 constant 32>
            unit-size <integer_cst 0x7f05c520fe10 constant 4>
            align:32 warn_if_not_align:0 context <function_decl 0x7f05c4d3f000 main> chain <var_decl 0x7f05c5ab7b40 hash>>>
    ./benchmarks/binutils/leak_3/binutils_leak_3.c:210:10 start: ./benchmarks/binutils/leak_3/binutils_leak_3.c:210:10 finish: ./benchmarks/binutils/leak_3/binutils_leak_3.c:210:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:bfd_dwarf2_cleanup_debug_info========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_dwarf2_cleanup_debug_info  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;42m =======pre_check_funciton:bfd_dwarf2_cleanup_debug_info========= [0m
[40;42m =======start_check_funciton:bfd_dwarf2_cleanup_debug_info========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c5217ee8
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7f05c4d47660>
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
objalloc_free (_1);
In function â€˜bfd_dwarf2_cleanup_debug_infoâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
objalloc_free (_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c5217ee8
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = table_3(D)->memory;
    version:1
    ptr-info 0x7f05c4d47660>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_dwarf2_cleanup_debug_info========= [0m
[40;44m =======node_fun:bfd_hash_insert========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_hash_insert  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = chunk_8 + 512;
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->chunks = chunk_8;
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_space = 4032;
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_1 = o_9(D)->chunks;
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->next = _1;
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->current_ptr = 0B;
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (chunk_8 == 0B)
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
if (chunk_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
Cond in fucntion objalloc_alloc basic block 4
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 6
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
chunk_8 = malloc (4064);
In function â€˜bfd_hash_insertâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f05c4d47540 type <integer_type 0x7f05c4d400a8 size_t> constant 4064>
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;42m =======pre_check_funciton:bfd_hash_insert========= [0m
[40;42m =======start_check_funciton:bfd_hash_insert========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52000
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7f05c4d47690>
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
hashp_13 = objalloc_alloc (_1, 24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 
*_7 = hashp_13;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
hashp_13->hash = hash_14(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^
_4 = hash_14(D) % _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^
_20 = _4 & 4294967295;
lto1: warning: use location
_6 = _20 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^
_7 = _5 + _6;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52000
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = table_11(D)->memory;
    version:1
    ptr-info 0x7f05c4d47690>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_hash_insert========= [0m
[40;44m =======node_fun:bfd_hash_table_init_n========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_hash_table_init_n  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memset========= [0m
[40;33m =======POP node_fun stack:memset========= [0m
[40;42m =======pre add _ fucntion:objalloc_free========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;42m =======pre add _ fucntion:objalloc_alloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = chunk_8 + 512;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->chunks = chunk_8;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_space = 4032;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_1 = o_9(D)->chunks;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->next = _1;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->current_ptr = 0B;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (chunk_8 == 0B)
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
if (chunk_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
Cond in fucntion objalloc_alloc basic block 4
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 6
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
chunk_8 = malloc (4064);
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f05c4d47540 type <integer_type 0x7f05c4d400a8 size_t> constant 4064>
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;42m =======pre add _ fucntion:objalloc_create========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path objalloc_create  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:objalloc_create========= [0m
[40;42m =======start_check_funciton:objalloc_create========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d5b438
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4fbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7f05c4d47918>
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), 0B(4), ret_8(5)>
bb index := 6
# VUSE <.MEM_48>
return 0;
In function â€˜objalloc_createâ€™:
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================
_4 = PHI <0B(2), 0B(4), ret_8(5)>
In function â€˜bfd_hash_table_init_nâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
ret_8->chunks = _1;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_2 = ret_8->chunks;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
Cond in fucntion objalloc_create basic block 3
 ================== possible direct basic block ================= 
from objalloc_create basic block 4
 ================== possible direct basic block ================= 
from objalloc_create basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (ret_8 == 0B)
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
Cond in fucntion objalloc_create basic block 2
 ================== possible direct basic block ================= 
from objalloc_create basic block 6
 ================== possible direct basic block ================= 
from objalloc_create basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
ret_8 = malloc (24);
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:61:35: warning: use location
   61 |         ret = (struct objalloc *) malloc (sizeof *ret); /* allocation site */
      |                                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d5b438
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4fbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7f05c4d47918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f05c4d5b318
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7f05c4d478b8>
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
ret_8->chunks = _1;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
ret_8->chunks = _1;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), 0B(4), ret_8(5)>
bb index := 6
# VUSE <.MEM_48>
return 0;
In function â€˜objalloc_createâ€™:
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================
_4 = PHI <0B(2), 0B(4), ret_8(5)>
In function â€˜bfd_hash_table_init_nâ€™:
lto1: warning: use location
this stmt have mutiple branch --------
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_2 = ret_8->chunks;
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
Cond in fucntion objalloc_create basic block 3
 ================== possible direct basic block ================= 
from objalloc_create basic block 4
 ================== possible direct basic block ================= 
from objalloc_create basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (ret_8 == 0B)
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
Cond in fucntion objalloc_create basic block 2
 ================== possible direct basic block ================= 
from objalloc_create basic block 6
 ================== possible direct basic block ================= 
from objalloc_create basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
bb index := 3
# VUSE <.MEM_52>
return;
In function â€˜objalloc_createâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_1 = malloc (4064);
In function â€˜bfd_hash_table_init_nâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:23: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d5b318
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7f05c4d478b8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f05c4d47438 type <integer_type 0x7f05c52247e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:objalloc_create========= [0m
[40;42m =======pre_check_funciton:bfd_hash_table_init_n========= [0m
[40;42m =======start_check_funciton:bfd_hash_table_init_n========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d525a0
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7f05c4d47720>
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();

 ================== trace ptable================== 
trace fucntion name:objalloc_create 
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :888========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---objalloc_create-----
this other function ------objalloc_create-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
table_14(D)->table = _4;
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 3
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 4
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 2
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 6
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
this stmt is child function---objalloc_create-----

 ================== trace ================== 
trace fucntion name:objalloc_create 
[40;44m =======trace_function_path objalloc_create  function_call count: 2 level :0========  [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
[40;36m ======= node_fun:objalloc_create========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d525a0
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _1 = objalloc_create ();
    version:1
    ptr-info 0x7f05c4d47720>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# VUSE <.MEM_26>
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22(D)>
_1 = objalloc_create ();
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:34: warning: Use after free error!: free location 
  137 |         table->memory = (void *) objalloc_create ();
      |                                  ^
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52630
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7f05c4d47750>
# VUSE <.MEM_24>
_3 = table_14(D)->memory;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
table_14(D)->table = _4;
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 3
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 4
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 2
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 6
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52630
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _3 = table_14(D)->memory;
    version:3
    ptr-info 0x7f05c4d47750>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52870
    type <pointer_type 0x7f05c4d40c78
        type <record_type 0x7f05c4d40bd0 bfd_hash_table BLK
            size <integer_cst 0x7f05c520ff18 constant 256>
            unit-size <integer_cst 0x7f05c522d018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40bd0 fields <field_decl 0x7f05c4d3b688 table> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40c78>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f05c4d50200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f05c4d477b0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_10 = (long unsigned int) size_9(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_10 = (long unsigned int) size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:135:15: warning: use location
  135 |         alloc = size;
      |               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
alloc_11 = alloc_10 * 8;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
alloc_11 = alloc_10 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:136:15: warning: use location
  136 |         alloc *= sizeof (struct bfd_hash_entry *);
      |               ^
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
_4 = objalloc_alloc (_3, alloc_11);
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_4 = objalloc_alloc (_3, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:7: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |       ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate stmt argument:table ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
table_14(D)->table = _4;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
table_14(D)->table = _4;
./benchmarks/binutils/leak_3/binutils_leak_3.c:143:16: warning: use location
  143 |   table->table = (struct bfd_hash_entry **)
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = table_3(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:28: warning: use location
  181 |         objalloc_free(table->memory);
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

 Expand conflict 
 The same function may have multiple branches :objalloc_free
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_5 = VDEF <.MEM_4(D)>
objalloc_free (_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:9: warning: use location
  181 |         objalloc_free(table->memory);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_1 = table_11(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:64: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
hashp_13 = objalloc_alloc (_1, 24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^
this stmt is child function---objalloc_alloc-----

 ================== trace ================== 
trace fucntion name:objalloc_alloc 
[40;44m =======trace_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:objalloc_alloc========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate stmt argument:table ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
*_7 = hashp_13;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
hashp_13->hash = hash_14(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = hash_14(D) % _3;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = hash_14(D) % _3;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = hash_14(D) % _3;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = hash_14(D) % _3;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_4 = hash_14(D) % _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_20 = _4 & 4294967295;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_20 = _4 & 4294967295;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_20 = _4 & 4294967295;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_20 = _4 & 4294967295;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_20 = _4 & 4294967295;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _20 * 8;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _20 * 8;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _20 * 8;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = _20 * 8;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_6 = _20 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _5 + _6;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _5 + _6;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _5 + _6;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = _5 + _6;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_7 = _5 + _6;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
table_14(D)->memory = _1;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
table_14(D)->memory = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:137:23: warning: use location
  137 |         table->memory = (void *) objalloc_create ();
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_2 = table_14(D)->memory;
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
_2 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:18: warning: use location
  138 |         if (table->memory == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
  138 |         if (table->memory == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:138:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 2
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 6
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
_3 = table_14(D)->memory;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_3 = table_14(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:144:48: warning: use location
  144 |       objalloc_alloc ((struct objalloc *) table->memory, alloc);
      |                                                ^
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: use location
  148 |                         objalloc_free(table);
      |                         ^
this stmt is child function---objalloc_free-----

 ================== trace ================== 
trace fucntion name:objalloc_free 
[40;44m =======trace_function_path objalloc_free  function_call count: 1 level :0========  [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
[40;31m  find free stmt free same pointer [0m
# .MEM_11 = VDEF <.MEM_8>
free (l_1);
./benchmarks/binutils/leak_3/binutils_leak_3.c:122:25: warning: use location
  122 |                         free(l);
      |                         ^
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_10 = VDEF <.MEM_8>
free (o_4(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:125:9: warning: use location
  125 |         free (o);
      |         ^
[40;36m ======= node_fun:objalloc_free========= [0m
[40;36m ======= find relate stmt with table ========= [0m
[40;36m ======= relate stmt argument:table ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_26>
_5 = table_14(D)->table;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_5 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:18: warning: use location
  146 |         if (table->table == NULL)
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_5 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
  146 |         if (table->table == NULL)
      |            ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:146:12: warning: use location
Cond in fucntion bfd_hash_table_init_n basic block 3
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 4
 ================== possible direct basic block ================= 
from bfd_hash_table_init_n basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52870
    type <pointer_type 0x7f05c4d40c78
        type <record_type 0x7f05c4d40bd0 bfd_hash_table BLK
            size <integer_cst 0x7f05c520ff18 constant 256>
            unit-size <integer_cst 0x7f05c522d018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40bd0 fields <field_decl 0x7f05c4d3b688 table> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40c78>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f05c4d50200 table>
    def_stmt GIMPLE_NOP
    version:14
    ptr-info 0x7f05c4d477b0>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_30 = VDEF <.MEM_29>
table_14(D)->count = 0;
./benchmarks/binutils/leak_3/binutils_leak_3.c:155:16: warning: use location
  155 |   table->count = 0;
      |                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_29 = VDEF <.MEM_28>
table_14(D)->entsize = entsize_20(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:154:18: warning: use location
  154 |   table->entsize = entsize;
      |                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_28 = VDEF <.MEM_27>
table_14(D)->size = size_9(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:153:15: warning: use location
  153 |   table->size = size;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_4(D)>
_1 = table_3(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:181:28: warning: use location
  181 |         objalloc_free(table->memory);
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_21(D)>
_1 = table_11(D)->memory;
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:64: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                                                ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_22 = VDEF <.MEM_21(D)>
hashp_13 = objalloc_alloc (_1, 24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:168:43: warning: use location
  168 |         hashp = (struct bfd_hash_entry *) objalloc_alloc (table->memory, sizeof (*hashp));
      |                                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_25 = VDEF <.MEM_24>
*_7 = hashp_13;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:30: warning: use location
  172 |         table->table[_index] = hashp;
      |                              ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_24 = VDEF <.MEM_23>
hashp_13->string = string_16(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:170:23: warning: use location
  170 |         hashp->string = string;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# .MEM_23 = VDEF <.MEM_22>
hashp_13->hash = hash_14(D);
./benchmarks/binutils/leak_3/binutils_leak_3.c:169:21: warning: use location
  169 |         hashp->hash = hash;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
_4 = hash_14(D) % _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:171:23: warning: use location
  171 |         _index = hash % table->size;
      |                       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
_20 = _4 & 4294967295;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
_6 = _20 * 8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
_7 = _5 + _6;
./benchmarks/binutils/leak_3/binutils_leak_3.c:172:21: warning: use location
  172 |         table->table[_index] = hashp;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_31 = VDEF <.MEM_26>
objalloc_free (table_14(D));
./benchmarks/binutils/leak_3/binutils_leak_3.c:148:25: warning: Use after free error!: free location 
  148 |                         objalloc_free(table);
      |                         ^
# VUSE <.MEM_26>
_6 = table_14(D)->table;
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:25: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |                         ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52708
    type <pointer_type 0x7f05c4d40e70
        type <pointer_type 0x7f05c4d40dc8 type <record_type 0x7f05c4d40d20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7f05c520fbb8 constant 64>
            unit-size <integer_cst 0x7f05c520fbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c4d40e70>>
        public unsigned DI size <integer_cst 0x7f05c520fbb8 64> unit-size <integer_cst 0x7f05c520fbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7f05c4d47798>
# VUSE <.MEM_26>
_6 = table_14(D)->table;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
  152 |   memset ((void *) table->table, 0, alloc);
      |   ^
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26>
memset (_6, 0, alloc_11);
memset (_6, 0, alloc_11);
./benchmarks/binutils/leak_3/binutils_leak_3.c:152:3: warning: use location
this stmt is child function---memset-----

 ================== trace ================== 
trace fucntion name:memset 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52708
    type <pointer_type 0x7f05c4d40e70
        type <pointer_type 0x7f05c4d40dc8 type <record_type 0x7f05c4d40d20 bfd_hash_entry>
            public unsigned DI
            size <integer_cst 0x7f05c520fbb8 constant 64>
            unit-size <integer_cst 0x7f05c520fbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c4d40e70>>
        public unsigned DI size <integer_cst 0x7f05c520fbb8 64> unit-size <integer_cst 0x7f05c520fbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _6 = table_14(D)->table;
    version:6
    ptr-info 0x7f05c4d47798>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_hash_table_init_n========= [0m
[40;44m =======node_fun:objalloc_free========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path objalloc_free  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre_check_funciton:objalloc_free========= [0m
[40;42m =======start_check_funciton:objalloc_free========= [0m
[40;33m =======POP node_fun stack:objalloc_free========= [0m
[40;44m =======node_fun:objalloc_alloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path objalloc_alloc  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre_check_funciton:objalloc_alloc========= [0m
[40;42m =======start_check_funciton:objalloc_alloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_10>
return;
In function â€˜objalloc_allocâ€™:
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_15 = chunk_8 + 512;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_15 = chunk_8 + 512;
./benchmarks/binutils/leak_3/binutils_leak_3.c:106:16: warning: use location
  106 |         return (PTR) (chunk + CHUNK_HEADER_SIZE);
      |                ^
_3 = PHI <0B(4), _15(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
o_9(D)->chunks = chunk_8;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->chunks = chunk_8;
./benchmarks/binutils/leak_3/binutils_leak_3.c:104:19: warning: use location
  104 |         o->chunks = (PTR) chunk;
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
o_9(D)->current_space = 4032;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:102:26: warning: use location
  102 |         o->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
o_9(D)->current_ptr = _2;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
o_9(D)->current_ptr = _2;
./benchmarks/binutils/leak_3/binutils_leak_3.c:101:24: warning: use location
  101 |         o->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_1 = o_9(D)->chunks;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
_1 = o_9(D)->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:50: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                                                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
chunk_8->next = _1;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->next = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:98:21: warning: use location
   98 |         chunk->next = (struct objalloc_chunk *) o->chunks;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19>
chunk_8->current_ptr = 0B;
bb index := 5
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
chunk_8->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:99:28: warning: use location
   99 |         chunk->current_ptr = NULL;
      |                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (chunk_8 == 0B)
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (chunk_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
   95 |         if (chunk == NULL)
      |            ^
if (chunk_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:95:12: warning: use location
Cond in fucntion objalloc_alloc basic block 4
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 6
 ================== possible direct basic block ================= 
from objalloc_alloc basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
  126 | }
      | ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_10>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:126:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
chunk_8 = malloc (4064);
bb index := 4
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_16>
return _3;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
chunk_8 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:94:43: warning: use location
   94 |         chunk = (struct objalloc_chunk *) malloc (CHUNK_SIZE); /* allocation site */
      |                                           ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d52f78
    type <pointer_type 0x7f05c4d407e0
        type <record_type 0x7f05c4d40738 objalloc_chunk TI
            size <integer_cst 0x7f05c520fc00 constant 128>
            unit-size <integer_cst 0x7f05c520fc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40738 fields <field_decl 0x7f05c4d3b390 next> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d407e0>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4f870 chunk>
    def_stmt chunk_8 = malloc (4064);
    version:8
    ptr-info 0x7f05c4d47870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f05c4d47540 type <integer_type 0x7f05c4d400a8 size_t> constant 4064>
[40;33m =======POP node_fun stack:objalloc_alloc========= [0m
[40;44m =======node_fun:objalloc_create========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path objalloc_create  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:objalloc_create========= [0m
[40;42m =======start_check_funciton:objalloc_create========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f05c4d5b438
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4fbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7f05c4d47918>
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), 0B(4), ret_8(5)>
bb index := 6
# VUSE <.MEM_48>
return 0;
In function â€˜objalloc_createâ€™:
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch --------
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
Cond in fucntion objalloc_create basic block 3
 ================== possible direct basic block ================= 
from objalloc_create basic block 4
 ================== possible direct basic block ================= 
from objalloc_create basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
Cond in fucntion objalloc_create basic block 2
 ================== possible direct basic block ================= 
from objalloc_create basic block 6
 ================== possible direct basic block ================= 
from objalloc_create basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
ret_8 = malloc (24);
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
ret_8 = malloc (24);
./benchmarks/binutils/leak_3/binutils_leak_3.c:61:35: warning: use location
   61 |         ret = (struct objalloc *) malloc (sizeof *ret); /* allocation site */
      |                                   ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d5b438
    type <pointer_type 0x7f05c4d40540
        type <record_type 0x7f05c4d40498 objalloc BLK
            size <integer_cst 0x7f05c522d078 constant 192>
            unit-size <integer_cst 0x7f05c522d048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f05c4d40498 fields <field_decl 0x7f05c4d3b260 current_ptr> context <translation_unit_decl 0x7f05c521a168 ./benchmarks/binutils/leak_3/binutils_leak_3.c>
            pointer_to_this <pointer_type 0x7f05c4d40540>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f05c4d4fbd0 ret>
    def_stmt ret_8 = malloc (24);
    version:8
    ptr-info 0x7f05c4d47918>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f05c4d5b318
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7f05c4d478b8>
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
ret_8->chunks = _1;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
ret_8->chunks = _1;
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:21: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = PHI <0B(2), 0B(4), ret_8(5)>
bb index := 6
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 6

======================================================================
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location
this stmt have mutiple branch --------
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_16>
_2 = ret_8->chunks;
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_2 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:16: warning: use location
   67 |         if (ret->chunks == NULL)
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0B)
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
if (_2 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
   67 |         if (ret->chunks == NULL)
      |            ^
if (_2 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:67:12: warning: use location
Cond in fucntion objalloc_create basic block 3
 ================== possible direct basic block ================= 
from objalloc_create basic block 4
 ================== possible direct basic block ================= 
from objalloc_create basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
   69 |                         free (ret);
      |                         ^
this stmt is child function---free-----

 ================== find ================== 
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_48>
return 0;
<built-in>: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_8 == 0B)
bb index := 2
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================
if (ret_8 == 0B)
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
   63 |         if (ret == NULL)
      |            ^
if (ret_8 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_3/binutils_leak_3.c:63:12: warning: use location
Cond in fucntion objalloc_create basic block 2
 ================== possible direct basic block ================= 
from objalloc_create basic block 6
 ================== possible direct basic block ================= 
from objalloc_create basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
bb index := 3
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
  200 |                 return;
      |                 ^
beacuse in succ := 3 have return or exit
# VUSE <.MEM_52>
return;
./benchmarks/binutils/leak_3/binutils_leak_3.c:200:17: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 3

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
bb index := 3
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_21>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
_1 = malloc (4064);
bb index := 3
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return _4;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================
_1 = malloc (4064);
./benchmarks/binutils/leak_3/binutils_leak_3.c:66:23: warning: use location
   66 |         ret->chunks = (PTR) malloc (CHUNK_SIZE); /* allocation site */
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f05c4d5b318
    type <pointer_type 0x7f05c522b000
        type <void_type 0x7f05c5224f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f05c522b000>>
        public unsigned DI
        size <integer_cst 0x7f05c520fbb8 constant 64>
        unit-size <integer_cst 0x7f05c520fbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f05c52309d8>>
   
    def_stmt _1 = malloc (4064);
    version:1
    ptr-info 0x7f05c4d478b8>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
_4 = PHI <0B(2), 0B(4), ret_8(5)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
# .MEM_21 = VDEF <.MEM_20>
ret_8->current_space = 4032;
./benchmarks/binutils/leak_3/binutils_leak_3.c:79:28: warning: use location
   79 |         ret->current_space = CHUNK_SIZE - CHUNK_HEADER_SIZE;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_20 = VDEF <.MEM_19>
ret_8->current_ptr = _3;
./benchmarks/binutils/leak_3/binutils_leak_3.c:78:26: warning: use location
   78 |         ret->current_ptr = (char *) chunk + CHUNK_HEADER_SIZE;
      |                          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# VUSE <.MEM_16>
chunk_11 = ret_8->chunks;
./benchmarks/binutils/leak_3/binutils_leak_3.c:73:15: warning: use location
   73 |         chunk = (struct objalloc_chunk *) ret->chunks;
      |               ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_19 = VDEF <.MEM_18>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:76:21: warning: use location
   76 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_18 = VDEF <.MEM_17>
chunk_11->current_ptr = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:75:28: warning: use location
   75 |         chunk->current_ptr = NULL;
      |                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_22 = VDEF <.MEM_16>
free (ret_8);
./benchmarks/binutils/leak_3/binutils_leak_3.c:69:25: warning: Use after free error!: free location 
   69 |                         free (ret);
      |                         ^
# .MEM_17 = VDEF <.MEM_16>
chunk_11->next = 0B;
./benchmarks/binutils/leak_3/binutils_leak_3.c:74:21: warning: use location
   74 |         chunk->next = NULL;
      |                     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f05c4d47438 type <integer_type 0x7f05c52247e0 long unsigned int> constant 24>
[40;33m =======POP node_fun stack:objalloc_create========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 147883528]:
hash[0] = "a";
hash[1] = "b";
hash[2] = "c";
hash[3] = "d";
hash[4] = "e";
hash[5] = "f";
hash[6] = "g";
hash[7] = "h";
hash[8] = "i";
hash[9] = "j";
_1 = time (&t);
_2 = (unsigned int) _1;
srand (_2);
_3 = bfd_hash_table_init_n (&table, 10, 10);
if (_3 == 0)
  goto <bb 3>; [34.00%]
else
  goto <bb 7>; [66.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 97603128]:
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 50280400]:
t ={v} {CLOBBER};
table ={v} {CLOBBER};
hash ={v} {CLOBBER};
return;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 976138697]:
_4 = (long unsigned int) cnt_6;
_5 = hash[cnt_6];
bfd_hash_insert (&table, _5, _4);
cnt_28 = cnt_6 + 1;

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# cnt_6 = PHI <0(7), cnt_28(4)>
if (cnt_6 <= 9)
  goto <bb 4>; [90.91%]
else
  goto <bb 6>; [9.09%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 97603128]:
bfd_dwarf2_cleanup_debug_info (&table);
memset (&table, 0, 32);
t ={v} {CLOBBER};
table ={v} {CLOBBER};
hash ={v} {CLOBBER};
return 0;

=======Mapping node_fun:bfd_dwarf2_cleanup_debug_info=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = table_3(D)->memory;
objalloc_free (_1);
return;

=======Mapping node_fun:bfd_hash_insert=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = table_11(D)->memory;
hashp_13 = objalloc_alloc (_1, 24);
hashp_13->hash = hash_14(D);
hashp_13->string = string_16(D);
_2 = table_11(D)->size;
_3 = (long unsigned int) _2;
_4 = hash_14(D) % _3;
_5 = table_11(D)->table;
_20 = _4 & 4294967295;
_6 = _20 * 8;
_7 = _5 + _6;
*_7 = hashp_13;
_8 = table_11(D)->count;
_9 = _8 + 1;
table_11(D)->count = _9;
return hashp_13;

=======Mapping node_fun:bfd_hash_table_init_n=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
alloc_10 = (long unsigned int) size_9(D);
alloc_11 = alloc_10 * 8;
_1 = objalloc_create ();
table_14(D)->memory = _1;
_2 = table_14(D)->memory;
if (_2 == 0B)
  goto <bb 6>; [30.95%]
else
  goto <bb 3>; [69.05%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 741418729]:
_3 = table_14(D)->memory;
_4 = objalloc_alloc (_3, alloc_11);
table_14(D)->table = _4;
_5 = table_14(D)->table;
if (_5 == 0B)
  goto <bb 4>; [18.09%]
else
  goto <bb 5>; [81.91%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 134122648]:
objalloc_free (table_14(D));
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 607296081]:
_6 = table_14(D)->table;
memset (_6, 0, alloc_11);
table_14(D)->size = size_9(D);
table_14(D)->entsize = entsize_20(D);
table_14(D)->count = 0;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _7 = PHI <0(2), 0(4), 1(5)>
return _7;

=======Mapping node_fun:objalloc_free=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
l_5 = o_4(D)->chunks;
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
next_7 = l_1->next;
free (l_1);

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# l_1 = PHI <l_5(2), next_7(3)>
if (l_1 != 0B)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
free (o_4(D));
return;

=======Mapping node_fun:objalloc_alloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
if (len_5(D) > 4064)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
chunk_8 = malloc (4064);
if (chunk_8 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 5>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1072883005]:
_1 = o_9(D)->chunks;
chunk_8->next = _1;
chunk_8->current_ptr = 0B;
_2 = chunk_8 + 32;
o_9(D)->current_ptr = _2;
o_9(D)->current_space = 4032;
o_9(D)->chunks = chunk_8;
_15 = chunk_8 + 512;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073312329]:
# _3 = PHI <0B(4), _15(5)>
return _3;

=======Mapping node_fun:objalloc_create=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ret_8 = malloc (24);
if (ret_8 == 0B)
  goto <bb 6>; [0.04%]
else
  goto <bb 3>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 1073312329]:
_1 = malloc (4064);
ret_8->chunks = _1;
_2 = ret_8->chunks;
if (_2 == 0B)
  goto <bb 4>; [4.25%]
else
  goto <bb 5>; [95.75%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 45615770]:
free (ret_8);
goto <bb 6>; [100.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1027696559]:
chunk_11 = ret_8->chunks;
chunk_11->next = 0B;
chunk_11->current_ptr = 0B;
chunk_11->next = 0B;
_3 = chunk_11 + 32;
ret_8->current_ptr = _3;
ret_8->current_space = 4032;

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# _4 = PHI <0B(2), 0B(4), ret_8(5)>
return _4;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 3 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    find Entry point : 10 [0m
[40;34m    used_stmt array stack totalsize of : 0.003048 mb[0m
[40;34m    collect time: : 0.000460 s [0m
[40;34m    algorithm time: 0.087564 s [0m
[40;34m    gimple stmt count : : 101 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +0.7%|     -0.0%|
cplxlower                        |      |    +1|      |      |     +0.7%|     -0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -2.2%|     -1.2%|
copyprop                         |      |      |      |      |     -2.2%|     -1.3%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.4%|     -0.3%|
phiopt                           |      |      |      |      |     -0.4%|     -0.3%|
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                             |      |      |      |      |          |     -0.1%|
dce                              |      |      |      |      |          |     -0.1%|
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -62.6%|    -79.6%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon                          |      |      |      |      |     +1.0%|     +1.2%|
copyprop                         |      |      |      |      |     +1.0%|     +1.2%|
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     -1.0%|     -1.1%|
lim                              |      |      |      |      |     -1.0%|     -1.2%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |   +167.3%|   +389.3%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +70.4%|    +45.9%|
into_cfglayout                   |      |      |      |      |     -1.1%|     -0.3%|
jump                             |      |      |      |      |     -1.6%|     -0.7%|
subreg1                          |      |      |      |      |     -0.5%|     -0.4%|
dfinit               ------------|      |      |      |      |          |          |
cse1                             |      |      |      |      |     -0.3%|     -0.4%|
fwprop1                          |      |      |      |      |     -2.2%|     -2.1%|
ce1                              |      |      |      |      |     -2.0%|     -1.4%|
reginfo                          |      |      |      |      |          |     +0.3%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant                  |      |      |      |      |          |     -0.3%|
loop2_done                       |      |      |      |      |          |     -0.3%|
dse1                 ------------|      |      |      |      |          |          |
fwprop2                          |      |      |      |      |     -0.6%|     -0.1%|
init-regs                        |      |      |      |      |     -0.6%|     -0.1%|
combine                          |      |      |      |      |     +4.1%|     +5.0%|
ce2                              |      |      |      |      |     +3.9%|     +4.8%|
outof_cfglayout                  |      |      |      |      |     +0.8%|     +0.1%|
split1                           |      |      |      |      |     +0.8%|     +0.1%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -8.4%|     -8.6%|
postreload                       |      |      |      |      |     -9.2%|     -9.4%|
split2                           |      |      |      |      |     +0.3%|     +0.5%|
cmpelim                          |      |      |      |      |     +0.3%|     +0.5%|
pro_and_epilogue                 |      |      |      |      |    +15.5%|    +16.9%|
dse2                             |      |      |      |      |    +13.4%|    +14.4%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     -0.2%|     -0.0%|
split4                           |      |      |      |      |     -0.2%|     -0.0%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
