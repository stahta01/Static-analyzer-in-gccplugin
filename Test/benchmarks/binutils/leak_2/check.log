In file included from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:0:
./benchmarks/binutils/leak_2/../include/common.h: In function ‘discard_my_cleanups’:
./benchmarks/binutils/leak_2/../include/common.h:94:21: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/leak_2/../include/common.h: In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_2/../include/common.h:108:13: warning: format ‘%x’ expects argument of type ‘unsigned int’, but argument 2 has type ‘void *’ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
In file included from ./benchmarks/binutils/leak_2/binutils_leak_2.c:7:0:
./benchmarks/binutils/leak_2/../include/bfd.h: At top level:
./benchmarks/binutils/leak_2/../include/bfd.h:55:1: warning: useless storage class specifier in empty declaration
 };
 ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:9:0: warning: "S_IREAD" redefined
 #    define S_IREAD 00400
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:175:0: note: this is the location of the previous definition
 # define S_IREAD S_IRUSR
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:10:0: warning: "S_IWRITE" redefined
 #    define S_IWRITE 00200
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:176:0: note: this is the location of the previous definition
 # define S_IWRITE S_IWUSR
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:11:0: warning: "S_IEXEC" redefined
 #    define S_IEXEC 00100
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:177:0: note: this is the location of the previous definition
 # define S_IEXEC S_IXUSR
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:13:0: warning: "S_IRUSR" redefined
 #    define S_IRUSR S_IREAD   /* read, owner */
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:168:0: note: this is the location of the previous definition
 #define S_IRUSR __S_IREAD /* Read by owner.  */
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:14:0: warning: "S_IWUSR" redefined
 #    define S_IWUSR S_IWRITE  /* write, owner */
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:169:0: note: this is the location of the previous definition
 #define S_IWUSR __S_IWRITE /* Write by owner.  */
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:15:0: warning: "S_IXUSR" redefined
 #    define S_IXUSR S_IEXEC   /* execute, owner */
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:170:0: note: this is the location of the previous definition
 #define S_IXUSR __S_IEXEC /* Execute by owner.  */
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:17:0: warning: "S_IRGRP" redefined
 #    define S_IRGRP (S_IREAD  >> 3)  /* read, group */
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:180:0: note: this is the location of the previous definition
 #define S_IRGRP (S_IRUSR >> 3) /* Read by group.  */
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:18:0: warning: "S_IWGRP" redefined
 #    define S_IWGRP (S_IWRITE >> 3)  /* write, group */
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:181:0: note: this is the location of the previous definition
 #define S_IWGRP (S_IWUSR >> 3) /* Write by group.  */
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:19:0: warning: "S_IXGRP" redefined
 #    define S_IXGRP (S_IEXEC  >> 3)  /* execute, group */
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:182:0: note: this is the location of the previous definition
 #define S_IXGRP (S_IXUSR >> 3) /* Execute by group.  */
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:21:0: warning: "S_IROTH" redefined
 #    define S_IROTH (S_IREAD  >> 6)  /* read, other */
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:186:0: note: this is the location of the previous definition
 #define S_IROTH (S_IRGRP >> 3) /* Read by others.  */
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:22:0: warning: "S_IWOTH" redefined
 #    define S_IWOTH (S_IWRITE >> 6)  /* write, other */
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:187:0: note: this is the location of the previous definition
 #define S_IWOTH (S_IWGRP >> 3) /* Write by others.  */
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:23:0: warning: "S_IXOTH" redefined
 #    define S_IXOTH (S_IEXEC  >> 6)  /* execute, other */
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:188:0: note: this is the location of the previous definition
 #define S_IXOTH (S_IXGRP >> 3) /* Execute by others.  */
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:25:0: warning: "S_IRWXU" redefined
 #  define S_IRWXU (S_IRUSR | S_IWUSR | S_IXUSR)
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:172:0: note: this is the location of the previous definition
 #define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:26:0: warning: "S_IRWXG" redefined
 #  define S_IRWXG (S_IRGRP | S_IWGRP | S_IXGRP)
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:184:0: note: this is the location of the previous definition
 #define S_IRWXG (S_IRWXU >> 3)
 
./benchmarks/binutils/leak_2/binutils_leak_2.c:27:0: warning: "S_IRWXO" redefined
 #  define S_IRWXO (S_IROTH | S_IWOTH | S_IXOTH)
 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3:0,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:190:0: note: this is the location of the previous definition
 #define S_IRWXO (S_IRWXG >> 3)
 
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: implicit declaration of function ‘strrchr’ [-Wimplicit-function-declaration]
   const char *slash = strrchr (path, '/');
                       ^~~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: incompatible implicit declaration of built-in function ‘strrchr’
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
       memcpy (tmpname, path, len);
       ^~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: incompatible implicit declaration of built-in function ‘memcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: incompatible implicit declaration of built-in function ‘memcpy’
   memcpy (tmpname + len, template, sizeof (template));
   ^~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘make_tempname’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: implicit declaration of function ‘close’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
   close (fd);
   ^~~~~
   pclose
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: implicit declaration of function ‘utime’; did you mean ‘futimens’? [-Wimplicit-function-declaration]
     result = utime (destination, tb);
              ^~~~~
              futimens
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: implicit declaration of function ‘chown’ [-Wimplicit-function-declaration]
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: implicit declaration of function ‘unlink’; did you mean ‘unix’? [-Wimplicit-function-declaration]
    unlink (from);
    ^~~~~~
    unix
In file included from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:0:
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
                                ^
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
 #define xmalloc(a) malloc(a)
                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: warning: incompatible implicit declaration of built-in function ‘strlen’
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
                                ^
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
 #define xmalloc(a) malloc(a)
                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
                                ^
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
 #define xmalloc(a) malloc(a)
                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: implicit declaration of function ‘strcpy’ [-Wimplicit-function-declaration]
   strcpy (old_name, bfd_get_filename (iarch));
   ^~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: incompatible implicit declaration of built-in function ‘strcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 5
succs:= 5
--------GIMPLE Cond -------
succs:= 8
succs:= 8
--------GIMPLE Cond -------
succs:= 10
succs:= 10
--------GIMPLE Cond -------
succs:= 12
succs:= 12
--------GIMPLE Cond -------
succs:= 14
--------GIMPLE Cond -------
succs:= 15
--------GIMPLE Cond -------
succs:= 14
succs:= 16
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 17
succs:= 18
--------GIMPLE Cond -------
succs:= 19
succs:= 17
succs:= 15
succs:= 16
succs:= 18
succs:= 19
--------GIMPLE Cond -------
succs:= 23
succs:= 23
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# VUSE <.MEM_1(D)>
_6 = strlen (_5);
# .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);
# .MEM_74 = VDEF <.MEM_72>
strcpy (old_name_8, _9);
# VUSE <.MEM_74>
slash_22 = strrchr (old_name_8, 47);
# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
# .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
# .MEM_109 = VDEF <.MEM_69>
_11 = __printf_chk (1, "could not create temporary file whilst writing archive%s", "");
# .MEM_85 = VDEF <.MEM_69>
_37 = __printf_chk (1, "%d\n", _36);
# .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
# .MEM_88 = VDEF <.MEM_86>
_40 = rand ();
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
# .MEM_91 = VDEF <.MEM_89>
_60 = rand ();
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 16 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
# .MEM_72 = VDEF <.MEM_1(D)>
old_name_8 = malloc (_7);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
slash_22 = strrchr (old_name_8, 47);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 >= 0)
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 >= 0)
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 >= 0)
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
if (_55 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
if (_55 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:11: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
old_name_8 = malloc (_7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b37257438
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254990 old_name>
    def_stmt old_name_8 = malloc (_7);
    version 8
    ptr-info 0x7f9b37251468>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_80 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_80 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_80 = tmpname_32;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_17 = _80;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_17 = _80;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
tmpname_17 = _80;
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_84 = _19;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
if (_16 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
slash_22 = strrchr (old_name_8, 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
bb index := 6
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 25

======================================================================
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
fd_18 = mkstemp (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
bb index := 7
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 25

======================================================================
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
if (fd_18 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   if (fd == -1)
      ^
if (fd_18 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_35 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_35 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_35 = tmpname_32;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   return tmpname;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
tmpname_28 = malloc (_27);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b372603a8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_28 = malloc (_27);
    version 28
    ptr-info 0x7f9b37251558>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
# .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_80 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_80 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_80 = tmpname_32;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_17 = _80;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_17 = _80;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
tmpname_17 = _80;
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_84 = _19;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
if (_16 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
slash_22 = strrchr (old_name_8, 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
bb index := 6
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 25

======================================================================
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
fd_18 = mkstemp (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
bb index := 7
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 25

======================================================================
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
if (fd_18 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   if (fd == -1)
      ^
if (fd_18 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_35 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_35 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_35 = tmpname_32;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   return tmpname;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_75 = VDEF <.MEM_74>
tmpname_31 = malloc (9);
bb index := 4
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 25

======================================================================
tmpname_31 = malloc (9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:58:15: warning: use location
       tmpname = (char *) xmalloc (sizeof (template)); /* allocation site */
               ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b37260480
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725f3f0 tmpname>
    def_stmt tmpname_31 = malloc (9);
    version 31
    ptr-info 0x7f9b37251588>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b37260900
    type <pointer_type 0x7f9b37234f18
        type <record_type 0x7f9b37234e70 bfd BLK
            size <integer_cst 0x7f9b377c3c30 constant 384>
            unit size <integer_cst 0x7f9b37237480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f9b37234d20 fields <field_decl 0x7f9b372367b8 filename> context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f9b37234f18> chain <type_decl 0x7f9b37236850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f9b3725f990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f9b372515e8>
# .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = nbfd_38;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = nbfd_38;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_87 = nbfd_38;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================
_87 = nbfd_38;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
obfd_12 = _87;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
obfd_12 = _87;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
obfd_12 = _87;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================
obfd_12 = _87;
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:8: warning: use location
   obfd = bfd_openw (new_name);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: use location
  free(abfd);
  ^
this stmt is child function---free-----

 ================== find ================== 
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_12 == 0B)
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_12 == 0B)
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_12 == 0B)
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================
if (obfd_12 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
   if (obfd == NULL)
      ^
if (obfd_12 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion main basic block 10
 ================== possible direct basic block ================= 
from main basic block 11
 ================== possible direct basic block ================= 
from main basic block 12
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_39 = nbfd_38;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_39 = nbfd_38;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_39 = nbfd_38;
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================
_39 = nbfd_38;
./benchmarks/binutils/leak_2/binutils_leak_2.c:190:9: warning: use location
  return nbfd;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_86 = VDEF <.MEM_85>
nbfd_38 = malloc (48);
bb index := 10
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 10 ,possiable got to succ := 25

======================================================================
nbfd_38 = malloc (48);
./benchmarks/binutils/leak_2/binutils_leak_2.c:189:7: warning: use location
  bfd *nbfd = malloc(sizeof(bfd));
       ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260900
    type <pointer_type 0x7f9b37234f18
        type <record_type 0x7f9b37234e70 bfd BLK
            size <integer_cst 0x7f9b377c3c30 constant 384>
            unit size <integer_cst 0x7f9b37237480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f9b37234d20 fields <field_decl 0x7f9b372367b8 filename> context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f9b37234f18> chain <type_decl 0x7f9b37236850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f9b3725f990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f9b372515e8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b37260900
    type <pointer_type 0x7f9b37234f18
        type <record_type 0x7f9b37234e70 bfd BLK
            size <integer_cst 0x7f9b377c3c30 constant 384>
            unit size <integer_cst 0x7f9b37237480 constant 48>
            align 64 symtab 0 alias set -1 canonical type 0x7f9b37234d20 fields <field_decl 0x7f9b372367b8 filename> context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f9b37234f18> chain <type_decl 0x7f9b37236850 D.3998>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f9b3725f990 nbfd>
    def_stmt nbfd_38 = malloc (48);
    version 38
    ptr-info 0x7f9b372515e8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: use location
  free(abfd);
  ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
_5 = _71;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = strlen (_5);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_7 = _6 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
old_name_8 = malloc (_7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
slash_22 = strrchr (old_name_8, 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 >= 0)
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 >= 0)
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 >= 0)
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
if (_55 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
if (_55 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:11: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b37257360
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _5 = _71;
    version 5
    ptr-info 0x7f9b37251450>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
_7 = _6 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
old_name_8 = malloc (_7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:12: warning: use location
   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 
slash_22 = strrchr (old_name_8, 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 >= 0)
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 >= 0)
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_55 >= 0)
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
if (_55 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^
if (_55 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:11: warning: use location
Cond in fucntion main basic block 19
 ================== possible direct basic block ================= 
from main basic block 20
 ================== possible direct basic block ================= 
from main basic block 23
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b372573f0
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _7 = _6 + 1;
    version 7>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: use location
  free(abfd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_55 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
if (_55 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:11: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m   need check branch because multiple direction varible[0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
_27 = len_26 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_76 = VDEF <.MEM_74>
tmpname_28 = malloc (_27);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
tmpname_28 = malloc (_27);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:15: warning: use location
       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
               ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_80 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_80 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_80 = tmpname_32;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_17 = _80;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
tmpname_17 = _80;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
tmpname_17 = _80;
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:9: warning: use location
   char *tmpname = template_in_dir (filename);
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_84 = _19;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
if (_16 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
slash_22 = strrchr (old_name_8, 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
bb index := 6
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 25

======================================================================
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
fd_18 = mkstemp (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
bb index := 7
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 25

======================================================================
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
if (fd_18 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   if (fd == -1)
      ^
if (fd_18 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_35 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_35 = tmpname_32;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_35 = tmpname_32;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   return tmpname;
          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b37260360
    type <integer_type 0x7f9b3771e7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 canonical type 0x7f9b3771e738 precision 64 min <integer_cst 0x7f9b3770aeb8 0> max <integer_cst 0x7f9b3770c500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f9b3772a9d8>>
   
    def_stmt _27 = len_26 + 11;
    version 27>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: use location
  free(abfd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9b37251228 type <integer_type 0x7f9b3771e7e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7f9b37260558
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _34 = tmpname_32 + len_33;
    version 34
    ptr-info 0x7f9b372515b8>
_34 = tmpname_32 + len_33;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260558
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _34 = tmpname_32 + len_33;
    version 34
    ptr-info 0x7f9b372515b8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260558
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _34 = tmpname_32 + len_33;
    version 34
    ptr-info 0x7f9b372515b8>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b37260558
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _34 = tmpname_32 + len_33;
    version 34
    ptr-info 0x7f9b372515b8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
tmpname_17 = _80;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_84 = _19;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
if (_16 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
slash_22 = strrchr (old_name_8, 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
bb index := 6
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 25

======================================================================
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
fd_18 = mkstemp (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
bb index := 7
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 25

======================================================================
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
if (fd_18 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   if (fd == -1)
      ^
if (fd_18 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b372579d8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b3725b7e0 tmpname>
    def_stmt tmpname_17 = _80;
    version 17
    ptr-info 0x7f9b372514e0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);

 ================== trace ptable================== 
trace fucntion name:mkstemp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---mkstemp-----
this other function ------mkstemp-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_19 = PHI <0B(6), tmpname_17(7)>
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_84 = _19;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
_84 = _19;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
new_name_10 = _84;
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
if (_16 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
slash_22 = strrchr (old_name_8, 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
bb index := 6
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 25

======================================================================
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_81 = VDEF <.MEM_79>
fd_18 = mkstemp (tmpname_17);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
fd_18 = mkstemp (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:6: warning: use location
   fd = mkstemp (tmpname);
      ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
bb index := 7
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 25

======================================================================
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18 == -1)
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
if (fd_18 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   if (fd == -1)
      ^
if (fd_18 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion main basic block 5
 ================== possible direct basic block ================= 
from main basic block 6
 ================== possible direct basic block ================= 
from main basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b37257a20
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
    var <var_decl 0x7f9b3725b870 fd>
    def_stmt fd_18 = mkstemp (tmpname_17);
    version 18>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: use location
  free(abfd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
_19 = PHI <0B(6), tmpname_17(7)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_84 = _19;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
new_name_10 = _84;
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:12: warning: use location
   new_name = make_tempname (old_name);  /* allocation site */
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_82 = VDEF <.MEM_81>
close (fd_18);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   close (fd);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9b3770af90 type <integer_type 0x7f9b3771e5e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9b3770af90 type <integer_type 0x7f9b3771e5e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f9b37251288 type <integer_type 0x7f9b3771e7e0 long unsigned int> constant 48>

dot graph START

======================================================================
 <ssa_name 0x7f9b37260c18
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
   
    def_stmt _40 = rand ();
    version 40>
# .MEM_88 = VDEF <.MEM_86>
_40 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _40 % 2;
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _40 % 2;
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_41 = _40 % 2;
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================
_41 = _40 % 2;
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = _41 == 1;
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = _41 == 1;
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_42 = _41 == 1;
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================
_42 = _41 == 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_43 = (bfd_boolean) _42;
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_43 = (bfd_boolean) _42;
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_43 = (bfd_boolean) _42;
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================
ret_43 = (bfd_boolean) _42;
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_86>
_40 = rand ();
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_86>
_40 = rand ();
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_88 = VDEF <.MEM_86>
_40 = rand ();
bb index := 12
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 12 ,possiable got to succ := 25

======================================================================
_40 = rand ();
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f9b37260c18
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
   
    def_stmt _40 = rand ();
    version 40>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b37260c18
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
   
    def_stmt _40 = rand ();
    version 40>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: use location
  free(abfd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_41 = _40 % 2;
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_42 = _41 == 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_43 = (bfd_boolean) _42;
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_88 = VDEF <.MEM_86>
_40 = rand ();
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b37269af8
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
   
    def_stmt _60 = rand ();
    version 60>
# .MEM_91 = VDEF <.MEM_89>
_60 = rand ();

 ================== trace ptable================== 
trace fucntion name:rand 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---rand-----
this other function ------rand-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_61 = _60 % 2;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_61 = _60 % 2;
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_91 = VDEF <.MEM_89>
_60 = rand ();
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_60 = rand ();
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
this stmt is child function---rand-----

 ================== trace ================== 
 <ssa_name 0x7f9b37269af8
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
   
    def_stmt _60 = rand ();
    version 60>
trace fucntion name:rand 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b37269af8
    type <integer_type 0x7f9b3771e5e8 int public SI
        size <integer_cst 0x7f9b3770ae28 constant 32>
        unit size <integer_cst 0x7f9b3770ae40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f9b3771e5e8 precision 32 min <integer_cst 0x7f9b3770ade0 -2147483648> max <integer_cst 0x7f9b3770adf8 2147483647>
        pointer_to_this <pointer_type 0x7f9b37725a80>>
   
    def_stmt _60 = rand ();
    version 60>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: use location
  free(abfd);
  ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_61 = _60 % 2;
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
_61 = _60 % 2;
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_91 = VDEF <.MEM_89>
_60 = rand ();
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_89 = VDEF <.MEM_88>
free (obfd_12);
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: Use after free error!: free location 
  free(abfd);
  ^
# .MEM_91 = VDEF <.MEM_89>
_60 = rand ();
./benchmarks/binutils/leak_2/binutils_leak_2.c:196:2: warning: use location
  __NONDET(ret, 1, 0);
  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
new_name_10 = _84;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
if (_16 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
slash_22 = strrchr (old_name_8, 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
new_name_10 = _84;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
bb index := 22
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 25

======================================================================

 Expand conflict 
 The same function may have multiple branches :unlink
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^
=======================Path Constaint===========================

=succs:= 15
if (_48 == 32896)
./benchmarks/binutils/leak_2/binutils_leak_2.c:132:7: warning: use location
       || (!S_ISLNK (s.st_mode)
       ^
	relate logic:= 0
=succs:= 14
if (_44 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:131:6: warning: use location
   if (! exists
      ^
	relate logic:= 0
=succs:= 12
if (_14 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
   if (!bfd_close (obfd))
      ^
	relate logic:= 0
=succs:= 10
if (obfd_12 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
   if (obfd == NULL)
      ^
	relate logic:= 0
=succs:= 8
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
	relate logic:= 1
=======================Path Constaint===========================

=======================Path Constaint===========================

=succs:= 16
if (_49 == 1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:135:4: warning: use location
    && s.st_nlink == 1)
    ^
	relate logic:= 0
=succs:= 15
if (_48 == 32896)
./benchmarks/binutils/leak_2/binutils_leak_2.c:132:7: warning: use location
       || (!S_ISLNK (s.st_mode)
       ^
	relate logic:= 0
=succs:= 14
if (_44 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:131:6: warning: use location
   if (! exists
      ^
	relate logic:= 0
=succs:= 12
if (_14 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
   if (!bfd_close (obfd))
      ^
	relate logic:= 0
=succs:= 10
if (obfd_12 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
   if (obfd == NULL)
      ^
	relate logic:= 0
=succs:= 8
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
	relate logic:= 1
=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^
this stmt is child function---unlink-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^
this stmt is child function---rename-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = ret_59;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_102 = ret_59;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_16 = _102;
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_16 != 0)
bb index := 23
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 25

======================================================================
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^
if (_16 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 25
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
slash_22 = strrchr (old_name_8, 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:15: warning: use location
   const char *slash = strrchr (path, '/');
               ^
this stmt is child function---strrchr-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = (long int) slash_22;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_23 = (long int) slash_22;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_25 = _23 - _24;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_25 = _23 - _24;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_26 = (size_t) _25;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_26 = (size_t) _25;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
       len = slash - path;
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_30 = tmpname_28 + len_26;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_30 = tmpname_28 + len_26;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
       tmpname[len++] = '/';
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77>
*_30 = 47;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
*_30 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
       tmpname[len++] = '/';
                      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_29 = len_26 + 1;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
len_29 = len_26 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
       tmpname[len++] = '/';
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
len_33 = PHI <len_29(3), 0(4)>
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_34 = tmpname_32 + len_33;
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
_34 = tmpname_32 + len_33;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_68>
memcpy (_34, "stXXXXXX", 9);
bb index := 5
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 5 ,possiable got to succ := 25

======================================================================
memcpy (_34, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   memcpy (tmpname + len, template, sizeof (template));
   ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_77 = VDEF <.MEM_76>
memcpy (tmpname_28, old_name_8, len_26);
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
memcpy (tmpname_28, old_name_8, len_26);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
       memcpy (tmpname, path, len);
       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_22 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   if (slash != (char *) NULL)
      ^
if (slash_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
bb index := 21
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 25

======================================================================
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
bb index := 20
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^
this stmt is child function---chown-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
bb index := 19
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 19 ,possiable got to succ := 25

======================================================================
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^
this stmt is child function---chmod-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^
this stmt is child function---lstat-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_45 = _44 == 0;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
exists_46 = (bfd_boolean) _45;
bb index := 14
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 14 ,possiable got to succ := 25

======================================================================
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_24 = (long int) old_name_8;
bb index := 3
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 25

======================================================================
_24 = (long int) old_name_8;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
       len = slash - path;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
bb index := 25
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 25

======================================================================
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
   free (old_name);
   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);
bb index := 13
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 13 ,possiable got to succ := 25

======================================================================
_15 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);
bb index := 11
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 11 ,possiable got to succ := 25

======================================================================
_13 = __printf_chk (1, "%s", old_name_8);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_8, _9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
   strcpy (old_name, bfd_get_filename (iarch));
   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_10 == 0B)
bb index := 8
# VUSE <.MEM_3>
return 0;
lto1: warning: use location
beacuse in succ := 25 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 25

======================================================================
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^
if (new_name_10 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion main basic block 8
 ================== possible direct basic block ================= 
from main basic block 9
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f9b372574c8
    type <pointer_type 0x7f9b37234930
        type <integer_type 0x7f9b37234888 char public string-flag QI
            size <integer_cst 0x7f9b3770acd8 constant 8>
            unit size <integer_cst 0x7f9b3770acf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f9b3771e3f0 precision 8 min <integer_cst 0x7f9b37237180 -128> max <integer_cst 0x7f9b37237168 127>
            pointer_to_this <pointer_type 0x7f9b37234930>>
        public unsigned DI
        size <integer_cst 0x7f9b3770abe8 constant 64>
        unit size <integer_cst 0x7f9b3770ac00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f9b37715168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f9b37254a20 new_name>
    def_stmt new_name_10 = _84;
    version 10
    ptr-info 0x7f9b37251498>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
       free (tmpname);
       ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_94 = VDEF <.MEM_93>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
       unlink (from);
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_97 = VDEF <.MEM_96>
unlink (new_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:4: warning: use location
    unlink (from);
    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_95 = VDEF <.MEM_93>
ret_50 = rename (new_name_10, old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:11: warning: use location
       ret = rename (from, to);
           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_102 = ret_59;
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_16 = _102;
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
if (_16 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
   if (smart_rename (new_name, old_name, 0) != 0)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_103 = VDEF <.MEM_101>
free (old_name_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: Use after free error!: free location 
   free (old_name);
   ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
len_33 = PHI <len_29(3), 0(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_96 = VDEF <.MEM_95>
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_100 = VDEF <.MEM_99>
chmod (old_name_8, _57);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:3: warning: use location
   chmod (to, s.st_mode & 07777);
   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_99 = VDEF <.MEM_98>
_55 = chown (old_name_8, _54, _53);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:12: warning: use location
        if (chown (to, s.st_uid, s.st_gid) >= 0)
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_98 = VDEF <.MEM_95>
chmod (old_name_8, _52);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:8: warning: use location
        chmod (to, s.st_mode & 0777);
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_93 = VDEF <.MEM_92>
_44 = lstat (old_name_8, &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
   exists = lstat (to, &s) == 0;
            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
_45 = _44 == 0;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:27: warning: use location
   exists = lstat (to, &s) == 0;
                           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
exists_46 = (bfd_boolean) _45;
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:10: warning: use location
   exists = lstat (to, &s) == 0;
          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
       free (tmpname);
       ^
# .MEM_105 = VDEF <.MEM_89>
_15 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_107 = VDEF <.MEM_86>
_13 = __printf_chk (1, "%s", old_name_8);

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_83 = VDEF <.MEM_81>
free (tmpname_17);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
if (new_name_10 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
   if (new_name == NULL)
      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
contents_head_4 = iarch.archive_next;
_21 = iarch.filename;
_71 = _21;
_5 = _71;
_6 = strlen (_5);
_7 = _6 + 1;
old_name_8 = malloc (_7);
_20 = iarch.filename;
_73 = _20;
_9 = _73;
strcpy (old_name_8, _9);
slash_22 = strrchr (old_name_8, 47);
if (slash_22 != 0B)
  goto <bb 3>; [66.53%]
else
  goto <bb 4>; [33.47%]

=======is loop:0=========

 bb index 3 
<bb 3> [66.53%]:
_23 = (long int) slash_22;
_24 = (long int) old_name_8;
_25 = _23 - _24;
len_26 = (size_t) _25;
_27 = len_26 + 11;
tmpname_28 = malloc (_27);
memcpy (tmpname_28, old_name_8, len_26);
len_29 = len_26 + 1;
_30 = tmpname_28 + len_26;
*_30 = 47;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [33.47%]:
tmpname_31 = malloc (9);

=======is loop:0=========

 bb index 5 
<bb 5> [100.00%]:
# tmpname_32 = PHI <tmpname_28(3), tmpname_31(4)>
# len_33 = PHI <len_29(3), 0(4)>
_34 = tmpname_32 + len_33;
memcpy (_34, "stXXXXXX", 9);
_35 = tmpname_32;
_80 = tmpname_32;
tmpname_17 = _80;
fd_18 = mkstemp (tmpname_17);
if (fd_18 == -1)
  goto <bb 6>; [4.85%]
else
  goto <bb 7>; [95.15%]

=======is loop:0=========

 bb index 6 
<bb 6> [4.85%]:
free (tmpname_17);
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [95.15%]:
close (fd_18);

=======is loop:0=========

 bb index 8 
<bb 8> [100.00%]:
# _19 = PHI <0B(6), tmpname_17(7)>
_84 = _19;
new_name_10 = _84;
if (new_name_10 == 0B)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [0.04%]:
_11 = __printf_chk (1, "could not create temporary file whilst writing archive%s", "");
exit (1);

=======is loop:0=========

 bb index 10 
<bb 10> [99.96%]:
_36 = MEM[(int *)new_name_10];
_37 = __printf_chk (1, "%d\n", _36);
nbfd_38 = malloc (48);
_39 = nbfd_38;
_87 = nbfd_38;
obfd_12 = _87;
if (obfd_12 == 0B)
  goto <bb 11>; [0.04%]
else
  goto <bb 12>; [99.96%]

=======is loop:0=========

 bb index 11 
<bb 11> [0.04%]:
_13 = __printf_chk (1, "%s", old_name_8);
exit (1);

=======is loop:0=========

 bb index 12 
<bb 12> [99.92%]:
_40 = rand ();
_41 = _40 % 2;
_42 = _41 == 1;
ret_43 = (bfd_boolean) _42;
free (obfd_12);
_14 = _90(D);
if (_14 == 0B)
  goto <bb 13>; [0.04%]
else
  goto <bb 14>; [99.96%]

=======is loop:0=========

 bb index 13 
<bb 13> [0.04%]:
_15 = __printf_chk (1, "%s", old_name_8);
exit (1);

=======is loop:0=========

 bb index 14 
<bb 14> [99.88%]:
_60 = rand ();
_61 = _60 % 2;
_62 = _61 == 1;
ret_63 = (bfd_boolean) _62;
free (&iarch);
_44 = lstat (old_name_8, &s);
_45 = _44 == 0;
exists_46 = (bfd_boolean) _45;
if (_44 != 0)
  goto <bb 17>; [33.00%]
else
  goto <bb 15>; [67.00%]

=======is loop:0=========

 bb index 15 
<bb 15> [66.92%]:
_47 = BIT_FIELD_REF <s, 32, 192>;
_48 = _47 & 61568;
if (_48 == 32896)
  goto <bb 16>; [34.00%]
else
  goto <bb 22>; [66.00%]

=======is loop:0=========

 bb index 16 
<bb 16> [22.75%]:
_49 = s.st_nlink;
if (_49 == 1)
  goto <bb 17>; [34.00%]
else
  goto <bb 22>; [66.00%]

=======is loop:0=========

 bb index 17 
<bb 17> [40.70%]:
ret_50 = rename (new_name_10, old_name_8);
if (ret_50 == 0)
  goto <bb 18>; [70.44%]
else
  goto <bb 21>; [29.56%]

=======is loop:0=========

 bb index 18 
<bb 18> [28.67%]:
if (_44 == 0)
  goto <bb 19>; [36.64%]
else
  goto <bb 23>; [63.36%]

=======is loop:0=========

 bb index 19 
<bb 19> [10.50%]:
_51 = s.st_mode;
_52 = _51 & 511;
chmod (old_name_8, _52);
_53 = s.st_gid;
_54 = s.st_uid;
_55 = chown (old_name_8, _54, _53);
if (_55 >= 0)
  goto <bb 20>; [46.68%]
else
  goto <bb 23>; [53.32%]

=======is loop:0=========

 bb index 20 
<bb 20> [4.90%]:
_56 = s.st_mode;
_57 = _56 & 4095;
chmod (old_name_8, _57);
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 21 
<bb 21> [12.03%]:
_58 = __printf_chk (1, "unable to rename \'%s\';", old_name_8);
unlink (new_name_10);
goto <bb 23>; [100.00%]

=======is loop:0=========

 bb index 22 
<bb 22> [59.18%]:
unlink (new_name_10);

=======is loop:0=========

 bb index 23 
<bb 23> [99.88%]:
# ret_59 = PHI <ret_50(18), ret_50(19), ret_50(20), ret_50(21), 0(22)>
s ={v} {CLOBBER};
_102 = ret_59;
_16 = _102;
if (_16 != 0)
  goto <bb 24>; [0.04%]
else
  goto <bb 25>; [99.96%]

=======is loop:0=========

 bb index 24 
<bb 24> [0.04%]:
exit (1);

=======is loop:0=========

 bb index 25 
<bb 25> [99.84%]:
free (old_name_8);
iarch ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 13 [0m
[40;34m    used_stmt array stack totalsize of : 9800 [0m
[40;34m    collect time: : 0.000446 s [0m
[40;34m    algorithm time: 0.096684 s [0m
[40;34m    gimple stmt count : : 94 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
In function ‘bfd_close’,
    inlined from ‘write_archive’ at ./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3,
    inlined from ‘main’ at ./benchmarks/binutils/leak_2/binutils_leak_2.c:244:9:
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:2: warning: attempt to free a non-heap object ‘iarch’ [-Wfree-nonheap-object]
  free(abfd);
  ^
