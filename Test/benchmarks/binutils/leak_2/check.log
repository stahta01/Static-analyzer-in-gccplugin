../Compiler/newplugin.so 11.2.0 
In file included from ./benchmarks/binutils/leak_2/binutils_leak_2.c:7:
./benchmarks/binutils/leak_2/../include/bfd.h:55:1: warning: useless storage class specifier in empty declaration
   55 | };
      | ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:9: warning: "S_IREAD" redefined
    9 | #    define S_IREAD     00400
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:175: note: this is the location of the previous definition
  175 | # define S_IREAD        S_IRUSR
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:10: warning: "S_IWRITE" redefined
   10 | #    define S_IWRITE    00200
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:176: note: this is the location of the previous definition
  176 | # define S_IWRITE       S_IWUSR
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:11: warning: "S_IEXEC" redefined
   11 | #    define S_IEXEC     00100
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:177: note: this is the location of the previous definition
  177 | # define S_IEXEC        S_IXUSR
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:13: warning: "S_IRUSR" redefined
   13 | #    define S_IRUSR     S_IREAD                 /* read, owner */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:168: note: this is the location of the previous definition
  168 | #define S_IRUSR __S_IREAD       /* Read by owner.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:14: warning: "S_IWUSR" redefined
   14 | #    define S_IWUSR     S_IWRITE                /* write, owner */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:169: note: this is the location of the previous definition
  169 | #define S_IWUSR __S_IWRITE      /* Write by owner.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:15: warning: "S_IXUSR" redefined
   15 | #    define S_IXUSR     S_IEXEC                 /* execute, owner */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:170: note: this is the location of the previous definition
  170 | #define S_IXUSR __S_IEXEC       /* Execute by owner.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:17: warning: "S_IRGRP" redefined
   17 | #    define S_IRGRP     (S_IREAD  >> 3)         /* read, group */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:180: note: this is the location of the previous definition
  180 | #define S_IRGRP (S_IRUSR >> 3)  /* Read by group.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:18: warning: "S_IWGRP" redefined
   18 | #    define S_IWGRP     (S_IWRITE >> 3)         /* write, group */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:181: note: this is the location of the previous definition
  181 | #define S_IWGRP (S_IWUSR >> 3)  /* Write by group.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:19: warning: "S_IXGRP" redefined
   19 | #    define S_IXGRP     (S_IEXEC  >> 3)         /* execute, group */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:182: note: this is the location of the previous definition
  182 | #define S_IXGRP (S_IXUSR >> 3)  /* Execute by group.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:21: warning: "S_IROTH" redefined
   21 | #    define S_IROTH     (S_IREAD  >> 6)         /* read, other */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:186: note: this is the location of the previous definition
  186 | #define S_IROTH (S_IRGRP >> 3)  /* Read by others.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:22: warning: "S_IWOTH" redefined
   22 | #    define S_IWOTH     (S_IWRITE >> 6)         /* write, other */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:187: note: this is the location of the previous definition
  187 | #define S_IWOTH (S_IWGRP >> 3)  /* Write by others.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:23: warning: "S_IXOTH" redefined
   23 | #    define S_IXOTH     (S_IEXEC  >> 6)         /* execute, other */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:188: note: this is the location of the previous definition
  188 | #define S_IXOTH (S_IXGRP >> 3)  /* Execute by others.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:25: warning: "S_IRWXU" redefined
   25 | #  define S_IRWXU       (S_IRUSR | S_IWUSR | S_IXUSR)
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:172: note: this is the location of the previous definition
  172 | #define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:26: warning: "S_IRWXG" redefined
   26 | #  define S_IRWXG       (S_IRGRP | S_IWGRP | S_IXGRP)
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:184: note: this is the location of the previous definition
  184 | #define S_IRWXG (S_IRWXU >> 3)
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:27: warning: "S_IRWXO" redefined
   27 | #  define S_IRWXO       (S_IROTH | S_IWOTH | S_IXOTH)
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:190: note: this is the location of the previous definition
  190 | #define S_IRWXO (S_IRWXG >> 3)
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: implicit declaration of function ‘strrchr’ [-Wimplicit-function-declaration]
   45 |   const char *slash = strrchr (path, '/');
      |                       ^~~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:8:1: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
    7 | #include "../include/bfd.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: incompatible implicit declaration of built-in function ‘strrchr’ [-Wbuiltin-declaration-mismatch]
   45 |   const char *slash = strrchr (path, '/');
      |                       ^~~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   53 |       memcpy (tmpname, path, len);
      |       ^~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘make_tempname’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: implicit declaration of function ‘close’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
   81 |   close (fd);
      |   ^~~~~
      |   pclose
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: implicit declaration of function ‘utime’; did you mean ‘futimens’? [-Wimplicit-function-declaration]
  103 |     result = utime (destination, tb);
      |              ^~~~~
      |              futimens
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: implicit declaration of function ‘chown’ [-Wimplicit-function-declaration]
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: implicit declaration of function ‘unlink’ [-Wimplicit-function-declaration]
  164 |           unlink (from);
      |           ^~~~~~
In file included from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                                ^~~~~~
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
   21 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                                ^~~~~~
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
   21 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                                ^~~~~~
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
   21 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                                ^~~~~~
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
   21 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: implicit declaration of function ‘strcpy’ [-Wimplicit-function-declaration]
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: incompatible implicit declaration of built-in function ‘strcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)  1298k ( 45%)
 phase parsing                      :   0.03 ( 75%)   0.02 ( 67%)   0.05 ( 71%)  1258k ( 44%)
 phase opt and generate             :   0.01 ( 25%)   0.01 ( 33%)   0.01 ( 14%)   288k ( 10%)
 dump files                         :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)     0  (  0%)
 callgraph ipa passes               :   0.01 ( 25%)   0.01 ( 33%)   0.01 ( 14%)   166k (  6%)
 ipa lto decl out                   :   0.01 ( 25%)   0.00 (  0%)   0.00 (  0%)   264  (  0%)
 preprocessing                      :   0.02 ( 50%)   0.01 ( 33%)   0.03 ( 43%)   399k ( 14%)
 parser (global)                    :   0.00 (  0%)   0.01 ( 33%)   0.01 ( 14%)   615k ( 22%)
 parser function body               :   0.01 ( 25%)   0.00 (  0%)   0.01 ( 14%)   108k (  4%)
 inline parameters                  :   0.00 (  0%)   0.01 ( 33%)   0.00 (  0%)    26k (  1%)
 TOTAL                              :   0.04          0.03          0.07         2855k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 96%)
 TOTAL                              :   0.00          0.00          0.01         2251k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
=======node_fun:write_archive=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 node:= 6 
 	next_branch :=7
	next_branch :=8
node:= 7 
 node:= 8 
 	next_branch :=9
	next_branch :=10
node:= 9 
 =======node_fun:bfd_get_filename=========
=======node_fun:bfd_close=========
=======node_fun:bfd_openw=========
=======node_fun:smart_rename=========
node:= 2 
 	next_branch :=5
	next_branch :=3
node:= 3 
 	next_branch :=4
	next_branch :=10
node:= 4 
 	next_branch :=5
	next_branch :=10
node:= 5 
 	next_branch :=6
	next_branch :=9
node:= 6 
 	next_branch :=7
	next_branch :=13
node:= 7 
 	next_branch :=8
	next_branch :=13
node:= 8 
 	next_branch :=13
node:= 9 
 	next_branch :=13
node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 	next_branch :=12
node:= 12 
 	next_branch :=13
=======node_fun:set_times=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=4
=======node_fun:make_tempname=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=5
node:= 4 
 	next_branch :=5
=======node_fun:template_in_dir=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 	next_branch :=5
node:= 4 
 	next_branch :=5
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 21 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
write_archive (&iarch);
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
# .MEM_5 = VDEF <.MEM_4(D)>
rand ();
# .MEM_9 = VDEF <.MEM_8>
nbfd_6 = malloc (48);
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
# .MEM_32 = VDEF <.MEM_31>
unlink (from_20(D));
# .MEM_28 = VDEF <.MEM_27>
set_times (to_16(D), &s);
# .MEM_29 = VDEF <.MEM_24>
unlink (from_20(D));
# .MEM_13 = VDEF <.MEM_12(D)>
tb[0] = _1;
# .MEM_14 = VDEF <.MEM_13>
tb[1] = _2;
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);
# .MEM_24 = VDEF <.MEM_18>
memcpy (_4, "stXXXXXX", 9);
===============The second stage : Program slicing=================
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
=============== *this point analyzable =================
_1 = bfd_get_filename (iarch_8(D));
========================================================
=============== *this point analyzable =================
_2 = strlen (_1);
========================================================
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
=============== *this point analyzable =================
old_name_10 = malloc (_3);
========================================================
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
=============== *this point analyzable =================
_4 = bfd_get_filename (iarch_8(D));
========================================================
=============== *this point analyzable =================
new_name_13 = make_tempname (old_name_10);
========================================================
=============== *this point analyzable =================
obfd_16 = bfd_openw (new_name_13);
========================================================
=============== *this point analyzable =================
_5 = bfd_close (obfd_16);
========================================================
=============== *this point analyzable =================
_6 = smart_rename (new_name_13, old_name_10, 0);
========================================================
=============== *this point analyzable =================
nbfd_6 = malloc (48);
========================================================
=============== *this point analyzable =================
_1 = lstat (to_16(D), &s);
========================================================
=============== *this point analyzable =================
ret_23 = rename (from_20(D), to_16(D));
========================================================
=============== *this point analyzable =================
_9 = chown (to_16(D), _8, _7);
========================================================
=============== *this point analyzable =================
result_10 = utime (destination_8(D), &tb);
========================================================
=============== *this point analyzable =================
tmpname_6 = template_in_dir (filename_4(D));
========================================================
=============== *this point analyzable =================
fd_8 = mkstemp (tmpname_6);
========================================================
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>
=============== *this point analyzable =================
slash_10 = strrchr (path_9(D), 47);
========================================================
=============== *this point analyzable =================
tmpname_15 = malloc (_2);
========================================================
=============== *this point analyzable =================
tmpname_12 = malloc (9);
========================================================
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
=============== *this point analyzable =================
_1 = bfd_get_filename (iarch_8(D));
========================================================
=============== *this point analyzable =================
old_name_10 = malloc (_3);
========================================================
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
=============== *this point analyzable =================
_1 = lstat (to_16(D), &s);
========================================================
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
=============== *this point analyzable =================
ret_23 = rename (from_20(D), to_16(D));
========================================================
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
=============== *this point analyzable =================
chmod (to_16(D), _6);
========================================================
=============== *this point analyzable =================
_9 = chown (to_16(D), _8, _7);
========================================================
=============== *this point analyzable =================
_9 = chown (to_16(D), _8, _7);
========================================================
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
=============== *this point analyzable =================
chmod (to_16(D), _11);
========================================================
=============== *this point analyzable =================
result_10 = utime (destination_8(D), &tb);
========================================================
=============== *this point analyzable =================
tmpname_6 = template_in_dir (filename_4(D));
========================================================
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>
=============== *this point analyzable =================
slash_10 = strrchr (path_9(D), 47);
========================================================
=============== *this point analyzable =================
tmpname_15 = malloc (_2);
========================================================
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>
=============== *this point analyzable =================
memcpy (tmpname_15, path_9(D), len_13);
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:write_archive========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path write_archive  function_call count: 11 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:smart_rename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path smart_rename  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:utime 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>
is Other function utime
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt call this function :utime
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^
tb[0] = _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:101:11: warning: use location
  101 |     tb[0] = statbuf->st_atime;
      |           ^
tb[1] = _2;
./benchmarks/binutils/leak_2/binutils_leak_2.c:102:11: warning: use location
  102 |     tb[1] = statbuf->st_mtime;
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>
is Other function 
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt call this function :utime
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre_check_funciton:smart_rename========= [0m
[40;42m =======start_check_funciton:smart_rename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:lstat 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>
is Other function lstat
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_4 = s.st_nlink;
./benchmarks/binutils/leak_2/binutils_leak_2.c:135:15: warning: use location
  135 |           && s.st_nlink == 1)
      |               ^
if (_4 == 1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:135:11: warning: use location
  135 |           && s.st_nlink == 1)
      |           ^
_5 = s.st_mode;
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:27: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |                           ^
_6 = _5 & 511;
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
_10 = s.st_mode;
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:29: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                             ^
_11 = _10 & 4095;
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>

 ================== pre trace ptable ================== 
trace fucntion name:rename 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>
is Other function rename
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
if (ret_23 == 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
  139 |       if (ret == 0)
      |          ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:chown 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>
is Other function chown
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
is Other function 
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with to ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
is Other function 
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
if (ret_23 == 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
  139 |       if (ret == 0)
      |          ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with from ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :chmod
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :chmod
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:smart_rename========= [0m
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_close  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:bfd_close========= [0m
[40;42m =======start_check_funciton:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_openw========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_openw  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:bfd_openw========= [0m
[40;42m =======start_check_funciton:bfd_openw========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc1b0
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf05d8bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7fcbf05d2900>
 <ssa_name 0x7fcbf05dc1b0
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf05d8bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7fcbf05d2900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return nbfd_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:190:16: warning: use location
  190 |         return nbfd;
      |                ^
# .MEM_9 = VDEF <.MEM_8>
nbfd_6 = malloc (48);
nbfd_6 = malloc (48);
./benchmarks/binutils/leak_2/binutils_leak_2.c:189:21: warning: use location
  189 |         bfd *nbfd = malloc(sizeof(bfd));
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc1b0
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf05d8bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7fcbf05d2900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_openw========= [0m
[40;42m =======pre add _ fucntion:make_tempname========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_tempname  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>

 ================== pre trace ptable ================== 
trace fucntion name:strrchr 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>
is Other function strrchr
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt call this function :strrchr
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch ---strrchr-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:58:26: warning: use location
   58 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt call this function :strrchr
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch ---strrchr-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt call this function :malloc
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
# .MEM_24 = VDEF <.MEM_18>
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = len_13 + 11;
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
[40;42m =======pre_check_funciton:make_tempname========= [0m
[40;42m =======start_check_funciton:make_tempname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>

 ================== pre trace ptable ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
is Other function template_in_dir
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));
tmpname_6 = template_in_dir (filename_4(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt call this function :template_in_dir
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---template_in_dir-----
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt call this function :mkstemp
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt call this function :close
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location
   78 |       free (tmpname);
      |       ^

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>

 ================== pre trace ptable ================== 
trace fucntion name:mkstemp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
is Other function mkstemp
 
 Start check Pointer Collect  

======================================================================
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch ---mkstemp-----
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt call this function :mkstemp
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt call this function :close
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location
   78 |       free (tmpname);
      |       ^

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt call this function :template_in_dir
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate node_fun argument:filename========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---template_in_dir-----
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt call this function :mkstemp
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt call this function :close
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location
   78 |       free (tmpname);
      |       ^

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_tempname========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:bfd_get_filename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_get_filename  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:bfd_get_filename========= [0m
[40;42m =======start_check_funciton:bfd_get_filename========= [0m
[40;33m =======POP node_fun stack:bfd_get_filename========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:write_archive========= [0m
[40;42m =======start_check_funciton:write_archive========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :888========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
is Other function bfd_get_filename
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :bfd_get_filename
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :bfd_get_filename
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
this stmt call this function :malloc
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :888========  [0m
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
is Other function bfd_get_filename
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
this stmt call this function :bfd_get_filename
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :bfd_get_filename
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>

 ================== pre trace ptable ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :889========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
is Other function make_tempname
 
 Start check Pointer Collect  

======================================================================
free (old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: use location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^
this stmt call this function :make_tempname
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_9>
return nbfd_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:190:16: warning: use location
  190 |         return nbfd;
      |                ^
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
is Other function bfd_openw
 
 Start check Pointer Collect  

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :888========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>
is Other function bfd_close
 
 Start check Pointer Collect  

======================================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>

 ================== pre trace ptable ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :888========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :889========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
is Other function smart_rename
 
 Start check Pointer Collect  

======================================================================
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :bfd_get_filename
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :bfd_get_filename
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:2 
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: free in this location
  233 |   bfd_close (iarch);
      |   ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: free in this location
  233 |   bfd_close (iarch);
      |   ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: free in this location
  233 |   bfd_close (iarch);
      |   ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :malloc
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:write_archive========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:write_archive========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path write_archive  function_call count: 11 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:smart_rename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path smart_rename  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:utime 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>
is Other function utime
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt call this function :utime
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^
tb[0] = _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:101:11: warning: use location
  101 |     tb[0] = statbuf->st_atime;
      |           ^
tb[1] = _2;
./benchmarks/binutils/leak_2/binutils_leak_2.c:102:11: warning: use location
  102 |     tb[1] = statbuf->st_mtime;
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>
is Other function 
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt call this function :utime
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre_check_funciton:smart_rename========= [0m
[40;42m =======start_check_funciton:smart_rename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:lstat 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>
is Other function lstat
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_4 = s.st_nlink;
./benchmarks/binutils/leak_2/binutils_leak_2.c:135:15: warning: use location
  135 |           && s.st_nlink == 1)
      |               ^
if (_4 == 1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:135:11: warning: use location
  135 |           && s.st_nlink == 1)
      |           ^
_5 = s.st_mode;
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:27: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |                           ^
_6 = _5 & 511;
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
_10 = s.st_mode;
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:29: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                             ^
_11 = _10 & 4095;
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>

 ================== pre trace ptable ================== 
trace fucntion name:rename 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>
is Other function rename
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
if (ret_23 == 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
  139 |       if (ret == 0)
      |          ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:chown 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>
is Other function chown
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
is Other function 
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with to ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
is Other function 
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
if (ret_23 == 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
  139 |       if (ret == 0)
      |          ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with from ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :chmod
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :chmod
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:smart_rename========= [0m
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_close  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:bfd_close========= [0m
[40;42m =======start_check_funciton:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_openw========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_openw  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:bfd_openw========= [0m
[40;42m =======start_check_funciton:bfd_openw========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc1b0
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf05d8bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7fcbf05d2900>
 <ssa_name 0x7fcbf05dc1b0
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf05d8bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7fcbf05d2900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return nbfd_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:190:16: warning: use location
  190 |         return nbfd;
      |                ^
# .MEM_9 = VDEF <.MEM_8>
nbfd_6 = malloc (48);
nbfd_6 = malloc (48);
./benchmarks/binutils/leak_2/binutils_leak_2.c:189:21: warning: use location
  189 |         bfd *nbfd = malloc(sizeof(bfd));
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc1b0
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf05d8bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7fcbf05d2900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_openw========= [0m
[40;42m =======pre add _ fucntion:make_tempname========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_tempname  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>

 ================== pre trace ptable ================== 
trace fucntion name:strrchr 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>
is Other function strrchr
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt call this function :strrchr
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch ---strrchr-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:58:26: warning: use location
   58 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt call this function :strrchr
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch ---strrchr-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt call this function :malloc
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
# .MEM_24 = VDEF <.MEM_18>
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = len_13 + 11;
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
[40;42m =======pre_check_funciton:make_tempname========= [0m
[40;42m =======start_check_funciton:make_tempname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>

 ================== pre trace ptable ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
is Other function template_in_dir
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));
tmpname_6 = template_in_dir (filename_4(D));
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt call this function :template_in_dir
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
In function ‘write_archive’:
lto1: warning: use location
this stmt have mutiple branch ---template_in_dir-----
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt call this function :mkstemp
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt call this function :close
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location
   78 |       free (tmpname);
      |       ^

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>

 ================== pre trace ptable ================== 
trace fucntion name:mkstemp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
is Other function mkstemp
 
 Start check Pointer Collect  

======================================================================
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch ---mkstemp-----
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt call this function :mkstemp
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt call this function :close
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location
   78 |       free (tmpname);
      |       ^

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt call this function :template_in_dir
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate node_fun argument:filename========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
In function ‘write_archive’:
lto1: warning: use location
this stmt have mutiple branch ---template_in_dir-----
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt call this function :mkstemp
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt call this function :close
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location
   78 |       free (tmpname);
      |       ^

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_tempname========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:bfd_get_filename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_get_filename  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:bfd_get_filename========= [0m
[40;42m =======start_check_funciton:bfd_get_filename========= [0m
[40;33m =======POP node_fun stack:bfd_get_filename========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:write_archive========= [0m
[40;42m =======start_check_funciton:write_archive========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :888========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
is Other function bfd_get_filename
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :bfd_get_filename
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :bfd_get_filename
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:1 
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:1 
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab6c0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7fcbf05d27f8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
this stmt call this function :malloc
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab708
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = strlen (_1);
    version:2>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab8b8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134bea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7fcbf05d2858>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :888========  [0m
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
is Other function bfd_get_filename
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
this stmt call this function :bfd_get_filename
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :bfd_get_filename
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab798
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = bfd_get_filename (iarch_8(D));
    version:4
    ptr-info 0x7fcbf05d2810>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>

 ================== pre trace ptable ================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :889========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
is Other function make_tempname
 
 Start check Pointer Collect  

======================================================================
free (old_name_10);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: use location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^
this stmt call this function :make_tempname
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :0========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :1========  [0m
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:new_name========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab900
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf134be10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7fcbf05d2870>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:215:14: warning: free in this location
  215 |   new_name = make_tempname (old_name);  /* allocation site */
      |              ^

===== possiable asias =====
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_9>
return nbfd_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:190:16: warning: use location
  190 |         return nbfd;
      |                ^
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
is Other function bfd_openw
 
 Start check Pointer Collect  

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab948
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf134bf30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7fcbf05d2888>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>

 ================== pre trace ptable ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :888========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>
is Other function bfd_close
 
 Start check Pointer Collect  

======================================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab7e0
    type <pointer_type 0x7fcbf05bb7e0
        type <integer_type 0x7fcbf05bb738 bfd_boolean SI
            size <integer_cst 0x7fcbf0aa3df8 constant 32>
            unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05bb7e0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = bfd_close (obfd_16);
    version:5
    ptr-info 0x7fcbf05d2828>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>

 ================== pre trace ptable ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :888========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :889========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
is Other function smart_rename
 
 Start check Pointer Collect  

======================================================================
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab828
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _6 = smart_rename (new_name_13, old_name_10, 0);
    version:6>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :bfd_get_filename
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :bfd_get_filename
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:2 
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab870
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fcbf05ca080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2840>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: free in this location
  233 |   bfd_close (iarch);
      |   ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: free in this location
  233 |   bfd_close (iarch);
      |   ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: free in this location
  233 |   bfd_close (iarch);
      |   ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt call this function :malloc
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt call this function :smart_rename
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt call this function :bfd_openw
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt call this function :bfd_close
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt call this function :strcpy
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf0aab750
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: free in this location
  227 |   if (!bfd_close (obfd))
      |        ^

===== possiable asias =====
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:write_archive========= [0m
[40;44m =======node_fun:bfd_get_filename========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:bfd_get_filename========= [0m
[40;42m =======start_check_funciton:bfd_get_filename========= [0m
[40;33m =======POP node_fun stack:bfd_get_filename========= [0m
[40;44m =======node_fun:bfd_close========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_close  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:bfd_close========= [0m
[40;42m =======start_check_funciton:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;44m =======node_fun:bfd_openw========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:bfd_openw========= [0m
[40;42m =======start_check_funciton:bfd_openw========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc1b0
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf05d8bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7fcbf05d2900>
 <ssa_name 0x7fcbf05dc1b0
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf05d8bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7fcbf05d2900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return nbfd_6;
In function ‘bfd_openw’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:190:16: warning: use location
  190 |         return nbfd;
      |                ^
# .MEM_9 = VDEF <.MEM_8>
nbfd_6 = malloc (48);
nbfd_6 = malloc (48);
./benchmarks/binutils/leak_2/binutils_leak_2.c:189:21: warning: use location
  189 |         bfd *nbfd = malloc(sizeof(bfd));
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc1b0
    type <pointer_type 0x7fcbf05c7f18
        type <record_type 0x7fcbf05c7e70 bfd BLK
            size <integer_cst 0x7fcbf05b2828 constant 384>
            unit-size <integer_cst 0x7fcbf05b27e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf05c7dc8 fields <field_decl 0x7fcbf05bee40 filename> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7fcbf05c7f18>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fcbf05d8bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7fcbf05d2900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:bfd_openw========= [0m
[40;44m =======node_fun:smart_rename========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:utime 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>
is Other function utime
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt call this function :utime
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^
tb[0] = _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:101:11: warning: use location
  101 |     tb[0] = statbuf->st_atime;
      |           ^
tb[1] = _2;
./benchmarks/binutils/leak_2/binutils_leak_2.c:102:11: warning: use location
  102 |     tb[1] = statbuf->st_mtime;
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>
is Other function 
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt call this function :utime
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre_check_funciton:smart_rename========= [0m
[40;42m =======start_check_funciton:smart_rename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>

 ================== pre trace ptable ================== 
trace fucntion name:lstat 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>
is Other function lstat
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
_4 = s.st_nlink;
./benchmarks/binutils/leak_2/binutils_leak_2.c:135:15: warning: use location
  135 |           && s.st_nlink == 1)
      |               ^
if (_4 == 1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:135:11: warning: use location
  135 |           && s.st_nlink == 1)
      |           ^
_5 = s.st_mode;
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:27: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |                           ^
_6 = _5 & 511;
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
_10 = s.st_mode;
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:29: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                             ^
_11 = _10 & 4095;
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc318
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _1 = lstat (to_16(D), &s);
    version:1>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>

 ================== pre trace ptable ================== 
trace fucntion name:rename 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>
is Other function rename
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
if (ret_23 == 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
  139 |       if (ret == 0)
      |          ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with ret ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc750
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05d8e10 ret>
    def_stmt ret_23 = rename (from_20(D), to_16(D));
    version:23>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>

 ================== pre trace ptable ================== 
trace fucntion name:chown 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>
is Other function chown
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc558
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
   
    def_stmt _9 = chown (to_16(D), _8, _7);
    version:9>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
is Other function 
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with to ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc678
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7fcbf05d2918>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
is Other function 
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
if (ret_23 == 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
  139 |       if (ret == 0)
      |          ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with from ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc708
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7fcbf05d2930>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================

 Expand conflict 
 The same function may have multiple branches :chmod
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc480
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _6 = _5 & 511;
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc510
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _8 = s.st_uid;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc4c8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _7 = s.st_gid;
    version:7>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt call this function :chmod
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt call this function :set_times
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt call this function :chown
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^

======================================================================

 Expand conflict 
 The same function may have multiple branches :chmod
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt call this function :rename
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch ---rename-----
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt call this function :unlink
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt call this function :lstat
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dc5e8
    type <integer_type 0x7fcbf0ab8690 unsigned int public unsigned SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8690 precision:32 min <integer_cst 0x7fcbf0aa3e28 0> max <integer_cst 0x7fcbf0aa3de0 4294967295>
        pointer_to_this <pointer_type 0x7fcbf0ac4690>>
   
    def_stmt _11 = _10 & 4095;
    version:11>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:smart_rename========= [0m
[40;44m =======node_fun:set_times========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>

 ================== pre trace ptable ================== 
trace fucntion name:utime 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>
is Other function utime
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt call this function :utime
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^
tb[0] = _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:101:11: warning: use location
  101 |     tb[0] = statbuf->st_atime;
      |           ^
tb[1] = _2;
./benchmarks/binutils/leak_2/binutils_leak_2.c:102:11: warning: use location
  102 |     tb[1] = statbuf->st_mtime;
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcc60
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1480 result>
    def_stmt result_10 = utime (destination_8(D), &tb);
    version:10>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>
is Other function 
 
 Start check Pointer Collect  

======================================================================
printf ("%s: cannot set time:", destination_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt call this function :printf
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt call this function :utime
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 
if (result_10 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcc18
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7fcbf05d2960>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;44m =======node_fun:make_tempname========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_tempname  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>

 ================== pre trace ptable ================== 
trace fucntion name:strrchr 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>
is Other function strrchr
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
slash_10 = strrchr (path_9(D), 47);
In function ‘make_tempname’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt call this function :strrchr
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch ---strrchr-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:58:26: warning: use location
   58 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt call this function :strrchr
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch ---strrchr-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt call this function :malloc
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
# .MEM_24 = VDEF <.MEM_18>
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = len_13 + 11;
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
[40;42m =======pre_check_funciton:make_tempname========= [0m
[40;42m =======start_check_funciton:make_tempname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>

 ================== pre trace ptable ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
is Other function template_in_dir
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));
tmpname_6 = template_in_dir (filename_4(D));
In function ‘make_tempname’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt call this function :template_in_dir
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:tmpname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |                   ^
_4 = tmpname_5 + len_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:19: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
In function ‘make_tempname’:
lto1: warning: use location
this stmt have mutiple branch ---template_in_dir-----
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt call this function :mkstemp
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt call this function :close
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcf30
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e17e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7fcbf05d29a8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location
   78 |       free (tmpname);
      |       ^

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>

 ================== pre trace ptable ================== 
trace fucntion name:mkstemp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
is Other function mkstemp
 
 Start check Pointer Collect  

======================================================================
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch ---mkstemp-----
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt call this function :mkstemp
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt call this function :close
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcf78
    type <integer_type 0x7fcbf0ab85e8 int public SI
        size <integer_cst 0x7fcbf0aa3df8 constant 32>
        unit-size <integer_cst 0x7fcbf0aa3e10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab85e8 precision:32 min <integer_cst 0x7fcbf0aa3db0 -2147483648> max <integer_cst 0x7fcbf0aa3dc8 2147483647>
        pointer_to_this <pointer_type 0x7fcbf0abf9d8>>
    var <var_decl 0x7fcbf05e1750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location
   78 |       free (tmpname);
      |       ^

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt call this function :template_in_dir
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate node_fun argument:filename========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
*_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
In function ‘make_tempname’:
lto1: warning: use location
this stmt have mutiple branch ---template_in_dir-----
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt call this function :mkstemp
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt call this function :close
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05dcee8
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7fcbf05ca580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7fcbf05d2990>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location
   78 |       free (tmpname);
      |       ^

===== possiable asias =====
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: free in this location

===== possiable asias =====
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_tempname========= [0m
[40;44m =======node_fun:template_in_dir========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>

 ================== pre trace ptable ================== 
trace fucntion name:strrchr 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>
is Other function strrchr
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
slash_10 = strrchr (path_9(D), 47);
In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt call this function :strrchr
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch ---strrchr-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e53a8
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <var_decl 0x7fcbf05e1c60 slash>
    def_stmt slash_10 = strrchr (path_9(D), 47);
    version:10
    ptr-info 0x7fcbf05d2a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5480
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7fcbf05d2a50>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:58:26: warning: use location
   58 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e53f0
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1bd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7fcbf05d2a38>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt call this function :strrchr
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch ---strrchr-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5360
    type <pointer_type 0x7fcbf05bbb28
        type <integer_type 0x7fcbf05bba80 char readonly QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbb28>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7fcbf05c8a80>>
    var <parm_decl 0x7fcbf05ca600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fcbf05d2a08>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt call this function :malloc
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e51f8
    type <integer_type 0x7fcbf0ab87e0 long unsigned int public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615>
        pointer_to_this <pointer_type 0x7fcbf0ac47e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>
is Other function 
 
 Start check Pointer Collect  

======================================================================
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================

 Expand conflict 
 The same function may have multiple branches :memcpy
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
# .MEM_24 = VDEF <.MEM_18>
memcpy (_4, "stXXXXXX", 9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: use location
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = len_13 + 11;
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fcbf05e5438
    type <integer_type 0x7fcbf05c32a0 size_t public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab8738 precision:64 min <integer_cst 0x7fcbf0aa3e88 0> max <integer_cst 0x7fcbf0aa4500 18446744073709551615> context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7fcbf05e1b40 len>
    def_stmt len_13 = (size_t) _1;
    version:13>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7fcbf05e5288
    type <pointer_type 0x7fcbf05bbbd0
        type <integer_type 0x7fcbf05bb9d8 char public QI
            size <integer_cst 0x7fcbf0aa3ca8 constant 8>
            unit-size <integer_cst 0x7fcbf0aa3cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fcbf0ab83f0 precision:8 min <integer_cst 0x7fcbf05b2708 -128> max <integer_cst 0x7fcbf05b26f0 127>
            pointer_to_this <pointer_type 0x7fcbf05bbbd0>>
        public unsigned DI
        size <integer_cst 0x7fcbf0aa3bb8 constant 64>
        unit-size <integer_cst 0x7fcbf0aa3bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fcbf0aae168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7fcbf05d29d8>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
write_archive (&iarch);
iarch ={v} {CLOBBER};
return 0;

=======Mapping node_fun:write_archive=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = bfd_get_filename (iarch_8(D));
_2 = strlen (_1);
_3 = _2 + 1;
old_name_10 = malloc (_3);
_4 = bfd_get_filename (iarch_8(D));
strcpy (old_name_10, _4);
new_name_13 = make_tempname (old_name_10);
if (new_name_13 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("could not create temporary file whilst writing archive%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
obfd_16 = bfd_openw (new_name_13);
if (obfd_16 == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 429324]:
printf ("%s", old_name_10);
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1072883005]:
_5 = bfd_close (obfd_16);
if (_5 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 429152]:
printf ("%s", old_name_10);
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1072453853]:
bfd_close (iarch_8(D));
_6 = smart_rename (new_name_13, old_name_10, 0);
if (_6 != 0)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 428981]:
exit (1);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1072024872]:
free (old_name_10);
return;

=======Mapping node_fun:bfd_get_filename=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_3 = iarch_2(D)->filename;
return _3;

=======Mapping node_fun:bfd_close=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
rand ();
free (abfd_3(D));
return;

=======Mapping node_fun:bfd_openw=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = MEM[(int *)name_3(D)];
printf ("%d\n", _1);
nbfd_6 = malloc (48);
return nbfd_6;

=======Mapping node_fun:smart_rename=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = lstat (to_16(D), &s);
if (_1 != 0)
  goto <bb 5>; [33.00%]
else
  goto <bb 3>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 719407024]:
_2 = BIT_FIELD_REF <s, 32, 192>;
_3 = _2 & 61568;
if (_3 == 32896)
  goto <bb 4>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 244598390]:
_4 = s.st_nlink;
if (_4 == 1)
  goto <bb 5>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 437498253]:
ret_23 = rename (from_20(D), to_16(D));
if (ret_23 == 0)
  goto <bb 6>; [67.00%]
else
  goto <bb 9>; [33.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 293123831]:
if (_1 == 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 13>; [67.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 96730864]:
_5 = s.st_mode;
_6 = _5 & 511;
chmod (to_16(D), _6);
_7 = s.st_gid;
_8 = s.st_uid;
_9 = chown (to_16(D), _8, _7);
if (_9 >= 0)
  goto <bb 8>; [41.48%]
else
  goto <bb 13>; [58.52%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 40123963]:
_10 = s.st_mode;
_11 = _10 & 4095;
chmod (to_16(D), _11);
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 144374423]:
printf ("unable to rename \'%s\';", to_16(D));
unlink (from_20(D));
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 636243571]:
if (preserve_dates_18(D) != 0)
  goto <bb 11>; [33.00%]
else
  goto <bb 12>; [67.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 209960377]:
set_times (to_16(D), &s);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 636243571]:
unlink (from_20(D));

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 1073741824]:
# ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
s ={v} {CLOBBER};
return ret_12;

=======Mapping node_fun:set_times=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = statbuf_5(D)->st_atim.tv_sec;
tb[0] = _1;
_2 = statbuf_5(D)->st_mtim.tv_sec;
tb[1] = _2;
result_10 = utime (destination_8(D), &tb);
tb ={v} {CLOBBER};
if (result_10 != 0)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
printf ("%s: cannot set time:", destination_8(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return;

=======Mapping node_fun:make_tempname=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
tmpname_6 = template_in_dir (filename_4(D));
fd_8 = mkstemp (tmpname_6);
if (fd_8 == -1)
  goto <bb 3>; [9.78%]
else
  goto <bb 4>; [90.22%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 105011952]:
free (tmpname_6);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 968729873]:
close (fd_8);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _1 = PHI <0B(3), tmpname_6(4)>
return _1;

=======Mapping node_fun:template_in_dir=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
slash_10 = strrchr (path_9(D), 47);
if (slash_10 != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 751619281]:
_1 = slash_10 - path_9(D);
len_13 = (size_t) _1;
_2 = len_13 + 11;
tmpname_15 = malloc (_2);
memcpy (tmpname_15, path_9(D), len_13);
len_17 = len_13 + 1;
_3 = tmpname_15 + len_13;
*_3 = 47;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 322122544]:
tmpname_12 = malloc (9);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
# len_6 = PHI <len_17(3), 0(4)>
_4 = tmpname_5 + len_6;
memcpy (_4, "stXXXXXX", 9);
return tmpname_5;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    all ptable point : 35 [0m
[40;34m    analyzable ptable point : 31 [0m
[40;34m    used_stmt array stack totalsize of : 0.004824 mb[0m
[40;34m    collect time: : 0.007725 s [0m
[40;34m    algorithm time: 0.222508 s [0m
[40;34m    gimple stmt count : : 92 [0m
[40;34m    this report analysis in Sat Feb 19 03:23:43 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 77%)
 phase opt and generate             :   0.10 (100%)   0.16 (100%)   0.26 (100%)   590k ( 21%)
 callgraph functions expansion      :   0.03 ( 30%)   0.01 (  6%)   0.03 ( 12%)   478k ( 17%)
 ipa points-to                      :   0.00 (  0%)   0.01 (  6%)   0.00 (  0%)  7432  (  0%)
 alias analysis                     :   0.01 ( 10%)   0.01 (  6%)   0.00 (  0%)    10k (  0%)
 rebuild jump labels                :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)     0  (  0%)
 plugin execution                   :   0.07 ( 70%)   0.14 ( 87%)   0.24 ( 92%)  1576  (  0%)
 initialize rtl                     :   0.01 ( 10%)   0.00 (  0%)   0.01 (  4%)    12k (  0%)
 rest of compilation                :   0.01 ( 10%)   0.00 (  0%)   0.00 (  0%)    22k (  1%)
 TOTAL                              :   0.10          0.16          0.26         2814k
