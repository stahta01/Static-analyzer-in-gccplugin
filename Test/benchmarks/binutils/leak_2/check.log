In file included from ./benchmarks/binutils/leak_2/binutils_leak_2.c:7:
./benchmarks/binutils/leak_2/../include/bfd.h:55:1: warning: useless storage class specifier in empty declaration
   55 | };
      | ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:9: warning: "S_IREAD" redefined
    9 | #    define S_IREAD     00400
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:175: note: this is the location of the previous definition
  175 | # define S_IREAD        S_IRUSR
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:10: warning: "S_IWRITE" redefined
   10 | #    define S_IWRITE    00200
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:176: note: this is the location of the previous definition
  176 | # define S_IWRITE       S_IWUSR
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:11: warning: "S_IEXEC" redefined
   11 | #    define S_IEXEC     00100
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:177: note: this is the location of the previous definition
  177 | # define S_IEXEC        S_IXUSR
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:13: warning: "S_IRUSR" redefined
   13 | #    define S_IRUSR     S_IREAD                 /* read, owner */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:168: note: this is the location of the previous definition
  168 | #define S_IRUSR __S_IREAD       /* Read by owner.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:14: warning: "S_IWUSR" redefined
   14 | #    define S_IWUSR     S_IWRITE                /* write, owner */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:169: note: this is the location of the previous definition
  169 | #define S_IWUSR __S_IWRITE      /* Write by owner.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:15: warning: "S_IXUSR" redefined
   15 | #    define S_IXUSR     S_IEXEC                 /* execute, owner */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:170: note: this is the location of the previous definition
  170 | #define S_IXUSR __S_IEXEC       /* Execute by owner.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:17: warning: "S_IRGRP" redefined
   17 | #    define S_IRGRP     (S_IREAD  >> 3)         /* read, group */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:180: note: this is the location of the previous definition
  180 | #define S_IRGRP (S_IRUSR >> 3)  /* Read by group.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:18: warning: "S_IWGRP" redefined
   18 | #    define S_IWGRP     (S_IWRITE >> 3)         /* write, group */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:181: note: this is the location of the previous definition
  181 | #define S_IWGRP (S_IWUSR >> 3)  /* Write by group.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:19: warning: "S_IXGRP" redefined
   19 | #    define S_IXGRP     (S_IEXEC  >> 3)         /* execute, group */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:182: note: this is the location of the previous definition
  182 | #define S_IXGRP (S_IXUSR >> 3)  /* Execute by group.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:21: warning: "S_IROTH" redefined
   21 | #    define S_IROTH     (S_IREAD  >> 6)         /* read, other */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:186: note: this is the location of the previous definition
  186 | #define S_IROTH (S_IRGRP >> 3)  /* Read by others.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:22: warning: "S_IWOTH" redefined
   22 | #    define S_IWOTH     (S_IWRITE >> 6)         /* write, other */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:187: note: this is the location of the previous definition
  187 | #define S_IWOTH (S_IWGRP >> 3)  /* Write by others.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:23: warning: "S_IXOTH" redefined
   23 | #    define S_IXOTH     (S_IEXEC  >> 6)         /* execute, other */
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:188: note: this is the location of the previous definition
  188 | #define S_IXOTH (S_IXGRP >> 3)  /* Execute by others.  */
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:25: warning: "S_IRWXU" redefined
   25 | #  define S_IRWXU       (S_IRUSR | S_IWUSR | S_IXUSR)
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:172: note: this is the location of the previous definition
  172 | #define S_IRWXU (__S_IREAD|__S_IWRITE|__S_IEXEC)
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:26: warning: "S_IRWXG" redefined
   26 | #  define S_IRWXG       (S_IRGRP | S_IWGRP | S_IXGRP)
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:184: note: this is the location of the previous definition
  184 | #define S_IRWXG (S_IRWXU >> 3)
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:27: warning: "S_IRWXO" redefined
   27 | #  define S_IRWXO       (S_IROTH | S_IWOTH | S_IXOTH)
      | 
In file included from ./benchmarks/binutils/leak_2/../include/common.h:3,
                 from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
/usr/include/x86_64-linux-gnu/sys/stat.h:190: note: this is the location of the previous definition
  190 | #define S_IRWXO (S_IRWXG >> 3)
      | 
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘template_in_dir’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: implicit declaration of function ‘strrchr’ [-Wimplicit-function-declaration]
   45 |   const char *slash = strrchr (path, '/');
      |                       ^~~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:8:1: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
    7 | #include "../include/bfd.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: incompatible implicit declaration of built-in function ‘strrchr’ [-Wbuiltin-declaration-mismatch]
   45 |   const char *slash = strrchr (path, '/');
      |                       ^~~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: note: include ‘<string.h>’ or provide a declaration of ‘strrchr’
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   53 |       memcpy (tmpname, path, len);
      |       ^~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   62 |   memcpy (tmpname + len, template, sizeof (template));
      |   ^~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:62:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘make_tempname’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: implicit declaration of function ‘close’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
   81 |   close (fd);
      |   ^~~~~
      |   pclose
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: implicit declaration of function ‘utime’; did you mean ‘futimens’? [-Wimplicit-function-declaration]
  103 |     result = utime (destination, tb);
      |              ^~~~~
      |              futimens
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: implicit declaration of function ‘chown’ [-Wimplicit-function-declaration]
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: implicit declaration of function ‘unlink’ [-Wimplicit-function-declaration]
  164 |           unlink (from);
      |           ^~~~~~
In file included from ./benchmarks/binutils/leak_2/binutils_leak_2.c:5:
./benchmarks/binutils/leak_2/binutils_leak_2.c: In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                                ^~~~~~
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
   21 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                                ^~~~~~
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
   21 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                                ^~~~~~
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
   21 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                                ^~~~~~
./benchmarks/binutils/leak_2/../include/common.h:21:27: note: in definition of macro ‘xmalloc’
   21 | #define xmalloc(a) malloc(a)
      |                           ^
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: implicit declaration of function ‘strcpy’ [-Wimplicit-function-declaration]
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^~~~~~
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: incompatible implicit declaration of built-in function ‘strcpy’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: note: include ‘<string.h>’ or provide a declaration of ‘strcpy’
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -1.8%|          |
nothrow                          |      |      |      |      |     -1.9%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -0.9%|          |
forwprop                         |      |      |      |      |     -0.9%|          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.9%|          |
phiopt                           |      |      |      |      |     -0.9%|          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========
=======node_fun:write_archive=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:bfd_get_filename=========
=======node_fun:bfd_close=========
=======node_fun:bfd_openw=========
=======node_fun:smart_rename=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:set_times=========
--------GIMPLE Cond -------
=======node_fun:make_tempname=========
--------GIMPLE Cond -------
=======node_fun:template_in_dir=========
--------GIMPLE Cond -------
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
write_archive (&iarch);
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);
# .MEM_33 = VDEF <.MEM_20>
printf ("could not create temporary file whilst writing archive%s", "");
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
# .MEM_5 = VDEF <.MEM_4(D)>
rand ();
# .MEM_8 = VDEF <.MEM_7(D)>
printf ("%d\n", _1);
# .MEM_9 = VDEF <.MEM_8>
nbfd_6 = malloc (48);
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
# .MEM_31 = VDEF <.MEM_30>
printf ("unable to rename \'%s\';", to_16(D));
# .MEM_32 = VDEF <.MEM_31>
unlink (from_20(D));
# .MEM_28 = VDEF <.MEM_27>
set_times (to_16(D), &s);
# .MEM_29 = VDEF <.MEM_24>
unlink (from_20(D));
# .MEM_13 = VDEF <.MEM_12(D)>
tb[0] = _1;
# .MEM_14 = VDEF <.MEM_13>
tb[1] = _2;
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
# VUSE <.MEM_19(D)>
slash_10 = strrchr (path_9(D), 47);
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);
# .MEM_22 = VDEF <.MEM_21>
memcpy (tmpname_15, path_9(D), len_13);
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);
# .MEM_24 = VDEF <.MEM_18>
memcpy (_4, "stXXXXXX", 9);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:write_archive========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path write_archive  function_call count: 11 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:smart_rename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path smart_rename  function_call count: 7 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207c18
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
result_10 = utime (destination_8(D), &tb);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (result_10 != 0)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207c18
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f715520d220
    type <pointer_type 0x7f71551f2498
        type <array_type 0x7f71551f23f0 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71551dd888 constant 168>
            unit-size <integer_cst 0x7f71551dd870 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f2348>
            pointer_to_this <pointer_type 0x7f71551f2498>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f715520b480 type <array_type 0x7f71551f23f0>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre_check_funciton:smart_rename========= [0m
[40;42m =======start_check_funciton:smart_rename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207678
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f71551fd918>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with to ========= [0m
[40;36m ======= relate stmt argument:to ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _11);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_9 = chown (to_16(D), _8, _7);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
if (_9 >= 0)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
if (_9 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
Cond in fucntion smart_rename basic block 7
 ================== possible direct basic block ================= 
from smart_rename basic block 8
 ================== possible direct basic block ================= 
from smart_rename basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _6);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
ret_23 = rename (from_20(D), to_16(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = lstat (to_16(D), &s);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = lstat (to_16(D), &s);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207678
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f71551fd918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155207708
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f71551fd930>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
ret_23 = rename (from_20(D), to_16(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_23 == 0)
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
if (ret_23 == 0)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
  139 |       if (ret == 0)
      |          ^
if (ret_23 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
Cond in fucntion smart_rename basic block 5
 ================== possible direct basic block ================= 
from smart_rename basic block 6
 ================== possible direct basic block ================= 
from smart_rename basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with from ========= [0m
[40;36m ======= relate stmt argument:from ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _11);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_9 = chown (to_16(D), _8, _7);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _6);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = lstat (to_16(D), &s);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207708
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f71551fd930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f715520d0e0
    type <pointer_type 0x7f71551f29d8
        type <array_type 0x7f71551f2930 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71551dd8d0 constant 184>
            unit-size <integer_cst 0x7f71551dd8b8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f2888>
            pointer_to_this <pointer_type 0x7f71551f29d8>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f715520b210 type <array_type 0x7f71551f2930>
        readonly constant static "unable to rename '%s';\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:163:4 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:163:4 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:163:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:smart_rename========= [0m
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_close  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:bfd_close========= [0m
[40;42m =======start_check_funciton:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_openw========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_openw  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:bfd_openw========= [0m
[40;42m =======start_check_funciton:bfd_openw========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f71552071b0
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155203bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7f71551fd900>
# .MEM_9 = VDEF <.MEM_8>
nbfd_6 = malloc (48);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return nbfd_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:190:16: warning: use location
  190 |         return nbfd;
      |                ^
nbfd_6 = malloc (48);
./benchmarks/binutils/leak_2/binutils_leak_2.c:189:21: warning: use location
  189 |         bfd *nbfd = malloc(sizeof(bfd));
      |                     ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552071b0
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155203bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7f71551fd900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f71558b9fa0
    type <pointer_type 0x7f71551f3150
        type <array_type 0x7f71551f30a8 type <integer_type 0x7f71551e69d8 char>
            SI
            size <integer_cst 0x7f71556bddf8 constant 32>
            unit-size <integer_cst 0x7f71556bde10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f3000>
            pointer_to_this <pointer_type 0x7f71551f3150>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f71558b9f80 type <array_type 0x7f71551f30a8>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:187:2 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:187:2 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:187:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f71551fd558 type <integer_type 0x7f71556d27e0 long unsigned int> constant 48>
[40;33m =======POP node_fun stack:bfd_openw========= [0m
[40;42m =======pre add _ fucntion:make_tempname========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_tempname  function_call count: 4 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155210480
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7f71551fda50>
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155210480
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7f71551fda50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71552103f0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7f71551fda38>
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:58:26: warning: use location
   58 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552103f0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7f71551fda38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155210360
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f71551fda08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt is child function---strrchr-----

 ================== trace ================== 
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^
if (slash_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion template_in_dir basic block 2
 ================== possible direct basic block ================= 
from template_in_dir basic block 3
 ================== possible direct basic block ================= 
from template_in_dir basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155210360
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f71551fda08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71552101f8
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
_2 = len_13 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552101f8
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f71551fd720 type <integer_type 0x7f71556d27e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7f7155210288
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7f71551fd9d8>
_4 = tmpname_5 + len_6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
[40;42m =======pre_check_funciton:make_tempname========= [0m
[40;42m =======start_check_funciton:make_tempname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207ee8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7f71551f5580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f71551fd990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207ee8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7f71551f5580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f71551fd990>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
   78 |       free (tmpname);
      |       ^
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155207f30
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520c7e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7f71551fd9a8>
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));

 ================== trace ptable================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---template_in_dir-----
this other function ------template_in_dir-----
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207f30
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520c7e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7f71551fd9a8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
   78 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155207f78
    type <integer_type 0x7f71556d25e8 int public SI
        size <integer_cst 0x7f71556bddf8 constant 32>
        unit-size <integer_cst 0x7f71556bde10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d25e8 precision:32 min <integer_cst 0x7f71556bddb0 -2147483648> max <integer_cst 0x7f71556bddc8 2147483647>
        pointer_to_this <pointer_type 0x7f71556d99d8>>
    var <var_decl 0x7f715520c750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);

 ================== trace ptable================== 
trace fucntion name:mkstemp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---mkstemp-----
this other function ------mkstemp-----
 
 Start check Pointer Collect  

======================================================================
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207f78
    type <integer_type 0x7f71556d25e8 int public SI
        size <integer_cst 0x7f71556bddf8 constant 32>
        unit-size <integer_cst 0x7f71556bde10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d25e8 precision:32 min <integer_cst 0x7f71556bddb0 -2147483648> max <integer_cst 0x7f71556bddc8 2147483647>
        pointer_to_this <pointer_type 0x7f71556d99d8>>
    var <var_decl 0x7f715520c750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
   78 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_tempname========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:bfd_get_filename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_get_filename  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:bfd_get_filename========= [0m
[40;42m =======start_check_funciton:bfd_get_filename========= [0m
[40;33m =======POP node_fun stack:bfd_get_filename========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:write_archive========= [0m
[40;42m =======start_check_funciton:write_archive========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f71556c58b8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f7155f65ea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7f71551fd858>
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
[40;36m ======= relate stmt argument:old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
[40;36m ======= relate stmt argument:old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
[40;36m ======= relate stmt argument:old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
[40;36m ======= relate stmt argument:old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
old_name_10 = malloc (_3);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c58b8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f7155f65ea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7f71551fd858>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f71556c5870
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f71551f5080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd840>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_4 = bfd_get_filename (iarch_8(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
this stmt is child function---bfd_get_filename-----

 ================== trace ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_1 = bfd_get_filename (iarch_8(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---bfd_get_filename-----

 ================== trace ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_2 = strlen (_1);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = _2 + 1;
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
old_name_10 = malloc (_3);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
bfd_close (iarch_8(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c5870
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f71551f5080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd840>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: Use after free error!: free location 
  233 |   bfd_close (iarch);
      |   ^
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: Use after free error!: free location 
  233 |   bfd_close (iarch);
      |   ^
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: Use after free error!: free location 
  233 |   bfd_close (iarch);
      |   ^
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71556c56c0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7f71551fd7f8>
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));

 ================== trace ptable================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :888========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---bfd_get_filename-----
this other function ------bfd_get_filename-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_4 = bfd_get_filename (iarch_8(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
this stmt is child function---bfd_get_filename-----

 ================== trace ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_1 = bfd_get_filename (iarch_8(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---bfd_get_filename-----

 ================== trace ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_2 = strlen (_1);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = _2 + 1;
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
old_name_10 = malloc (_3);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
bfd_close (iarch_8(D));
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c56c0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7f71551fd7f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f71556c5750
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
_3 = _2 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
old_name_10 = malloc (_3);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c5750
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f71558b9c40
    type <pointer_type 0x7f71551f3690
        type <array_type 0x7f71551f35e8 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71551dd8e8 constant 456>
            unit-size <integer_cst 0x7f71551dd930 constant 57>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f3540>
            pointer_to_this <pointer_type 0x7f71551f3690>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f71551f4140 type <array_type 0x7f71551f35e8>
        readonly constant static "could not create temporary file whilst writing archive%s\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:218:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:218:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:218:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71556c5900
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f7155f65e10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7f71551fd870>
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);

 ================== trace ptable================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :888========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---make_tempname-----
this other function ------make_tempname-----
 
 Start check Pointer Collect  

======================================================================
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c5900
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f7155f65e10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7f71551fd870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f71558b9d00
    type <pointer_type 0x7f71551f3c78
        type <array_type 0x7f71551f3bd0 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71556db060 constant 24>
            unit-size <integer_cst 0x7f71551dd900 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f0bd0>
            pointer_to_this <pointer_type 0x7f71551f3c78>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f71551fd480 type <array_type 0x7f71551f3bd0>
        readonly constant static "%s\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71556c5948
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155f65f30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7f71551fd888>
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);

 ================== trace ptable================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :888========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---bfd_openw-----
this other function ------bfd_openw-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
In function ‘main’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c5948
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155f65f30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7f71551fd888>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f71558b9d80
    type <pointer_type 0x7f71551f3c78
        type <array_type 0x7f71551f3bd0 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71556db060 constant 24>
            unit-size <integer_cst 0x7f71551dd900 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f0bd0>
            pointer_to_this <pointer_type 0x7f71551f3c78>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f71551fd4b0 type <array_type 0x7f71551f3bd0>
        readonly constant static "%s\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:write_archive========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7f71558b9ae0
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7f7155f65bd0 iarch type <record_type 0x7f71551f2e70 bfd>
        addressable BLK ./benchmarks/binutils/leak_2/binutils_leak_2.c:243:13 size <integer_cst 0x7f71551dd828 384> unit-size <integer_cst 0x7f71551dd7e0 48>
        align:64 warn_if_not_align:0 context <function_decl 0x7f71551ed200 main>>
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:244:9 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:244:9 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:244:9>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:write_archive========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path write_archive  function_call count: 11 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:smart_rename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path smart_rename  function_call count: 7 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207c18
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
result_10 = utime (destination_8(D), &tb);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (result_10 != 0)
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207c18
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f715520d220
    type <pointer_type 0x7f71551f2498
        type <array_type 0x7f71551f23f0 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71551dd888 constant 168>
            unit-size <integer_cst 0x7f71551dd870 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f2348>
            pointer_to_this <pointer_type 0x7f71551f2498>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f715520b480 type <array_type 0x7f71551f23f0>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre_check_funciton:smart_rename========= [0m
[40;42m =======start_check_funciton:smart_rename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207678
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f71551fd918>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with to ========= [0m
[40;36m ======= relate stmt argument:to ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _11);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_9 = chown (to_16(D), _8, _7);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
if (_9 >= 0)
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
if (_9 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
Cond in fucntion smart_rename basic block 7
 ================== possible direct basic block ================= 
from smart_rename basic block 8
 ================== possible direct basic block ================= 
from smart_rename basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _6);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
ret_23 = rename (from_20(D), to_16(D));
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = lstat (to_16(D), &s);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = lstat (to_16(D), &s);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207678
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f71551fd918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155207708
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f71551fd930>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
ret_23 = rename (from_20(D), to_16(D));
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_23 == 0)
bb index := 5
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
if (ret_23 == 0)
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
  139 |       if (ret == 0)
      |          ^
if (ret_23 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
Cond in fucntion smart_rename basic block 5
 ================== possible direct basic block ================= 
from smart_rename basic block 6
 ================== possible direct basic block ================= 
from smart_rename basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with from ========= [0m
[40;36m ======= relate stmt argument:from ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _11);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_9 = chown (to_16(D), _8, _7);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _6);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
bb index := 2
# VUSE <.MEM_27>
return;
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = lstat (to_16(D), &s);
In function ‘write_archive’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207708
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f71551fd930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f715520d0e0
    type <pointer_type 0x7f71551f29d8
        type <array_type 0x7f71551f2930 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71551dd8d0 constant 184>
            unit-size <integer_cst 0x7f71551dd8b8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f2888>
            pointer_to_this <pointer_type 0x7f71551f29d8>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f715520b210 type <array_type 0x7f71551f2930>
        readonly constant static "unable to rename '%s';\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:163:4 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:163:4 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:163:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:smart_rename========= [0m
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_close  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:bfd_close========= [0m
[40;42m =======start_check_funciton:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_openw========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_openw  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:bfd_openw========= [0m
[40;42m =======start_check_funciton:bfd_openw========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f71552071b0
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155203bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7f71551fd900>
# .MEM_9 = VDEF <.MEM_8>
nbfd_6 = malloc (48);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return nbfd_6;
./benchmarks/binutils/leak_2/binutils_leak_2.c:190:16: warning: use location
  190 |         return nbfd;
      |                ^
nbfd_6 = malloc (48);
./benchmarks/binutils/leak_2/binutils_leak_2.c:189:21: warning: use location
  189 |         bfd *nbfd = malloc(sizeof(bfd));
      |                     ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552071b0
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155203bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7f71551fd900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f71558b9fa0
    type <pointer_type 0x7f71551f3150
        type <array_type 0x7f71551f30a8 type <integer_type 0x7f71551e69d8 char>
            SI
            size <integer_cst 0x7f71556bddf8 constant 32>
            unit-size <integer_cst 0x7f71556bde10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f3000>
            pointer_to_this <pointer_type 0x7f71551f3150>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f71558b9f80 type <array_type 0x7f71551f30a8>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:187:2 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:187:2 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:187:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f71551fd558 type <integer_type 0x7f71556d27e0 long unsigned int> constant 48>
[40;33m =======POP node_fun stack:bfd_openw========= [0m
[40;42m =======pre add _ fucntion:make_tempname========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_tempname  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155210480
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7f71551fda50>
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155210480
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7f71551fda50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71552103f0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7f71551fda38>
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:58:26: warning: use location
   58 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552103f0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7f71551fda38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155210360
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f71551fda08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt is child function---strrchr-----

 ================== trace ================== 
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^
if (slash_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion template_in_dir basic block 2
 ================== possible direct basic block ================= 
from template_in_dir basic block 3
 ================== possible direct basic block ================= 
from template_in_dir basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155210360
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f71551fda08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71552101f8
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
_2 = len_13 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552101f8
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f71551fd720 type <integer_type 0x7f71556d27e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7f7155210288
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7f71551fd9d8>
_4 = tmpname_5 + len_6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
[40;42m =======pre_check_funciton:make_tempname========= [0m
[40;42m =======start_check_funciton:make_tempname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207ee8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7f71551f5580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f71551fd990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207ee8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7f71551f5580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f71551fd990>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
   78 |       free (tmpname);
      |       ^
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155207f30
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520c7e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7f71551fd9a8>
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));

 ================== trace ptable================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---template_in_dir-----
this other function ------template_in_dir-----
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207f30
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520c7e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7f71551fd9a8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
   78 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155207f78
    type <integer_type 0x7f71556d25e8 int public SI
        size <integer_cst 0x7f71556bddf8 constant 32>
        unit-size <integer_cst 0x7f71556bde10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d25e8 precision:32 min <integer_cst 0x7f71556bddb0 -2147483648> max <integer_cst 0x7f71556bddc8 2147483647>
        pointer_to_this <pointer_type 0x7f71556d99d8>>
    var <var_decl 0x7f715520c750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);

 ================== trace ptable================== 
trace fucntion name:mkstemp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---mkstemp-----
this other function ------mkstemp-----
 
 Start check Pointer Collect  

======================================================================
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207f78
    type <integer_type 0x7f71556d25e8 int public SI
        size <integer_cst 0x7f71556bddf8 constant 32>
        unit-size <integer_cst 0x7f71556bde10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d25e8 precision:32 min <integer_cst 0x7f71556bddb0 -2147483648> max <integer_cst 0x7f71556bddc8 2147483647>
        pointer_to_this <pointer_type 0x7f71556d99d8>>
    var <var_decl 0x7f715520c750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
   78 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_tempname========= [0m
[40;42m =======pre add _ fucntion:strcpy========= [0m
[40;33m =======POP node_fun stack:strcpy========= [0m
[40;42m =======pre add _ fucntion:bfd_get_filename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_get_filename  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:bfd_get_filename========= [0m
[40;42m =======start_check_funciton:bfd_get_filename========= [0m
[40;33m =======POP node_fun stack:bfd_get_filename========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:write_archive========= [0m
[40;42m =======start_check_funciton:write_archive========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f71556c58b8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f7155f65ea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7f71551fd858>
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
[40;36m ======= relate stmt argument:old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
[40;36m ======= relate stmt argument:old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
[40;36m ======= relate stmt argument:old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with old_name ========= [0m
[40;36m ======= relate stmt argument:old_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c58b8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f7155f65ea0 old_name>
    def_stmt old_name_10 = malloc (_3);
    version:10
    ptr-info 0x7f71551fd858>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f71556c5870
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f71551f5080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd840>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
this stmt is child function---bfd_get_filename-----

 ================== trace ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---bfd_get_filename-----

 ================== trace ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with iarch ========= [0m
[40;36m ======= relate stmt argument:iarch ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:3 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c5870
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f71551f5080 iarch>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd840>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: Use after free error!: free location 
  233 |   bfd_close (iarch);
      |   ^
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: Use after free error!: free location 
  233 |   bfd_close (iarch);
      |   ^
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: Use after free error!: free location 
  233 |   bfd_close (iarch);
      |   ^
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71556c56c0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7f71551fd7f8>
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));

 ================== trace ptable================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :888========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---bfd_get_filename-----
this other function ------bfd_get_filename-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_18>
_4 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_4 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:21: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |                     ^
this stmt is child function---bfd_get_filename-----

 ================== trace ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_1 = bfd_get_filename (iarch_8(D));
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_1 = bfd_get_filename (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---bfd_get_filename-----

 ================== trace ================== 
trace fucntion name:bfd_get_filename 
[40;44m =======trace_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;36m ======= node_fun:bfd_get_filename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_17(D)>
_2 = strlen (_1);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_2 = strlen (_1);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---strlen-----

 ================== trace ================== 
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_3 = _2 + 1;
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
_3 = _2 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_23>
bfd_close (iarch_8(D));
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
bfd_close (iarch_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:233:3: warning: use location
  233 |   bfd_close (iarch);
      |   ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c56c0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _1 = bfd_get_filename (iarch_8(D));
    version:1
    ptr-info 0x7f71551fd7f8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f71556c5750
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
_3 = _2 + 1;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17(D)>
old_name_10 = malloc (_3);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
old_name_10 = malloc (_3);
./benchmarks/binutils/leak_2/binutils_leak_2.c:213:23: warning: use location
  213 |   old_name = (char *) xmalloc (strlen (bfd_get_filename (iarch)) + 1);
      |                       ^
this stmt is child function---malloc-----

 ================== trace ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c5750
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _3 = _2 + 1;
    version:3>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f71558b9c40
    type <pointer_type 0x7f71551f3690
        type <array_type 0x7f71551f35e8 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71551dd8e8 constant 456>
            unit-size <integer_cst 0x7f71551dd930 constant 57>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f3540>
            pointer_to_this <pointer_type 0x7f71551f3690>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f71551f4140 type <array_type 0x7f71551f35e8>
        readonly constant static "could not create temporary file whilst writing archive%s\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:218:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:218:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:218:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71556c5900
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f7155f65e10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7f71551fd870>
# .MEM_20 = VDEF <.MEM_19>
new_name_13 = make_tempname (old_name_10);

 ================== trace ptable================== 
trace fucntion name:make_tempname 
[40;44m =======trace_function_path make_tempname  function_call count: 4 level :888========  [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
[40;31m  find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
[40;36m ======= node_fun:make_tempname========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;46m =======add node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
template_in_dir this fucntion return value is heap-object 
make_tempname this fucntion return value is heap-object template_in_dir
[40;46m =======add node_fun stack:template_in_dir========= [0m
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :889========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---make_tempname-----
this other function ------make_tempname-----
 
 Start check Pointer Collect  

======================================================================
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with new_name ========= [0m
[40;36m ======= relate stmt argument:new_name ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c5900
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f7155f65e10 new_name>
    def_stmt new_name_13 = make_tempname (old_name_10);
    version:13
    ptr-info 0x7f71551fd870>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <addr_expr 0x7f71558b9d00
    type <pointer_type 0x7f71551f3c78
        type <array_type 0x7f71551f3bd0 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71556db060 constant 24>
            unit-size <integer_cst 0x7f71551dd900 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f0bd0>
            pointer_to_this <pointer_type 0x7f71551f3c78>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f71551fd480 type <array_type 0x7f71551f3bd0>
        readonly constant static "%s\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71556c5948
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155f65f30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7f71551fd888>
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);

 ================== trace ptable================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :888========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---bfd_openw-----
this other function ------bfd_openw-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^
this stmt is child function---smart_rename-----

 ================== trace ================== 
trace fucntion name:smart_rename 
[40;44m =======trace_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;36m ======= node_fun:smart_rename========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;46m =======add node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;46m =======add node_fun stack:set_times========= [0m
[40;44m =======trace_function_path set_times  function_call count: 2 level :1========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;46m =======add node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;46m =======add node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;46m =======add node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;46m =======add node_fun stack:lstat========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_6 != 0)
bb index := 8
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^
if (_6 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
Cond in fucntion write_archive basic block 8
 ================== possible direct basic block ================= 
from write_archive basic block 9
 ================== possible direct basic block ================= 
from write_archive basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^
this stmt is child function---free-----

 ================== find ================== 
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
bb index := 7
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_31 = VDEF <.MEM_22>
printf ("%s", old_name_10);
bb index := 5
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:225:5: warning: use location
  225 |     bfd_fatal ("%s", old_name);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
strcpy (old_name_10, _4);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
strcpy (old_name_10, _4);
./benchmarks/binutils/leak_2/binutils_leak_2.c:214:3: warning: use location
  214 |   strcpy (old_name, bfd_get_filename (iarch));
      |   ^
this stmt is child function---strcpy-----

 ================== trace ================== 
trace fucntion name:strcpy 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
obfd_16 = bfd_openw (new_name_13);
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
obfd_16 = bfd_openw (new_name_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:222:10: warning: use location
  222 |   obfd = bfd_openw (new_name);
      |          ^
this stmt is child function---bfd_openw-----

 ================== trace ================== 
trace fucntion name:bfd_openw 
[40;44m =======trace_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:bfd_openw========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: use location
  227 |   if (!bfd_close (obfd))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 
[40;44m =======trace_function_path bfd_close  function_call count: 2 level :0========  [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
[40;31m  find free stmt free same pointer [0m
# .MEM_6 = VDEF <.MEM_5>
free (abfd_3(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:198:9: warning: use location
  198 |         free(abfd);
      |         ^
[40;36m ======= node_fun:bfd_close========= [0m
[40;36m ======= find relate stmt with obfd ========= [0m
[40;36m ======= relate stmt argument:obfd ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;46m =======add node_fun stack:rand========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_5 == 0B)
bb index := 6
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^
if (_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
Cond in fucntion write_archive basic block 6
 ================== possible direct basic block ================= 
from write_archive basic block 7
 ================== possible direct basic block ================= 
from write_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (obfd_16 == 0B)
bb index := 4
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
if (obfd_16 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
  224 |   if (obfd == NULL)
      |      ^
if (obfd_16 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:224:6: warning: use location
Cond in fucntion write_archive basic block 4
 ================== possible direct basic block ================= 
from write_archive basic block 5
 ================== possible direct basic block ================= 
from write_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (new_name_13 == 0B)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (new_name_13 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
  217 |   if (new_name == NULL)
      |      ^
if (new_name_13 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:217:6: warning: use location
Cond in fucntion write_archive basic block 2
 ================== possible direct basic block ================= 
from write_archive basic block 3
 ================== possible direct basic block ================= 
from write_archive basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71556c5948
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155f65f30 obfd>
    def_stmt obfd_16 = bfd_openw (new_name_13);
    version:16
    ptr-info 0x7f71551fd888>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_26 = VDEF <.MEM_25>
_6 = smart_rename (new_name_13, old_name_10, 0);
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:7: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_6 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:235:6: warning: use location
  235 |   if (smart_rename (new_name, old_name, 0) != 0)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_27 = VDEF <.MEM_26>
free (old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:237:3: warning: use location
  237 |   free (old_name);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
# .MEM_29 = VDEF <.MEM_23>
printf ("%s", old_name_10);
./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5: warning: use location
  228 |     bfd_fatal ("%s", old_name);
      |     ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_23 = VDEF <.MEM_22>
_5 = bfd_close (obfd_16);
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:8: warning: Use after free error!: free location 
  227 |   if (!bfd_close (obfd))
      |        ^
if (_5 == 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:227:6: warning: use location
  227 |   if (!bfd_close (obfd))
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f71558b9d80
    type <pointer_type 0x7f71551f3c78
        type <array_type 0x7f71551f3bd0 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71556db060 constant 24>
            unit-size <integer_cst 0x7f71551dd900 constant 3>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f0bd0>
            pointer_to_this <pointer_type 0x7f71551f3c78>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f71551fd4b0 type <array_type 0x7f71551f3bd0>
        readonly constant static "%s\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:228:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:write_archive========= [0m
[40;44m =======node_fun:bfd_get_filename========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_get_filename  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:bfd_get_filename========= [0m
[40;42m =======start_check_funciton:bfd_get_filename========= [0m
[40;33m =======POP node_fun stack:bfd_get_filename========= [0m
[40;44m =======node_fun:bfd_close========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_close  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:rand========= [0m
[40;33m =======POP node_fun stack:rand========= [0m
[40;42m =======pre_check_funciton:bfd_close========= [0m
[40;42m =======start_check_funciton:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;44m =======node_fun:bfd_openw========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_openw  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:bfd_openw========= [0m
[40;42m =======start_check_funciton:bfd_openw========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f71552071b0
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155203bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7f71551fd900>
# .MEM_9 = VDEF <.MEM_8>
nbfd_6 = malloc (48);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
return nbfd_6;
In function ‘bfd_openw’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:190:16: warning: use location
  190 |         return nbfd;
      |                ^
nbfd_6 = malloc (48);
./benchmarks/binutils/leak_2/binutils_leak_2.c:189:21: warning: use location
  189 |         bfd *nbfd = malloc(sizeof(bfd));
      |                     ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552071b0
    type <pointer_type 0x7f71551f2f18
        type <record_type 0x7f71551f2e70 bfd BLK
            size <integer_cst 0x7f71551dd828 constant 384>
            unit-size <integer_cst 0x7f71551dd7e0 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71551f2dc8 fields <field_decl 0x7f71551e9e40 filename> context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>
            pointer_to_this <pointer_type 0x7f71551f2f18>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f7155203bd0 nbfd>
    def_stmt nbfd_6 = malloc (48);
    version:6
    ptr-info 0x7f71551fd900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f71558b9fa0
    type <pointer_type 0x7f71551f3150
        type <array_type 0x7f71551f30a8 type <integer_type 0x7f71551e69d8 char>
            SI
            size <integer_cst 0x7f71556bddf8 constant 32>
            unit-size <integer_cst 0x7f71556bde10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f3000>
            pointer_to_this <pointer_type 0x7f71551f3150>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f71558b9f80 type <array_type 0x7f71551f30a8>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:187:2 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:187:2 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:187:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f71551fd558 type <integer_type 0x7f71556d27e0 long unsigned int> constant 48>
[40;33m =======POP node_fun stack:bfd_openw========= [0m
[40;44m =======node_fun:smart_rename========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path smart_rename  function_call count: 7 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unlink========= [0m
[40;33m =======POP node_fun stack:unlink========= [0m
[40;42m =======pre add _ fucntion:set_times========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207c18
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
printf ("%s: cannot set time:", destination_8(D));
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
result_10 = utime (destination_8(D), &tb);
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (result_10 != 0)
In function ‘smart_rename’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207c18
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f715520d220
    type <pointer_type 0x7f71551f2498
        type <array_type 0x7f71551f23f0 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71551dd888 constant 168>
            unit-size <integer_cst 0x7f71551dd870 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f2348>
            pointer_to_this <pointer_type 0x7f71551f2498>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f715520b480 type <array_type 0x7f71551f23f0>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:chmod========= [0m
[40;33m =======POP node_fun stack:chmod========= [0m
[40;42m =======pre add _ fucntion:chown========= [0m
[40;33m =======POP node_fun stack:chown========= [0m
[40;42m =======pre add _ fucntion:rename========= [0m
[40;33m =======POP node_fun stack:rename========= [0m
[40;42m =======pre add _ fucntion:lstat========= [0m
[40;33m =======POP node_fun stack:lstat========= [0m
[40;42m =======pre_check_funciton:smart_rename========= [0m
[40;42m =======start_check_funciton:smart_rename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207678
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f71551fd918>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with to ========= [0m
[40;36m ======= relate stmt argument:to ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_9 >= 0)
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
if (_9 >= 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                  ^
if (_9 >= 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:18: warning: use location
Cond in fucntion smart_rename basic block 7
 ================== possible direct basic block ================= 
from smart_rename basic block 8
 ================== possible direct basic block ================= 
from smart_rename basic block 13
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
bb index := 5
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207678
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5380 to>
    def_stmt GIMPLE_NOP
    version:16
    ptr-info 0x7f71551fd918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155207708
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f71551fd930>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:174:7: warning: use location
  174 |       unlink (from);
      |       ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 
unlink (from_20(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:164:11: warning: use location
  164 |           unlink (from);
      |           ^
this stmt is child function---unlink-----

 ================== trace ================== 
trace fucntion name:unlink 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_30 = VDEF <.MEM_27>
ret_23 = rename (from_20(D), to_16(D));
bb index := 5
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
ret_23 = rename (from_20(D), to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:138:13: warning: use location
  138 |       ret = rename (from, to);
      |             ^
this stmt is child function---rename-----

 ================== trace ================== 
trace fucntion name:rename 

 ================== trace ================== 
trace fucntion free:0 
ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (ret_23 == 0)
bb index := 5
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================
if (ret_23 == 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
  139 |       if (ret == 0)
      |          ^
if (ret_23 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:139:10: warning: use location
Cond in fucntion smart_rename basic block 5
 ================== possible direct basic block ================= 
from smart_rename basic block 6
 ================== possible direct basic block ================= 
from smart_rename basic block 9
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 
set_times (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:173:33: warning: use location
  173 |                                 set_times (to, &s);
      |                                 ^
this stmt is child function---set_times-----

 ================== trace ================== 
trace fucntion name:set_times 
[40;44m =======trace_function_path set_times  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:set_times========= [0m
[40;36m ======= find relate stmt with from ========= [0m
[40;36m ======= relate stmt argument:from ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;46m =======add node_fun stack:utime========= [0m

 ================== trace ================== 
trace fucntion free:0 
printf ("unable to rename \'%s\';", to_16(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:163:11: warning: use location
  163 |           non_fatal (("unable to rename '%s';"), to);
      |           ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_35 = VDEF <.MEM_34>
chmod (to_16(D), _11);
bb index := 8
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _11);
./benchmarks/binutils/leak_2/binutils_leak_2.c:157:17: warning: use location
  157 |                 chmod (to, s.st_mode & 07777);
      |                 ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_34 = VDEF <.MEM_33>
_9 = chown (to_16(D), _8, _7);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
_9 = chown (to_16(D), _8, _7);
./benchmarks/binutils/leak_2/binutils_leak_2.c:156:19: warning: use location
  156 |               if (chown (to, s.st_uid, s.st_gid) >= 0)
      |                   ^
this stmt is child function---chown-----

 ================== trace ================== 
trace fucntion name:chown 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_33 = VDEF <.MEM_30>
chmod (to_16(D), _6);
bb index := 7
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 5

======================================================================
chmod (to_16(D), _6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:155:15: warning: use location
  155 |               chmod (to, s.st_mode & 0777);
      |               ^
this stmt is child function---chmod-----

 ================== trace ================== 
trace fucntion name:chmod 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26(D)>
_1 = lstat (to_16(D), &s);
bb index := 2
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
  239 | }
      | ^
beacuse in succ := 10 have return or exit
# VUSE <.MEM_27>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:239:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = lstat (to_16(D), &s);
./benchmarks/binutils/leak_2/binutils_leak_2.c:127:12: warning: use location
  127 |   exists = lstat (to, &s) == 0;
      |            ^
this stmt is child function---lstat-----

 ================== trace ================== 
trace fucntion name:lstat 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207708
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5300 from>
    def_stmt GIMPLE_NOP
    version:20
    ptr-info 0x7f71551fd930>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f715520d0e0
    type <pointer_type 0x7f71551f29d8
        type <array_type 0x7f71551f2930 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71551dd8d0 constant 184>
            unit-size <integer_cst 0x7f71551dd8b8 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f2888>
            pointer_to_this <pointer_type 0x7f71551f29d8>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f715520b210 type <array_type 0x7f71551f2930>
        readonly constant static "unable to rename '%s';\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:163:4 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:163:4 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:163:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:smart_rename========= [0m
[40;44m =======node_fun:set_times========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path set_times  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:utime========= [0m
[40;33m =======POP node_fun stack:utime========= [0m
[40;42m =======pre_check_funciton:set_times========= [0m
[40;42m =======start_check_funciton:set_times========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207c18
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_36>
return ret_12;
In function ‘set_times’:
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
printf ("%s: cannot set time:", destination_8(D));
bb index := 3
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 5

======================================================================
printf ("%s: cannot set time:", destination_8(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5: warning: use location
  117 |     non_fatal (("%s: cannot set time:"), destination);
      |     ^
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
result_10 = utime (destination_8(D), &tb);
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
result_10 = utime (destination_8(D), &tb);
./benchmarks/binutils/leak_2/binutils_leak_2.c:103:14: warning: use location
  103 |     result = utime (destination, tb);
      |              ^
this stmt is child function---utime-----

 ================== trace ================== 
trace fucntion name:utime 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
  177 |   return ret;
      |          ^
beacuse in succ := 13 have return or exit
# VUSE <.MEM_36>
return ret_12;
./benchmarks/binutils/leak_2/binutils_leak_2.c:177:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 13

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
  118 | }
      | ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_11>
return;
./benchmarks/binutils/leak_2/binutils_leak_2.c:118:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
beacuse in succ := 5 have return or exit
# VUSE <.MEM_9>
return _1;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (result_10 != 0)
bb index := 2
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
   63 |   return tmpname;
      |          ^
beacuse in succ := 5 have return or exit
# VUSE <.MEM_24>
return tmpname_5;
./benchmarks/binutils/leak_2/binutils_leak_2.c:63:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 5

======================================================================
if (result_10 != 0)
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
  116 |   if (result != 0)
      |      ^
if (result_10 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:116:6: warning: use location
Cond in fucntion set_times basic block 2
 ================== possible direct basic block ================= 
from set_times basic block 3
 ================== possible direct basic block ================= 
from set_times basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207c18
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5480 destination>
    def_stmt GIMPLE_NOP
    version:8
    ptr-info 0x7f71551fd960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f715520d220
    type <pointer_type 0x7f71551f2498
        type <array_type 0x7f71551f23f0 type <integer_type 0x7f71551e69d8 char>
            BLK
            size <integer_cst 0x7f71551dd888 constant 168>
            unit-size <integer_cst 0x7f71551dd870 constant 21>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f71551f2348>
            pointer_to_this <pointer_type 0x7f71551f2498>>
        unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7f715520b480 type <array_type 0x7f71551f23f0>
        readonly constant static "%s: cannot set time:\000">
    ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5 start: ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5 finish: ./benchmarks/binutils/leak_2/binutils_leak_2.c:117:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:set_times========= [0m
[40;44m =======node_fun:make_tempname========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_tempname  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:mkstemp========= [0m
[40;33m =======POP node_fun stack:mkstemp========= [0m
[40;42m =======pre add _ fucntion:template_in_dir========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155210480
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7f71551fda50>
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
In function ‘make_tempname’:
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155210480
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7f71551fda50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71552103f0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7f71551fda38>
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:58:26: warning: use location
   58 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552103f0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7f71551fda38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155210360
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f71551fda08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt is child function---strrchr-----

 ================== trace ================== 
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^
if (slash_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion template_in_dir basic block 2
 ================== possible direct basic block ================= 
from template_in_dir basic block 3
 ================== possible direct basic block ================= 
from template_in_dir basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155210360
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f71551fda08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71552101f8
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
_2 = len_13 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552101f8
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f71551fd720 type <integer_type 0x7f71556d27e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7f7155210288
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7f71551fd9d8>
_4 = tmpname_5 + len_6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
[40;42m =======pre_check_funciton:make_tempname========= [0m
[40;42m =======start_check_funciton:make_tempname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155207ee8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7f71551f5580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f71551fd990>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207ee8
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <parm_decl 0x7f71551f5580 filename>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f71551fd990>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
   78 |       free (tmpname);
      |       ^
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155207f30
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520c7e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7f71551fd9a8>
# .MEM_11 = VDEF <.MEM_10(D)>
tmpname_6 = template_in_dir (filename_4(D));

 ================== trace ptable================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :888========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---template_in_dir-----
this other function ------template_in_dir-----
 
 Start check Pointer Collect  

======================================================================
tmpname_6 = template_in_dir (filename_4(D));
./benchmarks/binutils/leak_2/binutils_leak_2.c:72:19: warning: use location
   72 |   char *tmpname = template_in_dir (filename);
      |                   ^
this stmt is child function---template_in_dir-----

 ================== trace ================== 
trace fucntion name:template_in_dir 
[40;44m =======trace_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:template_in_dir========= [0m
[40;36m ======= find relate stmt with tmpname ========= [0m
[40;36m ======= relate stmt argument:tmpname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;46m =======add node_fun stack:strrchr========= [0m

 ================== trace ================== 
trace fucntion free:0 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207f30
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520c7e0 tmpname>
    def_stmt tmpname_6 = template_in_dir (filename_4(D));
    version:6
    ptr-info 0x7f71551fd9a8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
   78 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155207f78
    type <integer_type 0x7f71556d25e8 int public SI
        size <integer_cst 0x7f71556bddf8 constant 32>
        unit-size <integer_cst 0x7f71556bde10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d25e8 precision:32 min <integer_cst 0x7f71556bddb0 -2147483648> max <integer_cst 0x7f71556bddc8 2147483647>
        pointer_to_this <pointer_type 0x7f71556d99d8>>
    var <var_decl 0x7f715520c750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
# .MEM_12 = VDEF <.MEM_11>
fd_8 = mkstemp (tmpname_6);

 ================== trace ptable================== 
trace fucntion name:mkstemp 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---mkstemp-----
this other function ------mkstemp-----
 
 Start check Pointer Collect  

======================================================================
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location
this stmt have mutiple branch --------
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^
this stmt is child function---free-----

 ================== find ================== 
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 
fd_8 = mkstemp (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:75:8: warning: use location
   75 |   fd = mkstemp (tmpname);
      |        ^
this stmt is child function---mkstemp-----

 ================== trace ================== 
trace fucntion name:mkstemp 

 ================== trace ================== 
trace fucntion free:1 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:1 
if (fd_8 == -1)
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
   76 |   if (fd == -1)
      |      ^
if (fd_8 == -1)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:76:6: warning: use location
Cond in fucntion make_tempname basic block 2
 ================== possible direct basic block ================= 
from make_tempname basic block 3
 ================== possible direct basic block ================= 
from make_tempname basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155207f78
    type <integer_type 0x7f71556d25e8 int public SI
        size <integer_cst 0x7f71556bddf8 constant 32>
        unit-size <integer_cst 0x7f71556bde10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d25e8 precision:32 min <integer_cst 0x7f71556bddb0 -2147483648> max <integer_cst 0x7f71556bddc8 2147483647>
        pointer_to_this <pointer_type 0x7f71556d99d8>>
    var <var_decl 0x7f715520c750 fd>
    def_stmt fd_8 = mkstemp (tmpname_6);
    version:8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: use location
   78 |       free (tmpname);
      |       ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
_1 = PHI <0B(3), tmpname_6(4)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_14 = VDEF <.MEM_12>
free (tmpname_6);
./benchmarks/binutils/leak_2/binutils_leak_2.c:78:7: warning: Use after free error!: free location 
   78 |       free (tmpname);
      |       ^
# .MEM_13 = VDEF <.MEM_12>
close (fd_8);
./benchmarks/binutils/leak_2/binutils_leak_2.c:81:3: warning: use location
   81 |   close (fd);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:make_tempname========= [0m
[40;44m =======node_fun:template_in_dir========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path template_in_dir  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strrchr========= [0m
[40;33m =======POP node_fun stack:strrchr========= [0m
[40;42m =======pre_check_funciton:template_in_dir========= [0m
[40;42m =======start_check_funciton:template_in_dir========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f7155210480
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7f71551fda50>
# .MEM_21 = VDEF <.MEM_19(D)>
tmpname_15 = malloc (_2);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
In function ‘template_in_dir’:
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155210480
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_15 = malloc (_2);
    version:15
    ptr-info 0x7f71551fda50>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71552103f0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7f71551fda38>
# .MEM_20 = VDEF <.MEM_19(D)>
tmpname_12 = malloc (9);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
tmpname_12 = malloc (9);
./benchmarks/binutils/leak_2/binutils_leak_2.c:58:26: warning: use location
   58 |       tmpname = (char *) xmalloc (sizeof (template));   /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552103f0
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
    var <var_decl 0x7f715520cbd0 tmpname>
    def_stmt tmpname_12 = malloc (9);
    version:12
    ptr-info 0x7f71551fda38>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f7155210360
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f71551fda08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
slash_10 = strrchr (path_9(D), 47);
./benchmarks/binutils/leak_2/binutils_leak_2.c:45:23: warning: use location
   45 |   const char *slash = strrchr (path, '/');
      |                       ^
this stmt is child function---strrchr-----

 ================== trace ================== 
trace fucntion name:strrchr 

 ================== trace ================== 
trace fucntion free:0 
_1 = slash_10 - path_9(D);
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:19: warning: use location
   51 |       len = slash - path;
      |                   ^
len_13 = (size_t) _1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:51:11: warning: use location
   51 |       len = slash - path;
      |           ^
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
len_17 = len_13 + 1;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:18: warning: use location
   54 |       tmpname[len++] = '/';
      |                  ^
len_6 = PHI <len_17(3), 0(4)>
lto1: warning: use location
this stmt have mutiple branch --------
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
if (slash_10 != 0B)
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
   49 |   if (slash != (char *) NULL)
      |      ^
if (slash_10 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_2/binutils_leak_2.c:49:6: warning: use location
Cond in fucntion template_in_dir basic block 2
 ================== possible direct basic block ================= 
from template_in_dir basic block 3
 ================== possible direct basic block ================= 
from template_in_dir basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f7155210360
    type <pointer_type 0x7f71551e6b28
        type <integer_type 0x7f71551e6a80 char readonly QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6b28>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f71551f3a80>>
    var <parm_decl 0x7f71551f5600 path>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7f71551fda08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f71552101f8
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>
_2 = len_13 + 11;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
tmpname_15 = malloc (_2);
./benchmarks/binutils/leak_2/binutils_leak_2.c:52:26: warning: use location
   52 |       tmpname = (char *) xmalloc (len + sizeof (template) + 2); /* allocation site */
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 
tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
lto1: warning: use location
this stmt have mutiple branch --------
_3 = tmpname_15 + len_13;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:14: warning: use location
   54 |       tmpname[len++] = '/';
      |              ^
*_3 = 47;
./benchmarks/binutils/leak_2/binutils_leak_2.c:54:22: warning: use location
   54 |       tmpname[len++] = '/';
      |                      ^
memcpy (tmpname_15, path_9(D), len_13);
./benchmarks/binutils/leak_2/binutils_leak_2.c:53:7: warning: use location
   53 |       memcpy (tmpname, path, len);
      |       ^
this stmt is child function---memcpy-----

 ================== trace ================== 
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f71552101f8
    type <integer_type 0x7f71556d27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d2738 precision:64 min <integer_cst 0x7f71556bde88 0> max <integer_cst 0x7f71556be500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f71556de7e0>>
   
    def_stmt _2 = len_13 + 11;
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f71551fd720 type <integer_type 0x7f71556d27e0 long unsigned int> constant 9>

dot graph START

======================================================================
 <ssa_name 0x7f7155210288
    type <pointer_type 0x7f71551e6bd0
        type <integer_type 0x7f71551e69d8 char public QI
            size <integer_cst 0x7f71556bdca8 constant 8>
            unit-size <integer_cst 0x7f71556bdcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f71556d23f0 precision:8 min <integer_cst 0x7f71551dd708 -128> max <integer_cst 0x7f71551dd6f0 127>
            pointer_to_this <pointer_type 0x7f71551e6bd0>>
        public unsigned DI
        size <integer_cst 0x7f71556bdbb8 constant 64>
        unit-size <integer_cst 0x7f71556bdbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f71556c8168 ./benchmarks/binutils/leak_2/binutils_leak_2.c>>
   
    def_stmt _4 = tmpname_5 + len_6;
    version:4
    ptr-info 0x7f71551fd9d8>
_4 = tmpname_5 + len_6;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:template_in_dir========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
write_archive (&iarch);
iarch ={v} {CLOBBER};
return 0;

=======Mapping node_fun:write_archive=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = bfd_get_filename (iarch_8(D));
_2 = strlen (_1);
_3 = _2 + 1;
old_name_10 = malloc (_3);
_4 = bfd_get_filename (iarch_8(D));
strcpy (old_name_10, _4);
new_name_13 = make_tempname (old_name_10);
if (new_name_13 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
printf ("could not create temporary file whilst writing archive%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
obfd_16 = bfd_openw (new_name_13);
if (obfd_16 == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 6>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 429324]:
printf ("%s", old_name_10);
exit (1);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1072883005]:
_5 = bfd_close (obfd_16);
if (_5 == 0B)
  goto <bb 7>; [0.04%]
else
  goto <bb 8>; [99.96%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 429152]:
printf ("%s", old_name_10);
exit (1);

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1072453853]:
bfd_close (iarch_8(D));
_6 = smart_rename (new_name_13, old_name_10, 0);
if (_6 != 0)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 428981]:
exit (1);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1072024872]:
free (old_name_10);
return;

=======Mapping node_fun:bfd_get_filename=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_3 = iarch_2(D)->filename;
return _3;

=======Mapping node_fun:bfd_close=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
rand ();
free (abfd_3(D));
return;

=======Mapping node_fun:bfd_openw=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = MEM[(int *)name_3(D)];
printf ("%d\n", _1);
nbfd_6 = malloc (48);
return nbfd_6;

=======Mapping node_fun:smart_rename=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = lstat (to_16(D), &s);
if (_1 != 0)
  goto <bb 5>; [33.00%]
else
  goto <bb 3>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 719407024]:
_2 = BIT_FIELD_REF <s, 32, 192>;
_3 = _2 & 61568;
if (_3 == 32896)
  goto <bb 4>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 244598390]:
_4 = s.st_nlink;
if (_4 == 1)
  goto <bb 5>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 437498253]:
ret_23 = rename (from_20(D), to_16(D));
if (ret_23 == 0)
  goto <bb 6>; [67.00%]
else
  goto <bb 9>; [33.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 293123831]:
if (_1 == 0)
  goto <bb 7>; [33.00%]
else
  goto <bb 13>; [67.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 96730864]:
_5 = s.st_mode;
_6 = _5 & 511;
chmod (to_16(D), _6);
_7 = s.st_gid;
_8 = s.st_uid;
_9 = chown (to_16(D), _8, _7);
if (_9 >= 0)
  goto <bb 8>; [41.48%]
else
  goto <bb 13>; [58.52%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 40123963]:
_10 = s.st_mode;
_11 = _10 & 4095;
chmod (to_16(D), _11);
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 144374423]:
printf ("unable to rename \'%s\';", to_16(D));
unlink (from_20(D));
goto <bb 13>; [100.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 636243571]:
if (preserve_dates_18(D) != 0)
  goto <bb 11>; [33.00%]
else
  goto <bb 12>; [67.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 209960377]:
set_times (to_16(D), &s);

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 636243571]:
unlink (from_20(D));

=======is loop:0=========

 bb index 13 
<bb 13> [local count: 1073741824]:
# ret_12 = PHI <ret_23(6), ret_23(7), ret_23(8), ret_23(9), 0(12)>
s ={v} {CLOBBER};
return ret_12;

=======Mapping node_fun:set_times=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = statbuf_5(D)->st_atim.tv_sec;
tb[0] = _1;
_2 = statbuf_5(D)->st_mtim.tv_sec;
tb[1] = _2;
result_10 = utime (destination_8(D), &tb);
tb ={v} {CLOBBER};
if (result_10 != 0)
  goto <bb 3>; [33.00%]
else
  goto <bb 4>; [67.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 354334800]:
printf ("%s: cannot set time:", destination_8(D));

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
return;

=======Mapping node_fun:make_tempname=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
tmpname_6 = template_in_dir (filename_4(D));
fd_8 = mkstemp (tmpname_6);
if (fd_8 == -1)
  goto <bb 3>; [9.78%]
else
  goto <bb 4>; [90.22%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 105011952]:
free (tmpname_6);
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 968729873]:
close (fd_8);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# _1 = PHI <0B(3), tmpname_6(4)>
return _1;

=======Mapping node_fun:template_in_dir=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
slash_10 = strrchr (path_9(D), 47);
if (slash_10 != 0B)
  goto <bb 3>; [70.00%]
else
  goto <bb 4>; [30.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 751619281]:
_1 = slash_10 - path_9(D);
len_13 = (size_t) _1;
_2 = len_13 + 11;
tmpname_15 = malloc (_2);
memcpy (tmpname_15, path_9(D), len_13);
len_17 = len_13 + 1;
_3 = tmpname_15 + len_13;
*_3 = 47;
goto <bb 5>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 322122544]:
tmpname_12 = malloc (9);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 1073741824]:
# tmpname_5 = PHI <tmpname_15(3), tmpname_12(4)>
# len_6 = PHI <len_17(3), 0(4)>
_4 = tmpname_5 + len_6;
memcpy (_4, "stXXXXXX", 9);
return tmpname_5;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 3 [0m
[40;34m    find Entry point : 17 [0m
[40;34m    used_stmt array stack totalsize of : 0.003488 mb[0m
[40;34m    collect time: : 0.000195 s [0m
[40;34m    algorithm time: 0.106500 s [0m
[40;34m    gimple stmt count : : 92 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline                           |      |      |      |      |     -0.5%|     -0.3%|
fixup_cfg                        |      |      |      |      |     -0.5%|     -0.3%|
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                   ------------|      |      |      |      |          |          |
cplxlower            ------------|      |      |      |      |          |          |
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     +1.1%|     -0.1%|
copyprop                         |      |    +2|      |      |     +1.1%|     -0.1%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
no_loop              ------------|      |      |      |      |          |          |
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +72.4%|    +34.6%|
into_cfglayout                   |      |      |      |      |     -1.4%|     -0.5%|
jump                             |      |      |      |      |     -1.7%|     -0.9%|
subreg1                          |      |      |      |      |     -0.4%|     -0.4%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -2.1%|     -2.7%|
ce1                              |      |      |      |      |     -2.2%|     -2.8%|
reginfo              ------------|      |      |      |      |          |          |
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +4.1%|     +5.5%|
ce2                              |      |      |      |      |     +3.9%|     +5.2%|
outof_cfglayout                  |      |      |      |      |     +1.2%|     +0.4%|
split1                           |      |      |      |      |     +1.2%|     +0.4%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                              |      |      |      |      |     -0.3%|     -0.0%|
reload                           |      |      |      |      |     -8.4%|    -10.5%|
postreload                       |      |      |      |      |     -8.8%|    -11.6%|
split2                           |      |      |      |      |     -0.2%|     -0.0%|
cmpelim                          |      |      |      |      |     -0.2%|     -0.0%|
pro_and_epilogue                 |      |      |      |      |     +9.0%|    +14.1%|
dse2                             |      |      |      |      |     +8.3%|    +12.3%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg                    |      |      |      |      |     -0.2%|     -0.2%|
rtl_dce                          |      |      |      |      |     -0.2%|     -0.2%|
bbro                             |      |      |      |      |     -0.2%|     -0.1%|
split4                           |      |      |      |      |     -0.2%|     -0.1%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
