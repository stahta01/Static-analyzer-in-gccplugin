In file included from ./benchmarks/binutils/leak_6/binutils_leak_6.c:6:0:
./benchmarks/binutils/leak_6/../include/common.h: In function â€˜discard_my_cleanupsâ€™:
./benchmarks/binutils/leak_6/../include/common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/leak_6/../include/common.h: In function â€˜do_my_cleanupsâ€™:
./benchmarks/binutils/leak_6/../include/common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
./benchmarks/binutils/leak_6/binutils_leak_6.c: In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: implicit declaration of function â€˜strcmpâ€™ [-Wimplicit-function-declaration]
      else if (strcmp (arg, "-s") == 0)
               ^~~~~~
./benchmarks/binutils/leak_6/binutils_leak_6.c: In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:149:26: warning: passing argument 1 of â€˜add_symbol_file_commandâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
  add_symbol_file_command(args);
                          ^~~~
./benchmarks/binutils/leak_6/binutils_leak_6.c:49:1: note: expected â€˜char **â€™ but argument is of type â€˜const char **â€™
 add_symbol_file_command (char **args)
 ^~~~~~~~~~~~~~~~~~~~~~~
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 5
--------GIMPLE Cond -------
succs:= 5
succs:= 6
succs:= 7
--------GIMPLE Cond -------
succs:= 8
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 11
succs:= 11
--------GIMPLE Cond -------
succs:= 7
succs:= 14
--------GIMPLE Cond -------
succs:= 14
succs:= 16
--------GIMPLE Cond -------
succs:= 17
--------GIMPLE Cond -------
succs:= 18
--------GIMPLE Cond -------
succs:= 20
succs:= 20
succs:= 16
--------GIMPLE Cond -------
succs:= 23
succs:= 6
succs:= 8
succs:= 17
succs:= 23
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 26
succs:= 27
succs:= 27
--------GIMPLE Cond -------
succs:= 29
succs:= 29
--------GIMPLE Cond -------
succs:= 33
--------GIMPLE Cond -------
succs:= 35
succs:= 35
--------GIMPLE Cond -------
succs:= 38
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
args[0] = "prog";
# .MEM_3 = VDEF <.MEM_2>
args[1] = "v";
# .MEM_4 = VDEF <.MEM_3>
args[2] = "-s";
# .MEM_5 = VDEF <.MEM_4>
args[3] = "idx";
# .MEM_6 = VDEF <.MEM_5>
args[4] = "addr";
# .MEM_7 = VDEF <.MEM_6>
args[5] = 0B;
# .MEM_98 = VDEF <.MEM_7>
new_69 = malloc (32);
# .MEM_107 = VDEF <.MEM_103>
sect_opts_11 = malloc (64);
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
# .MEM_108 = VDEF <.MEM_94>
section_addrs_48 = malloc (24);
# .MEM_109 = VDEF <.MEM_108>
new_80 = malloc (32);
# .MEM_121 = VDEF <.MEM_120>
_87 = __printf_chk (1, "cleanup!!!!! =========\n");
# .MEM_122 = VDEF <.MEM_121>
_89 = __printf_chk (1, "%x\n", _88);
 <var_decl 0x7f33dd80dab0 cleanup_chain
    type <pointer_type 0x7f33dc5a1c78
        type <record_type 0x7f33dc5a1d20 cleanup BLK
            size <integer_cst 0x7f33dca77f48 constant 256>
            unit size <integer_cst 0x7f33dca93048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5a1d20 fields <field_decl 0x7f33dc5a3390 next> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5a1c78> chain <type_decl 0x7f33dc5a3428 D.3994>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dc5a1e70>>
    addressable static unsigned DI file ./benchmarks/binutils/leak_6/../include/common.h line 49 col 24 size <integer_cst 0x7f33dca77be8 64> unit size <integer_cst 0x7f33dca77c00 8>
    align 64 context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f33dca77bd0>>
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:null_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path null_cleanup  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:null_cleanup========= [0m
[40;42m =======start_check_funciton:null_cleanup========= [0m
[40;33m =======POP node_fun stack:null_cleanup========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f33dca7f8b8
    type <pointer_type 0x7f33dc5a1c78
        type <record_type 0x7f33dc5a1d20 cleanup BLK
            size <integer_cst 0x7f33dca77f48 constant 256>
            unit size <integer_cst 0x7f33dca93048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5a1d20 fields <field_decl 0x7f33dc5a3390 next> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5a1c78> chain <type_decl 0x7f33dc5a3428 D.3994>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dc5a1e70>>
    var <var_decl 0x7f33dc5ce5a0 new>
    def_stmt new_69 = malloc (32);
    version 69
    ptr-info 0x7f33dc5de0d8>
# .MEM_98 = VDEF <.MEM_7>
new_69 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_102>
cleanup_chain = new_69;
bb index := 2
# VUSE <.MEM_9>
return 0;
In function â€˜mainâ€™:
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_102>
cleanup_chain = new_69;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
cleanup_chain = new_69;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_102>
cleanup_chain = new_69;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_102>
cleanup_chain = new_69;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
cleanup_chain = new_69;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
old_chain_70 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
old_chain_70 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
old_chain_70 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = old_chain_70;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = old_chain_70;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_104 = old_chain_70;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _104;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _104;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_68 = _104;
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_105 = _68;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_105 = _68;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_105 = _68;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_67 = _105;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_67 = _105;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_67 = _105;
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = _67;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = _67;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_106 = _67;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
my_cleanups_10 = _106;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
my_cleanups_10 = _106;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
my_cleanups_10 = _106;
./benchmarks/binutils/leak_6/binutils_leak_6.c:59:18: warning: use location
  struct cleanup *my_cleanups = make_cleanup (null_cleanup, NULL);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (my_cleanups_10 != ptr_83)
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
  while ((ptr = *pmy_chain) != old_chain)
        ^
if (my_cleanups_10 != ptr_83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
Cond in fucntion main basic block 38
 ================== possible direct basic block ================= 
from main basic block 35
 ================== possible direct basic block ================= 
from main basic block 39
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (old_chain_70 == 0B)
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (old_chain_70 == 0B)
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
if (old_chain_70 == 0B)
./benchmarks/binutils/leak_6/../include/common.h:135:5: warning: use location
  if (old_chain == NULL)
     ^
if (old_chain_70 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/../include/common.h:135:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
_71 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
_71 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
_71 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_110 = VDEF <.MEM_109>
new_80->next = _82;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_110 = VDEF <.MEM_109>
new_80->next = _82;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_110 = VDEF <.MEM_109>
new_80->next = _82;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->next = _82;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
new_69->next = _71;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
new_69->next = _71;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->next = _71;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
old_chain_81 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
old_chain_81 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
old_chain_81 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
old_chain_81 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = old_chain_81;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = old_chain_81;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_115 = old_chain_81;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_79 = _115;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_79 = _115;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_79 = _115;
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_116 = _79;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_116 = _79;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_116 = _79;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_78 = _116;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_78 = _116;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_78 = _116;
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_117 = _78;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_117 = _78;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_117 = _78;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
cleanup_chain = new_80;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->arg = section_addrs_48;
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->arg = section_addrs_48;
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================
section_addrs_48->num_sections = _61;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:31: warning: use location
   section_addrs->num_sections = sec_num;
                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================
section_addrs_48->num_sections = _61;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:31: warning: use location
   section_addrs->num_sections = sec_num;
                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
new_80->free_arg = 0B;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
new_80->free_arg = 0B;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
new_80->free_arg = 0B;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->free_arg = 0B;
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
new_80->function = free;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
new_80->function = free;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
new_80->function = free;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->function = free;
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_97>
_84 = ptr_83->next;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = ptr_83->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
       *pmy_chain = ptr->next; /* Do this first in case of recursion.  */
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
bb index := 37
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
    free (ptr);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = ptr_83->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:6: warning: use location
     (*ptr->free_arg) (ptr->arg);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_119>
_86 = ptr_83->arg;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = ptr_83->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
       (*ptr->function) (ptr->arg);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_121>
_88 = ptr_83->arg;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = ptr_83->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:4: warning: use location
    printf("%x\n", ptr->arg);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_121>
_89 = __printf_chk (1, "%x\n", _88);
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = __printf_chk (1, "%x\n", _88);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f33dca7f8b8
    type <pointer_type 0x7f33dc5a1c78
        type <record_type 0x7f33dc5a1d20 cleanup BLK
            size <integer_cst 0x7f33dca77f48 constant 256>
            unit size <integer_cst 0x7f33dca93048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5a1d20 fields <field_decl 0x7f33dc5a3390 next> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5a1c78> chain <type_decl 0x7f33dc5a3428 D.3994>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dc5a1e70>>
    var <var_decl 0x7f33dc5ce5a0 new>
    def_stmt new_69 = malloc (32);
    version 69
    ptr-info 0x7f33dc5de0d8>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_119>
_85 = ptr_83->function;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = ptr_83->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
       (*ptr->function) (ptr->arg);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_122>
_90 = ptr_83->free_arg;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = ptr_83->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
       if (ptr->free_arg)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_90 != 0B)
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 != 0B)
./benchmarks/binutils/leak_6/../include/common.h:109:10: warning: use location
       if (ptr->free_arg)
          ^
if (_90 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/../include/common.h:109:10: warning: use location
Cond in fucntion main basic block 35
 ================== possible direct basic block ================= 
from main basic block 36
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = ptr_83->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:6: warning: use location
     (*ptr->free_arg) (ptr->arg);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_102 = VDEF <.MEM_101>
new_69->arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_102 = VDEF <.MEM_101>
new_69->arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->arg = 0B;
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_100>
new_69->free_arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_100>
new_69->free_arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->free_arg = 0B;
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
new_69->function = null_cleanup;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
new_69->function = null_cleanup;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->function = null_cleanup;
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_7>
new_69 = malloc (32);
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_98 = VDEF <.MEM_7>
new_69 = malloc (32);
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69 = malloc (32);
./benchmarks/binutils/leak_6/../include/common.h:125:19: warning: use location
   struct cleanup *new
                   ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f33dca7f8b8
    type <pointer_type 0x7f33dc5a1c78
        type <record_type 0x7f33dc5a1d20 cleanup BLK
            size <integer_cst 0x7f33dca77f48 constant 256>
            unit size <integer_cst 0x7f33dca93048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5a1d20 fields <field_decl 0x7f33dc5a3390 next> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5a1c78> chain <type_decl 0x7f33dc5a3428 D.3994>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dc5a1e70>>
    var <var_decl 0x7f33dc5ce5a0 new>
    def_stmt new_69 = malloc (32);
    version 69
    ptr-info 0x7f33dc5de0d8>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f33dca7f8b8
    type <pointer_type 0x7f33dc5a1c78
        type <record_type 0x7f33dc5a1d20 cleanup BLK
            size <integer_cst 0x7f33dca77f48 constant 256>
            unit size <integer_cst 0x7f33dca93048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5a1d20 fields <field_decl 0x7f33dc5a3390 next> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5a1c78> chain <type_decl 0x7f33dc5a3428 D.3994>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dc5a1e70>>
    var <var_decl 0x7f33dc5ce5a0 new>
    def_stmt new_69 = malloc (32);
    version 69
    ptr-info 0x7f33dc5de0d8>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
if (my_cleanups_10 != ptr_83)
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
  while ((ptr = *pmy_chain) != old_chain)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
    free (ptr);
    ^
if (my_cleanups_10 != ptr_83)
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
  while ((ptr = *pmy_chain) != old_chain)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f33dc5c1360
    type <pointer_type 0x7f33dc5aaf18
        type <record_type 0x7f33dc5aae70 sect_opt TI
            size <integer_cst 0x7f33dca77c30 constant 128>
            unit size <integer_cst 0x7f33dca77c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5aae70 fields <field_decl 0x7f33dc5a3688 name> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5aaf18> chain <type_decl 0x7f33dc5a3720 D.4012>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f33dc5c22d0 sect_opts>
    def_stmt sect_opts_11 = malloc (64);
    version 11
    ptr-info 0x7f33dc5a4f00>
# .MEM_107 = VDEF <.MEM_103>
sect_opts_11 = malloc (64);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
this stmt is child function---realloc-----

 ================== find ================== 
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = newmem_76;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
bb index := 25
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^
if (newmem_76 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 22
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
this stmt is child function---realloc-----

 ================== find ================== 
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_137 = newmem_73;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_28 = _137;
./benchmarks/binutils/leak_6/binutils_leak_6.c:83:18: warning: use location
        sect_opts = ((struct sect_opt *)
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = newmem_73;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = sect_opts_17 + _55;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = sect_opts_17 + _55;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = sect_opts_17 + _51;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = sect_opts_17 + _51;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
val_53 = _52->value;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
val_53 = _52->value;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:37: warning: use location
      sect_opts[section_index].value = arg;
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f33dc5c1360
    type <pointer_type 0x7f33dc5aaf18
        type <record_type 0x7f33dc5aae70 sect_opt TI
            size <integer_cst 0x7f33dca77c30 constant 128>
            unit size <integer_cst 0x7f33dca77c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5aae70 fields <field_decl 0x7f33dc5a3688 name> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5aaf18> chain <type_decl 0x7f33dc5a3720 D.4012>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f33dc5c22d0 sect_opts>
    def_stmt sect_opts_11 = malloc (64);
    version 11
    ptr-info 0x7f33dc5a4f00>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^
if (_42 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^
if (arg_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = sect_opts_17 + _20;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:15: warning: use location
      sect_opts[section_index].value = arg;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = sect_opts_17 + _16;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:15: warning: use location
      sect_opts[section_index].name = ".text";
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:36: warning: use location
      sect_opts[section_index].name = ".text";
                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_103>
sect_opts_11 = malloc (64);
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_107 = VDEF <.MEM_103>
sect_opts_11 = malloc (64);
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
sect_opts_11 = malloc (64);
./benchmarks/binutils/leak_6/binutils_leak_6.c:66:12: warning: use location
  sect_opts = xmalloc (sizeof(struct sect_opt) * num_sect_opts); /* allocation site */
            ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f33dc5c1360
    type <pointer_type 0x7f33dc5aaf18
        type <record_type 0x7f33dc5aae70 sect_opt TI
            size <integer_cst 0x7f33dca77c30 constant 128>
            unit size <integer_cst 0x7f33dca77c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5aae70 fields <field_decl 0x7f33dc5a3688 name> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5aaf18> chain <type_decl 0x7f33dc5a3720 D.4012>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f33dc5c22d0 sect_opts>
    def_stmt sect_opts_11 = malloc (64);
    version 11
    ptr-info 0x7f33dc5a4f00>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f33dc5c1360
    type <pointer_type 0x7f33dc5aaf18
        type <record_type 0x7f33dc5aae70 sect_opt TI
            size <integer_cst 0x7f33dca77c30 constant 128>
            unit size <integer_cst 0x7f33dca77c48 constant 16>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5aae70 fields <field_decl 0x7f33dc5a3688 name> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5aaf18> chain <type_decl 0x7f33dc5a3720 D.4012>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f33dc5c22d0 sect_opts>
    def_stmt sect_opts_11 = malloc (64);
    version 11
    ptr-info 0x7f33dc5a4f00>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
    free (ptr);
    ^
sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
    free (ptr);
    ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_137 = newmem_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
_137 = newmem_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
sect_opts_28 = _137;
./benchmarks/binutils/leak_6/binutils_leak_6.c:83:18: warning: use location
        sect_opts = ((struct sect_opt *)
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_28 = _137;
./benchmarks/binutils/leak_6/binutils_leak_6.c:83:18: warning: use location
        sect_opts = ((struct sect_opt *)
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_74 = newmem_73;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_74 = newmem_73;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_129 = VDEF <.MEM_94>
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_129 = VDEF <.MEM_94>
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_133 = VDEF <.MEM_94>
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_133 = VDEF <.MEM_94>
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f33dca7f900
    type <pointer_type 0x7f33dca920a8
        type <void_type 0x7f33dca8bf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f33dca920a8>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dca97bd0>>
    var <var_decl 0x7f33dc5cebd0 newmem>
    def_stmt newmem_73 = realloc (sect_opts_17, size_72);
    version 73
    ptr-info 0x7f33dc5de120>
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
this stmt is child function---realloc-----

 ================== find ================== 
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = newmem_76;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
bb index := 25
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^
if (newmem_76 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 22
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
this stmt is child function---realloc-----

 ================== find ================== 
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_137 = newmem_73;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_28 = _137;
./benchmarks/binutils/leak_6/binutils_leak_6.c:83:18: warning: use location
        sect_opts = ((struct sect_opt *)
                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = newmem_73;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = sect_opts_17 + _55;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = sect_opts_17 + _55;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = sect_opts_17 + _51;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = sect_opts_17 + _51;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
val_53 = _52->value;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
val_53 = _52->value;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:37: warning: use location
      sect_opts[section_index].value = arg;
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f33dca7f900
    type <pointer_type 0x7f33dca920a8
        type <void_type 0x7f33dca8bf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f33dca920a8>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dca97bd0>>
    var <var_decl 0x7f33dc5cebd0 newmem>
    def_stmt newmem_73 = realloc (sect_opts_17, size_72);
    version 73
    ptr-info 0x7f33dc5de120>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^
if (_42 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^
if (arg_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = sect_opts_17 + _20;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:15: warning: use location
      sect_opts[section_index].value = arg;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = sect_opts_17 + _16;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:15: warning: use location
      sect_opts[section_index].name = ".text";
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:36: warning: use location
      sect_opts[section_index].name = ".text";
                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f33dca7f900
    type <pointer_type 0x7f33dca920a8
        type <void_type 0x7f33dca8bf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f33dca920a8>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dca97bd0>>
    var <var_decl 0x7f33dc5cebd0 newmem>
    def_stmt newmem_73 = realloc (sect_opts_17, size_72);
    version 73
    ptr-info 0x7f33dc5de120>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
    free (ptr);
    ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_137 = newmem_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
_137 = newmem_73;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
sect_opts_28 = _137;
./benchmarks/binutils/leak_6/binutils_leak_6.c:83:18: warning: use location
        sect_opts = ((struct sect_opt *)
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_28 = _137;
./benchmarks/binutils/leak_6/binutils_leak_6.c:83:18: warning: use location
        sect_opts = ((struct sect_opt *)
                  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_74 = newmem_73;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_74 = newmem_73;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_129 = VDEF <.MEM_94>
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_129 = VDEF <.MEM_94>
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_133 = VDEF <.MEM_94>
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_133 = VDEF <.MEM_94>
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f33dc5c7f30
    type <pointer_type 0x7f33dca920a8
        type <void_type 0x7f33dca8bf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f33dca920a8>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dca97bd0>>
    var <var_decl 0x7f33dc5cef30 newmem>
    def_stmt newmem_76 = realloc (sect_opts_17, size_75);
    version 76
    ptr-info 0x7f33dc5de150>
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
this stmt is child function---realloc-----

 ================== find ================== 
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
[40;32m    FIND realloc STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_131 = newmem_76;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
bb index := 25
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^
if (newmem_76 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
Cond in fucntion main basic block 20
 ================== possible direct basic block ================= 
from main basic block 21
 ================== possible direct basic block ================= 
from main basic block 22
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
this stmt is child function---realloc-----

 ================== find ================== 
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
[40;32m    FIND realloc STMT count:2 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = sect_opts_17 + _55;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_56 = sect_opts_17 + _55;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = sect_opts_17 + _51;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_52 = sect_opts_17 + _51;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
val_53 = _52->value;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
val_53 = _52->value;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:37: warning: use location
      sect_opts[section_index].value = arg;
                                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f33dc5c7f30
    type <pointer_type 0x7f33dca920a8
        type <void_type 0x7f33dca8bf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f33dca920a8>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dca97bd0>>
    var <var_decl 0x7f33dc5cef30 newmem>
    def_stmt newmem_76 = realloc (sect_opts_17, size_75);
    version 76
    ptr-info 0x7f33dc5de150>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^
if (_42 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^
if (arg_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21 = sect_opts_17 + _20;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:15: warning: use location
      sect_opts[section_index].value = arg;
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18 = sect_opts_17 + _16;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:15: warning: use location
      sect_opts[section_index].name = ".text";
               ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_18->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:36: warning: use location
      sect_opts[section_index].name = ".text";
                                    ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f33dc5c7f30
    type <pointer_type 0x7f33dca920a8
        type <void_type 0x7f33dca8bf18 void VOID
            align 8 symtab 0 alias set -1 structural equality
            pointer_to_this <pointer_type 0x7f33dca920a8>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dca97bd0>>
    var <var_decl 0x7f33dc5cef30 newmem>
    def_stmt newmem_76 = realloc (sect_opts_17, size_75);
    version 76
    ptr-info 0x7f33dc5de150>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: use location
   newmem = realloc (oldmem, size); /* allocation site */
          ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_131 = newmem_76;
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_41 = _131;
./benchmarks/binutils/leak_6/binutils_leak_6.c:103:20: warning: use location
          sect_opts = ((struct sect_opt *)
                    ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
    free (ptr);
    ^
sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_77 = newmem_76;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   return (newmem);
          ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (newmem_76 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   if (!newmem)
      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_56 = sect_opts_17 + _55;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:32: warning: use location
     const char *sec = sect_opts[i].name;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
_52 = sect_opts_17 + _51;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:32: warning: use location
     const char *val = sect_opts[i].value;
                                ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_95>
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# VUSE <.MEM_94>
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_130 = VDEF <.MEM_129>
newmem_76 = realloc (sect_opts_17, size_75);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_129 = VDEF <.MEM_94>
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_129 = VDEF <.MEM_94>
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_133 = VDEF <.MEM_94>
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_136 = VDEF <.MEM_135>
newmem_73 = realloc (sect_opts_17, size_72);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:10: warning: Use after free error!: free location 
   newmem = realloc (oldmem, size); /* allocation site */
          ^
# .MEM_133 = VDEF <.MEM_94>
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free :2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f33dc5c1dc8
    type <pointer_type 0x7f33dc5ab2a0
        type <record_type 0x7f33dc5ab1f8 section_addr_info BLK
            size <integer_cst 0x7f33dca930a8 constant 192>
            unit size <integer_cst 0x7f33dca93078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5ab1f8 fields <field_decl 0x7f33dc5a3a18 num_sections> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5ab2a0> chain <type_decl 0x7f33dc5a3ab0 D.4018>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f33dc5c2240 section_addrs>
    def_stmt section_addrs_48 = malloc (24);
    version 48
    ptr-info 0x7f33dc5de018>
# .MEM_108 = VDEF <.MEM_94>
section_addrs_48 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->arg = section_addrs_48;
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->arg = section_addrs_48;
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
cleanup_chain = new_80;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
old_chain_70 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
old_chain_70 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
old_chain_70 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = old_chain_70;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = old_chain_70;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_104 = old_chain_70;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _104;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _104;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_68 = _104;
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_105 = _68;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_105 = _68;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_105 = _68;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_67 = _105;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_67 = _105;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_67 = _105;
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = _67;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = _67;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_106 = _67;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
my_cleanups_10 = _106;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
my_cleanups_10 = _106;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
my_cleanups_10 = _106;
./benchmarks/binutils/leak_6/binutils_leak_6.c:59:18: warning: use location
  struct cleanup *my_cleanups = make_cleanup (null_cleanup, NULL);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (my_cleanups_10 != ptr_83)
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
  while ((ptr = *pmy_chain) != old_chain)
        ^
if (my_cleanups_10 != ptr_83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
Cond in fucntion main basic block 38
 ================== possible direct basic block ================= 
from main basic block 35
 ================== possible direct basic block ================= 
from main basic block 39
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (old_chain_70 == 0B)
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (old_chain_70 == 0B)
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
if (old_chain_70 == 0B)
./benchmarks/binutils/leak_6/../include/common.h:135:5: warning: use location
  if (old_chain == NULL)
     ^
if (old_chain_70 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/../include/common.h:135:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
_71 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
_71 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
_71 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
new_69->next = _71;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
new_69->next = _71;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->next = _71;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
old_chain_81 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
old_chain_81 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
old_chain_81 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
old_chain_81 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = old_chain_81;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = old_chain_81;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_115 = old_chain_81;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_79 = _115;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_79 = _115;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_79 = _115;
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_116 = _79;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_116 = _79;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_116 = _79;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_78 = _116;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_78 = _116;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_78 = _116;
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_117 = _78;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_117 = _78;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_117 = _78;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_82 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_82 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_82 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
_82 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_110 = VDEF <.MEM_109>
new_80->next = _82;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_110 = VDEF <.MEM_109>
new_80->next = _82;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_110 = VDEF <.MEM_109>
new_80->next = _82;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->next = _82;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_97>
_84 = ptr_83->next;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = ptr_83->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
       *pmy_chain = ptr->next; /* Do this first in case of recursion.  */
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
bb index := 37
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
    free (ptr);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = ptr_83->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:6: warning: use location
     (*ptr->free_arg) (ptr->arg);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_119>
_86 = ptr_83->arg;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = ptr_83->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
       (*ptr->function) (ptr->arg);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_121>
_88 = ptr_83->arg;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = ptr_83->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:4: warning: use location
    printf("%x\n", ptr->arg);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_121>
_89 = __printf_chk (1, "%x\n", _88);
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = __printf_chk (1, "%x\n", _88);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f33dc5c1dc8
    type <pointer_type 0x7f33dc5ab2a0
        type <record_type 0x7f33dc5ab1f8 section_addr_info BLK
            size <integer_cst 0x7f33dca930a8 constant 192>
            unit size <integer_cst 0x7f33dca93078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5ab1f8 fields <field_decl 0x7f33dc5a3a18 num_sections> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5ab2a0> chain <type_decl 0x7f33dc5a3ab0 D.4018>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f33dc5c2240 section_addrs>
    def_stmt section_addrs_48 = malloc (24);
    version 48
    ptr-info 0x7f33dc5de018>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_119>
_85 = ptr_83->function;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = ptr_83->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
       (*ptr->function) (ptr->arg);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_122>
_90 = ptr_83->free_arg;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = ptr_83->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
       if (ptr->free_arg)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_90 != 0B)
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 != 0B)
./benchmarks/binutils/leak_6/../include/common.h:109:10: warning: use location
       if (ptr->free_arg)
          ^
if (_90 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/../include/common.h:109:10: warning: use location
Cond in fucntion main basic block 35
 ================== possible direct basic block ================= 
from main basic block 36
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = ptr_83->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:6: warning: use location
     (*ptr->free_arg) (ptr->arg);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_102 = VDEF <.MEM_101>
new_69->arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_102 = VDEF <.MEM_101>
new_69->arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->arg = 0B;
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_100>
new_69->free_arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_100>
new_69->free_arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->free_arg = 0B;
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
new_69->function = null_cleanup;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
new_69->function = null_cleanup;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->function = null_cleanup;
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
new_80->free_arg = 0B;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
new_80->free_arg = 0B;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
new_80->free_arg = 0B;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->free_arg = 0B;
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
new_80->function = free;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
new_80->function = free;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
new_80->function = free;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->function = free;
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================
section_addrs_48->num_sections = _61;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:31: warning: use location
   section_addrs->num_sections = sec_num;
                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================
section_addrs_48->num_sections = _61;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:31: warning: use location
   section_addrs->num_sections = sec_num;
                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_108 = VDEF <.MEM_94>
section_addrs_48 = malloc (24);
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_108 = VDEF <.MEM_94>
section_addrs_48 = malloc (24);
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_108 = VDEF <.MEM_94>
section_addrs_48 = malloc (24);
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
section_addrs_48 = malloc (24);
./benchmarks/binutils/leak_6/binutils_leak_6.c:121:17: warning: use location
   section_addrs = malloc (sizeof(struct section_addr_info));
                 ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f33dc5c1dc8
    type <pointer_type 0x7f33dc5ab2a0
        type <record_type 0x7f33dc5ab1f8 section_addr_info BLK
            size <integer_cst 0x7f33dca930a8 constant 192>
            unit size <integer_cst 0x7f33dca93078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5ab1f8 fields <field_decl 0x7f33dc5a3a18 num_sections> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5ab2a0> chain <type_decl 0x7f33dc5a3ab0 D.4018>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f33dc5c2240 section_addrs>
    def_stmt section_addrs_48 = malloc (24);
    version 48
    ptr-info 0x7f33dc5de018>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f33dc5c1dc8
    type <pointer_type 0x7f33dc5ab2a0
        type <record_type 0x7f33dc5ab1f8 section_addr_info BLK
            size <integer_cst 0x7f33dca930a8 constant 192>
            unit size <integer_cst 0x7f33dca93078 constant 24>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5ab1f8 fields <field_decl 0x7f33dc5a3a18 num_sections> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5ab2a0> chain <type_decl 0x7f33dc5a3ab0 D.4018>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f33dc5c2240 section_addrs>
    def_stmt section_addrs_48 = malloc (24);
    version 48
    ptr-info 0x7f33dc5de018>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
if (my_cleanups_10 != ptr_83)
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
  while ((ptr = *pmy_chain) != old_chain)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
    free (ptr);
    ^
if (my_cleanups_10 != ptr_83)
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
  while ((ptr = *pmy_chain) != old_chain)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================
 <ssa_name 0x7f33dc5d6090
    type <pointer_type 0x7f33dc5a1c78
        type <record_type 0x7f33dc5a1d20 cleanup BLK
            size <integer_cst 0x7f33dca77f48 constant 256>
            unit size <integer_cst 0x7f33dca93048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5a1d20 fields <field_decl 0x7f33dc5a3390 next> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5a1c78> chain <type_decl 0x7f33dc5a3428 D.3994>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dc5a1e70>>
    var <var_decl 0x7f33dc5d57e0 new>
    def_stmt new_80 = malloc (32);
    version 80
    ptr-info 0x7f33dc5de1b0>
# .MEM_109 = VDEF <.MEM_108>
new_80 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
cleanup_chain = new_80;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_114 = VDEF <.MEM_113>
cleanup_chain = new_80;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
cleanup_chain = new_80;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
   *pmy_chain = new;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
old_chain_70 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
old_chain_70 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
old_chain_70 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = old_chain_70;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_104 = old_chain_70;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_104 = old_chain_70;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _104;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_68 = _104;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_68 = _104;
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_105 = _68;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_105 = _68;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_105 = _68;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_67 = _105;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_67 = _105;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_67 = _105;
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = _67;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_106 = _67;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
_106 = _67;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
my_cleanups_10 = _106;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
my_cleanups_10 = _106;
bb index := 4
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 39

======================================================================
my_cleanups_10 = _106;
./benchmarks/binutils/leak_6/binutils_leak_6.c:59:18: warning: use location
  struct cleanup *my_cleanups = make_cleanup (null_cleanup, NULL);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (my_cleanups_10 != ptr_83)
bb index := 38
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (my_cleanups_10 != ptr_83)
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
  while ((ptr = *pmy_chain) != old_chain)
        ^
if (my_cleanups_10 != ptr_83)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
Cond in fucntion main basic block 38
 ================== possible direct basic block ================= 
from main basic block 35
 ================== possible direct basic block ================= 
from main basic block 39
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (old_chain_70 == 0B)
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (old_chain_70 == 0B)
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
if (old_chain_70 == 0B)
./benchmarks/binutils/leak_6/../include/common.h:135:5: warning: use location
  if (old_chain == NULL)
     ^
if (old_chain_70 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/../include/common.h:135:5: warning: use location
Cond in fucntion main basic block 2
 ================== possible direct basic block ================= 
from main basic block 3
 ================== possible direct basic block ================= 
from main basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
_71 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
_71 = cleanup_chain;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
_71 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
new_69->next = _71;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_99 = VDEF <.MEM_98>
new_69->next = _71;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->next = _71;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
old_chain_81 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
old_chain_81 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
old_chain_81 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
old_chain_81 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
   struct cleanup *old_chain = *pmy_chain;
                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = old_chain_81;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_115 = old_chain_81;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_115 = old_chain_81;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_79 = _115;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_79 = _115;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_79 = _115;
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_116 = _79;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_116 = _79;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_116 = _79;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
_78 = _116;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_78 = _116;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_78 = _116;
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
   return make_my_cleanup (&cleanup_chain, function, arg);
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_117 = _78;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_117 = _78;
bb index := 31
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 31 ,possiable got to succ := 39

======================================================================
_117 = _78;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_82 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_82 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_109>
_82 = cleanup_chain;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
_82 = cleanup_chain;
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
   new->next = *pmy_chain;
               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_110 = VDEF <.MEM_109>
new_80->next = _82;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_110 = VDEF <.MEM_109>
new_80->next = _82;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_110 = VDEF <.MEM_109>
new_80->next = _82;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->next = _82;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
   new->next = *pmy_chain;
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_97>
_84 = ptr_83->next;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_84 = ptr_83->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
       *pmy_chain = ptr->next; /* Do this first in case of recursion.  */
                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
bb index := 37
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
    free (ptr);
    ^
this stmt is child function---free-----

 ================== find ================== 
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find ================== 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_92 = ptr_83->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:6: warning: use location
     (*ptr->free_arg) (ptr->arg);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_119>
_86 = ptr_83->arg;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_86 = ptr_83->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
       (*ptr->function) (ptr->arg);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_121>
_88 = ptr_83->arg;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_88 = ptr_83->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:4: warning: use location
    printf("%x\n", ptr->arg);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_122 = VDEF <.MEM_121>
_89 = __printf_chk (1, "%x\n", _88);
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_89 = __printf_chk (1, "%x\n", _88);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f33dc5d6090
    type <pointer_type 0x7f33dc5a1c78
        type <record_type 0x7f33dc5a1d20 cleanup BLK
            size <integer_cst 0x7f33dca77f48 constant 256>
            unit size <integer_cst 0x7f33dca93048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5a1d20 fields <field_decl 0x7f33dc5a3390 next> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5a1c78> chain <type_decl 0x7f33dc5a3428 D.3994>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dc5a1e70>>
    var <var_decl 0x7f33dc5d57e0 new>
    def_stmt new_80 = malloc (32);
    version 80
    ptr-info 0x7f33dc5de1b0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_119>
_85 = ptr_83->function;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_85 = ptr_83->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
       (*ptr->function) (ptr->arg);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_122>
_90 = ptr_83->free_arg;
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_90 = ptr_83->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
       if (ptr->free_arg)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_90 != 0B)
bb index := 35
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_90 != 0B)
./benchmarks/binutils/leak_6/../include/common.h:109:10: warning: use location
       if (ptr->free_arg)
          ^
if (_90 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/../include/common.h:109:10: warning: use location
Cond in fucntion main basic block 35
 ================== possible direct basic block ================= 
from main basic block 36
 ================== possible direct basic block ================= 
from main basic block 37
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_91 = ptr_83->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:6: warning: use location
     (*ptr->free_arg) (ptr->arg);
      ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_113 = VDEF <.MEM_112>
new_80->arg = section_addrs_48;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->arg = section_addrs_48;
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================
section_addrs_48->num_sections = _61;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:31: warning: use location
   section_addrs->num_sections = sec_num;
                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_118 = VDEF <.MEM_95>
section_addrs_48->num_sections = _61;
bb index := 34
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 39

======================================================================
section_addrs_48->num_sections = _61;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:31: warning: use location
   section_addrs->num_sections = sec_num;
                               ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_125 = VDEF <.MEM_95>
section_addrs_48->other[sec_num_58].name = sec_57;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_48->other[sec_num_58].name = sec_57;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:40: warning: use location
     section_addrs->other[sec_num].name = (char *) sec;
                                        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
sec_57 = _56->name;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_57 = _56->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:17: warning: use location
     const char *sec = sect_opts[i].name;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_102 = VDEF <.MEM_101>
new_69->arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_102 = VDEF <.MEM_101>
new_69->arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->arg = 0B;
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
   new->arg = arg;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_100>
new_69->free_arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_100>
new_69->free_arg = 0B;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->free_arg = 0B;
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
new_69->function = null_cleanup;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_100 = VDEF <.MEM_99>
new_69->function = null_cleanup;
bb index := 2
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 39

======================================================================
new_69->function = null_cleanup;
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
new_80->free_arg = 0B;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
new_80->free_arg = 0B;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_111>
new_80->free_arg = 0B;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->free_arg = 0B;
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
   new->free_arg = free_arg;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
new_80->function = free;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
new_80->function = free;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_111 = VDEF <.MEM_110>
new_80->function = free;
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80->function = free;
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
   new->function = function;
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_109 = VDEF <.MEM_108>
new_80 = malloc (32);
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_109 = VDEF <.MEM_108>
new_80 = malloc (32);
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_109 = VDEF <.MEM_108>
new_80 = malloc (32);
bb index := 29
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 29 ,possiable got to succ := 39

======================================================================
new_80 = malloc (32);
./benchmarks/binutils/leak_6/../include/common.h:125:19: warning: use location
   struct cleanup *new
                   ^
this stmt is child function---malloc-----

 ================== trace ================== 
 <ssa_name 0x7f33dc5d6090
    type <pointer_type 0x7f33dc5a1c78
        type <record_type 0x7f33dc5a1d20 cleanup BLK
            size <integer_cst 0x7f33dca77f48 constant 256>
            unit size <integer_cst 0x7f33dca93048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5a1d20 fields <field_decl 0x7f33dc5a3390 next> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5a1c78> chain <type_decl 0x7f33dc5a3428 D.3994>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dc5a1e70>>
    var <var_decl 0x7f33dc5d57e0 new>
    def_stmt new_80 = malloc (32);
    version 80
    ptr-info 0x7f33dc5de1b0>
trace fucntion name:malloc 

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f33dc5d6090
    type <pointer_type 0x7f33dc5a1c78
        type <record_type 0x7f33dc5a1d20 cleanup BLK
            size <integer_cst 0x7f33dca77f48 constant 256>
            unit size <integer_cst 0x7f33dca93048 constant 32>
            align 64 symtab 0 alias set -1 canonical type 0x7f33dc5a1d20 fields <field_decl 0x7f33dc5a3390 next> context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f33dc5a1c78> chain <type_decl 0x7f33dc5a3428 D.3994>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality
        pointer_to_this <pointer_type 0x7f33dc5a1e70>>
    var <var_decl 0x7f33dc5d57e0 new>
    def_stmt new_80 = malloc (32);
    version 80
    ptr-info 0x7f33dc5de1b0>
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: use location
    free (ptr);
    ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
if (my_cleanups_10 != ptr_83)
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
  while ((ptr = *pmy_chain) != old_chain)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_124 = VDEF <.MEM_96>
free (ptr_83);
./benchmarks/binutils/leak_6/../include/common.h:112:4: warning: Use after free error!: free location 
    free (ptr);
    ^
if (my_cleanups_10 != ptr_83)
./benchmarks/binutils/leak_6/../include/common.h:103:8: warning: use location
  while ((ptr = *pmy_chain) != old_chain)
        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================


dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f33dc5a4e70 type <integer_type 0x7f33dca8b7e0 long unsigned int> constant 32>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f33dc5a4cc0 type <integer_type 0x7f33dc5a1498 size_t> constant 64>

dot graph START

======================================================================
 <ssa_name 0x7f33dc5c1678
    type <pointer_type 0x7f33dc5a1930
        type <integer_type 0x7f33dc5a1888 char public string-flag QI
            size <integer_cst 0x7f33dca77cd8 constant 8>
            unit size <integer_cst 0x7f33dca77cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f33dca8b3f0 precision 8 min <integer_cst 0x7f33dc5a4198 -128> max <integer_cst 0x7f33dc5a4180 127>
            pointer_to_this <pointer_type 0x7f33dc5a1930>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f33dc5a19d8>>
    var <var_decl 0x7f33dc5bbea0 arg>
    def_stmt arg_22 = PHI <arg_12(4), arg_47(25)>
    version 22
    ptr-info 0x7f33dc5a4f78>
arg_22 = PHI <arg_12(4), arg_47(25)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_42 = strcmp (arg_22, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:15: warning: use location
      else if (strcmp (arg, "-s") == 0)
               ^
this stmt is child function---strcmp-----

 ================== trace ================== 
 <ssa_name 0x7f33dc5c1678
    type <pointer_type 0x7f33dc5a1930
        type <integer_type 0x7f33dc5a1888 char public string-flag QI
            size <integer_cst 0x7f33dca77cd8 constant 8>
            unit size <integer_cst 0x7f33dca77cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f33dca8b3f0 precision 8 min <integer_cst 0x7f33dc5a4198 -128> max <integer_cst 0x7f33dc5a4180 127>
            pointer_to_this <pointer_type 0x7f33dc5a1930>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f33dc5a19d8>>
    var <var_decl 0x7f33dc5bbea0 arg>
    def_stmt arg_22 = PHI <arg_12(4), arg_47(25)>
    version 22
    ptr-info 0x7f33dc5a4f78>
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_42 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
      else if (strcmp (arg, "-s") == 0)
              ^
if (_42 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:14: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 24
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_22 != 0B)
bb index := 26
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_22 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
  for (arg = args[0]; arg != NULL; arg = args[++argcnt])
  ^
if (arg_22 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:2: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 5
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_36->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:39: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
val_53 = _52->value;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_95>
val_53 = _52->value;
bb index := 32
# VUSE <.MEM_9>
return 0;
<built-in>: warning: use location
beacuse in succ := 39 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 39

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
val_53 = _52->value;
./benchmarks/binutils/leak_6/binutils_leak_6.c:126:17: warning: use location
     const char *val = sect_opts[i].value;
                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_32->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:39: warning: use location
        sect_opts[section_index].value = arg;
                                       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_21->value = arg_22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:37: warning: use location
      sect_opts[section_index].value = arg;
                                     ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f33dc5c1678
    type <pointer_type 0x7f33dc5a1930
        type <integer_type 0x7f33dc5a1888 char public string-flag QI
            size <integer_cst 0x7f33dca77cd8 constant 8>
            unit size <integer_cst 0x7f33dca77cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f33dca8b3f0 precision 8 min <integer_cst 0x7f33dc5a4198 -128> max <integer_cst 0x7f33dc5a4180 127>
            pointer_to_this <pointer_type 0x7f33dc5a1930>>
        public unsigned DI
        size <integer_cst 0x7f33dca77be8 constant 64>
        unit size <integer_cst 0x7f33dca77c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f33dca82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f33dc5a19d8>>
    var <var_decl 0x7f33dc5bbea0 arg>
    def_stmt arg_22 = PHI <arg_12(4), arg_47(25)>
    version 22
    ptr-info 0x7f33dc5a4f78>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f33dc5a4d98 type <integer_type 0x7f33dca8b7e0 long unsigned int> constant 24>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f33dca77f90 type <integer_type 0x7f33dca8b5e8 int> constant 1>

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f33dca77f90 type <integer_type 0x7f33dca8b5e8 int> constant 1>
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:null_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
return;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [7.51%]:
args[0] = "prog";
args[1] = "v";
args[2] = "-s";
args[3] = "idx";
args[4] = "addr";
args[5] = 0B;
new_69 = malloc (32);
old_chain_70 = cleanup_chain;
_71 = cleanup_chain;
new_69->next = _71;
new_69->function = null_cleanup;
new_69->free_arg = 0B;
new_69->arg = 0B;
cleanup_chain = new_69;
if (old_chain_70 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.00%]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [7.51%]:
_104 = old_chain_70;
_68 = _104;
_105 = _68;
_67 = _105;
_106 = _67;
my_cleanups_10 = _106;
sect_opts_11 = malloc (64);
arg_12 = MEM[(char * *)&args];
goto <bb 26>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [92.50%]:
if (argcnt_13 == 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [30.52%]:
// predicted unlikely by continue predictor.
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [61.98%]:
if (argcnt_13 == 1)
  goto <bb 8>; [34.00%]
else
  goto <bb 14>; [66.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [21.07%]:
_15 = (long unsigned int) section_index_14;
_16 = _15 * 16;
_18 = sect_opts_17 + _16;
_18->name = ".text";
_19 = (long unsigned int) section_index_14;
_20 = _19 * 16;
_21 = sect_opts_17 + _20;
_21->value = arg_22;
section_index_23 = section_index_14 + 1;
_24 = (long unsigned int) section_index_23;
if (_24 >= num_sect_opts_25)
  goto <bb 9>; [33.00%]
else
  goto <bb 25>; [67.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [6.95%]:
num_sect_opts_26 = num_sect_opts_25 * 2;
_27 = num_sect_opts_26 * 16;
if (_27 == 0)
  goto <bb 10>; [50.00%]
else
  goto <bb 11>; [50.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [3.48%]:

=======is loop:1=========

 bb index 11 
<bb 11> [6.95%]:
# size_72 = PHI <_27(9), 1(10)>
newmem_73 = realloc (sect_opts_17, size_72);
if (newmem_73 == 0B)
  goto <bb 12>; [0.04%]
else
  goto <bb 13>; [99.96%]

=======is loop:0=========

 bb index 12 
<bb 12> [0.00%]:
exit (1);

=======is loop:1=========

 bb index 13 
<bb 13> [6.95%]:
_74 = newmem_73;
_137 = newmem_73;
sect_opts_28 = _137;
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [40.90%]:
if (expecting_sec_name_29 != 0)
  goto <bb 15>; [50.00%]
else
  goto <bb 16>; [50.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [20.45%]:
_30 = (long unsigned int) section_index_14;
_31 = _30 * 16;
_32 = sect_opts_17 + _31;
_32->value = arg_22;
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 16 
<bb 16> [20.45%]:
if (expecting_sec_addr_33 != 0)
  goto <bb 17>; [50.00%]
else
  goto <bb 23>; [50.00%]

=======is loop:1=========

 bb index 17 
<bb 17> [10.23%]:
_34 = (long unsigned int) section_index_14;
_35 = _34 * 16;
_36 = sect_opts_17 + _35;
_36->value = arg_22;
section_index_37 = section_index_14 + 1;
_38 = (long unsigned int) section_index_37;
if (num_sect_opts_25 <= _38)
  goto <bb 18>; [33.00%]
else
  goto <bb 25>; [67.00%]

=======is loop:1=========

 bb index 18 
<bb 18> [3.37%]:
num_sect_opts_39 = num_sect_opts_25 * 2;
_40 = num_sect_opts_39 * 16;
if (_40 == 0)
  goto <bb 19>; [50.00%]
else
  goto <bb 20>; [50.00%]

=======is loop:1=========

 bb index 19 
<bb 19> [1.69%]:

=======is loop:1=========

 bb index 20 
<bb 20> [3.37%]:
# size_75 = PHI <_40(18), 1(19)>
newmem_76 = realloc (sect_opts_17, size_75);
if (newmem_76 == 0B)
  goto <bb 21>; [0.04%]
else
  goto <bb 22>; [99.96%]

=======is loop:0=========

 bb index 21 
<bb 21> [0.00%]:
exit (1);

=======is loop:1=========

 bb index 22 
<bb 22> [3.37%]:
_77 = newmem_76;
_131 = newmem_76;
sect_opts_41 = _131;
goto <bb 25>; [100.00%]

=======is loop:1=========

 bb index 23 
<bb 23> [10.23%]:
_42 = strcmp (arg_22, "-s");
if (_42 == 0)
  goto <bb 25>; [99.96%]
else
  goto <bb 24>; [0.04%]

=======is loop:0=========

 bb index 24 
<bb 24> [0.00%]:
exit (1);

=======is loop:1=========

 bb index 25 
<bb 25> [92.49%]:
# section_index_62 = PHI <section_index_14(6), section_index_23(8), section_index_23(13), section_index_14(15), section_index_37(17), section_index_37(22), section_index_14(23)>
# expecting_sec_addr_63 = PHI <expecting_sec_addr_33(6), expecting_sec_addr_33(8), expecting_sec_addr_33(13), 0(15), 0(17), 0(22), 1(23)>
# expecting_sec_name_64 = PHI <expecting_sec_name_29(6), expecting_sec_name_29(8), expecting_sec_name_29(13), expecting_sec_name_29(15), expecting_sec_name_29(17), expecting_sec_name_29(22), 1(23)>
# sect_opts_65 = PHI <sect_opts_17(6), sect_opts_17(8), sect_opts_28(13), sect_opts_17(15), sect_opts_17(17), sect_opts_41(22), sect_opts_17(23)>
# num_sect_opts_66 = PHI <num_sect_opts_25(6), num_sect_opts_25(8), num_sect_opts_26(13), num_sect_opts_25(15), num_sect_opts_25(17), num_sect_opts_39(22), num_sect_opts_25(23)>
argcnt_43 = argcnt_13 + 1;
_44 = (long unsigned int) argcnt_43;
_45 = _44 * 8;
_46 = &args + _45;
arg_47 = *_46;

=======is loop:1=========

 bb index 26 
<bb 26> [100.00%]:
# section_index_14 = PHI <0(4), section_index_62(25)>
# arg_22 = PHI <arg_12(4), arg_47(25)>
# expecting_sec_addr_33 = PHI <0(4), expecting_sec_addr_63(25)>
# expecting_sec_name_29 = PHI <0(4), expecting_sec_name_64(25)>
# argcnt_13 = PHI <0(4), argcnt_43(25)>
# sect_opts_17 = PHI <sect_opts_11(4), sect_opts_65(25)>
# num_sect_opts_25 = PHI <4(4), num_sect_opts_66(25)>
if (arg_22 != 0B)
  goto <bb 5>; [92.50%]
else
  goto <bb 27>; [7.50%]

=======is loop:0=========

 bb index 27 
<bb 27> [7.50%]:
if (section_index_14 <= 0)
  goto <bb 28>; [0.04%]
else
  goto <bb 29>; [99.96%]

=======is loop:0=========

 bb index 28 
<bb 28> [0.00%]:
exit (1);

=======is loop:0=========

 bb index 29 
<bb 29> [7.50%]:
section_addrs_48 = malloc (24);
new_80 = malloc (32);
old_chain_81 = cleanup_chain;
_82 = cleanup_chain;
new_80->next = _82;
new_80->function = free;
new_80->free_arg = 0B;
new_80->arg = section_addrs_48;
cleanup_chain = new_80;
if (old_chain_81 == 0B)
  goto <bb 30>; [0.04%]
else
  goto <bb 31>; [99.96%]

=======is loop:0=========

 bb index 30 
<bb 30> [0.00%]:
exit (1);

=======is loop:0=========

 bb index 31 
<bb 31> [7.49%]:
_115 = old_chain_81;
_79 = _115;
_116 = _79;
_78 = _116;
_117 = _78;
goto <bb 33>; [100.00%]

=======is loop:1=========

 bb index 32 
<bb 32> [42.47%]:
_50 = (long unsigned int) i_49;
_51 = _50 * 16;
_52 = sect_opts_17 + _51;
val_53 = _52->value;
_54 = (long unsigned int) i_49;
_55 = _54 * 16;
_56 = sect_opts_17 + _55;
sec_57 = _56->name;
section_addrs_48->other[sec_num_58].name = sec_57;
sec_num_59 = sec_num_58 + 1;
i_60 = i_49 + 1;

=======is loop:1=========

 bb index 33 
<bb 33> [49.96%]:
# sec_num_58 = PHI <0(31), sec_num_59(32)>
# i_49 = PHI <0(31), i_60(32)>
if (section_index_14 > i_49)
  goto <bb 32>; [85.00%]
else
  goto <bb 34>; [15.00%]

=======is loop:0=========

 bb index 34 
<bb 34> [7.49%]:
_61 = (long unsigned int) sec_num_58;
section_addrs_48->num_sections = _61;
goto <bb 38>; [100.00%]

=======is loop:1=========

 bb index 35 
<bb 35> [42.47%]:
_84 = ptr_83->next;
cleanup_chain = _84;
_85 = ptr_83->function;
_86 = ptr_83->arg;
_85 (_86);
_87 = __printf_chk (1, "cleanup!!!!! =========\n");
_88 = ptr_83->arg;
_89 = __printf_chk (1, "%x\n", _88);
_90 = ptr_83->free_arg;
if (_90 != 0B)
  goto <bb 36>; [93.48%]
else
  goto <bb 37>; [6.52%]

=======is loop:1=========

 bb index 36 
<bb 36> [39.70%]:
_91 = ptr_83->free_arg;
_92 = ptr_83->arg;
_91 (_92);

=======is loop:1=========

 bb index 37 
<bb 37> [42.47%]:
free (ptr_83);

=======is loop:1=========

 bb index 38 
<bb 38> [49.96%]:
ptr_83 = cleanup_chain;
if (my_cleanups_10 != ptr_83)
  goto <bb 35>; [85.00%]
else
  goto <bb 39>; [15.00%]

=======is loop:0=========

 bb index 39 
<bb 39> [7.49%]:
args ={v} {CLOBBER};
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 7 [0m
[40;34m    used_stmt array stack totalsize of : 5680 [0m
[40;34m    collect time: : 0.000775 s [0m
[40;34m    algorithm time: 0.042148 s [0m
[40;34m    gimple stmt count : : 129 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
