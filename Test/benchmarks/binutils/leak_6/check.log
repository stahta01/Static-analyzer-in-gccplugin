../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/leak_6/binutils_leak_6.c: In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: implicit declaration of function ‘strcmp’ [-Wimplicit-function-declaration]
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^~~~~~
./benchmarks/binutils/leak_6/binutils_leak_6.c:8:1: note: include ‘<string.h>’ or provide a declaration of ‘strcmp’
    7 | #include "../include/vec.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/leak_6/binutils_leak_6.c: In function ‘main’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:149:33: warning: passing argument 1 of ‘add_symbol_file_command’ from incompatible pointer type [-Wincompatible-pointer-types]
  149 |         add_symbol_file_command(args);
      |                                 ^~~~
      |                                 |
      |                                 const char **
./benchmarks/binutils/leak_6/binutils_leak_6.c:49:33: note: expected ‘char **’ but argument is of type ‘const char **’
   49 | add_symbol_file_command (char **args)
      |                          ~~~~~~~^~~~

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 47%)
 phase parsing                      :   0.01 ( 50%)   0.03 (100%)   0.04 ( 80%)  1198k ( 43%)
 phase opt and generate             :   0.01 ( 50%)   0.00 (  0%)   0.01 ( 20%)   253k (  9%)
 callgraph construction             :   0.01 ( 50%)   0.00 (  0%)   0.00 (  0%)    21k (  1%)
 callgraph ipa passes               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)   140k (  5%)
 preprocessing                      :   0.00 (  0%)   0.00 (  0%)   0.02 ( 40%)   464k ( 17%)
 lexical analysis                   :   0.01 ( 50%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 parser (global)                    :   0.00 (  0%)   0.03 (100%)   0.02 ( 40%)   593k ( 22%)
 tree CFG cleanup                   :   0.00 (  0%)   0.00 (  0%)   0.01 ( 20%)     0  (  0%)
 TOTAL                              :   0.02          0.03          0.05         2760k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 97%)
 TOTAL                              :   0.00          0.00          0.00         2222k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
addr_expraddr_expraddr_expraddr_expraddr_expr------add_symbol_file_command--
=======node_fun:add_symbol_file_command=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------make_cleanup--
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 4 
 	next_branch :=18
node:= 5 
 	next_branch :=6
	next_branch :=7
node:= 6 
 	next_branch :=17
node:= 7 
 	next_branch :=8
	next_branch :=10
node:= 8 
 	next_branch :=9
	next_branch :=17
node:= 9 
 	next_branch :=17
addr_expraddr_expraddr_expraddr_expraddr_expr------xrealloc--
node:= 10 
 	next_branch :=11
	next_branch :=12
node:= 11 
 	next_branch :=17
node:= 12 
 	next_branch :=13
	next_branch :=15
node:= 13 
 	next_branch :=14
	next_branch :=17
node:= 14 
 	next_branch :=17
addr_expraddr_expraddr_expraddr_expraddr_expr------xrealloc--
node:= 15 
 	next_branch :=17
	next_branch :=16
addr_expraddr_expraddr_expraddr_expraddr_expr------strcmp--
node:= 16 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 17 
 	next_branch :=18
node:= 18 
 	next_branch :=5
	next_branch :=19
node:= 19 
 	next_branch :=20
	next_branch :=21
node:= 20 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
node:= 21 
 	next_branch :=23
addr_expraddr_expraddr_expraddr_expraddr_expr------make_cleanup--
node:= 22 
 	next_branch :=23
node:= 23 
 	next_branch :=22
	next_branch :=24
addr_expraddr_expraddr_expraddr_expraddr_expr------do_cleanups--
=======node_fun:xrealloc=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
=======node_fun:null_cleanup=========
=======node_fun:make_cleanup=========
addr_expraddr_expraddr_expraddr_expraddr_expr------make_my_cleanup--
=======node_fun:make_my_cleanup=========
addr_expraddr_expraddr_expraddr_expraddr_expr------make_my_cleanup2--
=======node_fun:make_my_cleanup2=========
node:= 2 
 	next_branch :=3
	next_branch :=4
node:= 3 
 addr_expraddr_expraddr_expraddr_expraddr_expr------exit--
=======node_fun:do_cleanups=========
addr_expraddr_expraddr_expraddr_expraddr_expr------do_my_cleanups--
=======node_fun:do_my_cleanups=========
node:= 2 
 	next_branch :=6
node:= 3 
 	next_branch :=4
	next_branch :=5
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_puts--
node:= 4 
 	next_branch :=5
node:= 5 
 	next_branch :=6
node:= 6 
 	next_branch :=3
	next_branch :=7
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 27 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
args[0] = "prog";
# .MEM_3 = VDEF <.MEM_2>
args[1] = "v";
# .MEM_4 = VDEF <.MEM_3>
args[2] = "-s";
# .MEM_5 = VDEF <.MEM_4>
args[3] = "idx";
# .MEM_6 = VDEF <.MEM_5>
args[4] = "addr";
# .MEM_7 = VDEF <.MEM_6>
args[5] = 0B;
# .MEM_8 = VDEF <.MEM_7>
add_symbol_file_command (&args);
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
# .MEM_80 = VDEF <.MEM_75>
section_addrs_50 = malloc (24);
# .MEM_81 = VDEF <.MEM_80>
make_cleanup (free, section_addrs_50);
# .MEM_83 = VDEF <.MEM_82>
do_cleanups (my_cleanups_44);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
add_symbol_file_command (&args);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
========================================================
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
=============== *this point analyzable =================
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
========================================================
=============== *this point analyzable =================
sect_opts_46 = malloc (64);
========================================================
=============== *this point analyzable =================
sect_opts_71 = xrealloc (sect_opts_36, _8);
========================================================
=============== *this point analyzable =================
sect_opts_71 = xrealloc (sect_opts_36, _8);
========================================================
=============== *this point analyzable =================
sect_opts_71 = xrealloc (sect_opts_36, _8);
========================================================
=============== *this point analyzable =================
sect_opts_64 = xrealloc (sect_opts_36, _16);
========================================================
=============== *this point analyzable =================
sect_opts_64 = xrealloc (sect_opts_36, _16);
========================================================
=============== *this point analyzable =================
_17 = strcmp (arg_28, "-s");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_17 = strcmp (arg_28, "-s");
========================================================
=============== *this point analyzable =================
_17 = strcmp (arg_28, "-s");
========================================================
=============== *this point analyzable =================
section_addrs_50 = malloc (24);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
make_cleanup (free, section_addrs_50);
========================================================
=============== *this point analyzable =================
newmem_5 = realloc (oldmem_3(D), _6);
========================================================
------------------VAR_DECL : LHS2------------------
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
========================================================
=============== *this point analyzable =================
new_4 = malloc (32);
========================================================
=============== *this point analyzable =================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:add_symbol_file_command========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_symbol_file_command  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d1ea0
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <var_decl 0x7f13f77cecf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7f13f77c9828>
 <ssa_name 0x7f13f77d1ea0
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <var_decl 0x7f13f77cecf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7f13f77c9828>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
newmem_5 = realloc (oldmem_3(D), _6);
In function ‘main’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
this stmt call this function :realloc

 ================== find free stmt ================== 
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d1ea0
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <var_decl 0x7f13f77cecf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7f13f77c9828>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: free in this location

===== possiable asias =====
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: free in this location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^

===== possiable asias =====
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre_check_funciton:add_symbol_file_command========= [0m
[40;42m =======start_check_funciton:add_symbol_file_command========= [0m

dot graph START

======================================================================
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>

 ================== pre trace ptable ================== 
trace fucntion name:null_cleanup 
[40;44m =======trace_function_path null_cleanup  function_call count: 0 level :888========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:null_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
is Other function null_cleanup
 
 Start check Pointer Collect  

======================================================================
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
./benchmarks/binutils/leak_6/binutils_leak_6.c:59:39: warning: use location
   59 |         struct cleanup *my_cleanups = make_cleanup (null_cleanup, NULL);
      |                                       ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
add_symbol_file_command (&args);
./benchmarks/binutils/leak_6/binutils_leak_6.c:149:9: warning: use location
  149 |         add_symbol_file_command(args);
      |         ^
this stmt call this function :add_symbol_file_command
trace fucntion name:add_symbol_file_command 
[40;44m =======trace_function_path add_symbol_file_command  function_call count: 6 level :0========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:add_symbol_file_command========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;46m =======add node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
add_symbol_file_command (&args);
./benchmarks/binutils/leak_6/binutils_leak_6.c:149:9: warning: use location
  149 |         add_symbol_file_command(args);
      |         ^
this stmt call this function :add_symbol_file_command
trace fucntion name:add_symbol_file_command 
[40;44m =======trace_function_path add_symbol_file_command  function_call count: 6 level :0========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:add_symbol_file_command========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;46m =======add node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>

 ================== pre trace ptable ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
is Other function make_cleanup
 
 Start check Pointer Collect  

======================================================================
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
In function ‘main’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:59:39: warning: use location
   59 |         struct cleanup *my_cleanups = make_cleanup (null_cleanup, NULL);
      |                                       ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (my_cleanups_44);
In function ‘main’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:141:17: warning: use location
  141 |                 do_cleanups (my_cleanups);
      |                 ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
sect_opts_46 = malloc (64);
./benchmarks/binutils/leak_6/binutils_leak_6.c:66:21: warning: use location
   66 |         sect_opts = xmalloc (sizeof(struct sect_opt) * num_sect_opts); /* allocation site */
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>

 ================== pre trace ptable ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_9 = VDEF <.MEM_8>
exit (1);
./benchmarks/binutils/leak_6/binutils_leak_6.c:43:17: warning: use location
   43 |                 exit(1);
      |                 ^
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>
is Other function xrealloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location

===== possiable asias =====
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>

 ================== pre trace ptable ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_9 = VDEF <.MEM_8>
exit (1);
./benchmarks/binutils/leak_6/binutils_leak_6.c:43:17: warning: use location
   43 |                 exit(1);
      |                 ^
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>
is Other function xrealloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d1090
    type <pointer_type 0x7f13f77b5930
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77bd000>>
    var <var_decl 0x7f13f77ce3f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7f13f77c96f0>
 <ssa_name 0x7f13f77d1090
    type <pointer_type 0x7f13f77b5930
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77bd000>>
    var <var_decl 0x7f13f77ce3f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7f13f77c96f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d1090
    type <pointer_type 0x7f13f77b5930
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77bd000>>
    var <var_decl 0x7f13f77ce3f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7f13f77c96f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d1090
    type <pointer_type 0x7f13f77b5930
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77bd000>>
    var <var_decl 0x7f13f77ce3f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7f13f77c96f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f13f77c9468
    type <array_type 0x7f13f77bedc8
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        BLK
        size <integer_cst 0x7f13f7cbb060 constant 24>
        unit-size <integer_cst 0x7f13f77ac7e0 constant 3>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77bed20 type <integer_type 0x7f13f7cb2000 sizetype>
            DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f7c9dd80 2>>
        pointer_to_this <pointer_type 0x7f13f77bee70>>
    readonly constant static "-s\000">

dot graph START

======================================================================
 <ssa_name 0x7f13f7ca5d38
    type <integer_type 0x7f13f7cb25e8 int public SI
        size <integer_cst 0x7f13f7c9ddf8 constant 32>
        unit-size <integer_cst 0x7f13f7c9de10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb25e8 precision:32 min <integer_cst 0x7f13f7c9ddb0 -2147483648> max <integer_cst 0x7f13f7c9ddc8 2147483647>
        pointer_to_this <pointer_type 0x7f13f7cb99d8>>
   
    def_stmt _17 = strcmp (arg_28, "-s");
    version:17>
 <ssa_name 0x7f13f7ca5d38
    type <integer_type 0x7f13f7cb25e8 int public SI
        size <integer_cst 0x7f13f7c9ddf8 constant 32>
        unit-size <integer_cst 0x7f13f7c9de10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb25e8 precision:32 min <integer_cst 0x7f13f7c9ddb0 -2147483648> max <integer_cst 0x7f13f7c9ddc8 2147483647>
        pointer_to_this <pointer_type 0x7f13f7cb99d8>>
   
    def_stmt _17 = strcmp (arg_28, "-s");
    version:17>

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f7ca5d38
    type <integer_type 0x7f13f7cb25e8 int public SI
        size <integer_cst 0x7f13f7c9ddf8 constant 32>
        unit-size <integer_cst 0x7f13f7c9de10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb25e8 precision:32 min <integer_cst 0x7f13f7c9ddb0 -2147483648> max <integer_cst 0x7f13f7c9ddc8 2147483647>
        pointer_to_this <pointer_type 0x7f13f7cb99d8>>
   
    def_stmt _17 = strcmp (arg_28, "-s");
    version:17>
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f7ca5d38
    type <integer_type 0x7f13f7cb25e8 int public SI
        size <integer_cst 0x7f13f7c9ddf8 constant 32>
        unit-size <integer_cst 0x7f13f7c9de10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb25e8 precision:32 min <integer_cst 0x7f13f7c9ddb0 -2147483648> max <integer_cst 0x7f13f7c9ddc8 2147483647>
        pointer_to_this <pointer_type 0x7f13f7cb99d8>>
   
    def_stmt _17 = strcmp (arg_28, "-s");
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
section_addrs_50->num_sections = _24;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:45: warning: use location
  139 |                 section_addrs->num_sections = sec_num;
      |                                             ^
section_addrs_50->num_sections = _24;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^
make_cleanup (free, section_addrs_50);
./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17: warning: use location
  122 |                 make_cleanup (free, section_addrs);
      |                 ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
[40;36m ======= relate node_fun argument:section_addrs========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:section_addrs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_80 = VDEF <.MEM_75>
section_addrs_50 = malloc (24);
section_addrs_50 = malloc (24);
In function ‘main’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:121:33: warning: use location
  121 |                 section_addrs = malloc (sizeof(struct section_addr_info));
      |                                 ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>

 ================== pre trace ptable ================== 
trace fucntion name:free 

 ================== pre trace ptable finish================== 
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
is Other function free
 
 Start check Pointer Collect  

======================================================================
# .MEM_81 = VDEF <.MEM_80>
make_cleanup (free, section_addrs_50);
make_cleanup (free, section_addrs_50);
./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17: warning: use location
  122 |                 make_cleanup (free, section_addrs);
      |                 ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_81 = VDEF <.MEM_80>
make_cleanup (free, section_addrs_50);
make_cleanup (free, section_addrs_50);
./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:add_symbol_file_command========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
add_symbol_file_command (&args);
add_symbol_file_command (&args);
./benchmarks/binutils/leak_6/binutils_leak_6.c:149:9: warning: use location
  149 |         add_symbol_file_command(args);
      |         ^
this stmt call this function :add_symbol_file_command
trace fucntion name:add_symbol_file_command 
[40;44m =======trace_function_path add_symbol_file_command  function_call count: 6 level :0========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:add_symbol_file_command========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:arg========= [0m
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:18: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                  ^
arg_48 = *args_47(D);
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:18: warning: use location
arg_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:50: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                  ^
_6 = sect_opts_36 + _5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:50: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:66: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^
_11 = sect_opts_36 + _10;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:66: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:52: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                                    ^
_20 = args_47(D) + _19;
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:52: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:arg========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:46: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                              ^
arg_73 = *_20;
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:46: warning: use location
arg_73

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:sec========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
sec_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;46m =======add node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
In function ‘main’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
# .MEM_8 = VDEF <.MEM_7>
add_symbol_file_command (&args);
add_symbol_file_command (&args);
./benchmarks/binutils/leak_6/binutils_leak_6.c:149:9: warning: use location
  149 |         add_symbol_file_command(args);
      |         ^
this stmt call this function :add_symbol_file_command
trace fucntion name:add_symbol_file_command 
[40;44m =======trace_function_path add_symbol_file_command  function_call count: 6 level :0========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:add_symbol_file_command========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:arg========= [0m
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:18: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                  ^
arg_48 = *args_47(D);
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:18: warning: use location
arg_48

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:50: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                  ^
_6 = sect_opts_36 + _5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:50: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:66: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^
_11 = sect_opts_36 + _10;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:66: warning: use location
_11

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
_14

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:52: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                                    ^
_20 = args_47(D) + _19;
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:52: warning: use location
_20

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:arg========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:46: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                              ^
arg_73 = *_20;
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:46: warning: use location
arg_73

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
_23

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:sec========= [0m
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
sec_54

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
In function ‘main’:
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with args ========= [0m
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:args========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;46m =======add node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
In function ‘main’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <var_decl 0x7f13f8545cf0 args
    type <array_type 0x7f13f77bf0a8
        type <pointer_type 0x7f13f77bd3f0 type <integer_type 0x7f13f77bd348 char>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
        BLK
        size <integer_cst 0x7f13f7d720a8 constant 384>
        unit-size <integer_cst 0x7f13f77ac858 constant 48>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77be9d8 type <integer_type 0x7f13f7cb2000 sizetype>
            DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f77ac810 5>>
        pointer_to_this <pointer_type 0x7f13f77bf5e8>>
    addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7f13f7d720a8 384> unit-size <integer_cst 0x7f13f77ac858 48>
    align:64 warn_if_not_align:0 context <function_decl 0x7f13f77bc300 main>>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with args ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:add_symbol_file_command========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path add_symbol_file_command  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d1ea0
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <var_decl 0x7f13f77cecf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7f13f77c9828>
 <ssa_name 0x7f13f77d1ea0
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <var_decl 0x7f13f77cecf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7f13f77c9828>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
newmem_5 = realloc (oldmem_3(D), _6);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
this stmt call this function :realloc

 ================== find free stmt ================== 
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d1ea0
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <var_decl 0x7f13f77cecf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7f13f77c9828>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: free in this location

===== possiable asias =====
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: free in this location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^

===== possiable asias =====
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre_check_funciton:add_symbol_file_command========= [0m
[40;42m =======start_check_funciton:add_symbol_file_command========= [0m

dot graph START

======================================================================
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>

 ================== pre trace ptable ================== 
trace fucntion name:null_cleanup 
[40;44m =======trace_function_path null_cleanup  function_call count: 0 level :888========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:null_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
is Other function null_cleanup
 
 Start check Pointer Collect  

======================================================================
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
./benchmarks/binutils/leak_6/binutils_leak_6.c:59:39: warning: use location
   59 |         struct cleanup *my_cleanups = make_cleanup (null_cleanup, NULL);
      |                                       ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
add_symbol_file_command (&args);
./benchmarks/binutils/leak_6/binutils_leak_6.c:149:9: warning: use location
  149 |         add_symbol_file_command(args);
      |         ^
this stmt call this function :add_symbol_file_command
trace fucntion name:add_symbol_file_command 
[40;44m =======trace_function_path add_symbol_file_command  function_call count: 6 level :0========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:add_symbol_file_command========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;46m =======add node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 
add_symbol_file_command (&args);
./benchmarks/binutils/leak_6/binutils_leak_6.c:149:9: warning: use location
  149 |         add_symbol_file_command(args);
      |         ^
this stmt call this function :add_symbol_file_command
trace fucntion name:add_symbol_file_command 
[40;44m =======trace_function_path add_symbol_file_command  function_call count: 6 level :0========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:add_symbol_file_command========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;46m =======add node_fun stack:do_cleanups========= [0m
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;46m =======add node_fun stack:make_cleanup========= [0m
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;46m =======add node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;46m =======add node_fun stack:xrealloc========= [0m
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :1========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <function_decl 0x7f13f77b6f00 null_cleanup
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7f13f77c51e0>
    result <result_decl 0x7f13f7ca8348 D.4471 type <void_type 0x7f13f7cb2f18 void>
        ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
        align:8 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup>>
    arguments <parm_decl 0x7f13f77c2300 arg
        type <pointer_type 0x7f13f7cb9000 type <void_type 0x7f13f7cb2f18 void>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
        unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 context <function_decl 0x7f13f77b6f00 null_cleanup> arg-type <pointer_type 0x7f13f7cb9000>>
    struct-function 0x7f13f77c6228>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with null_cleanup ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:4 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:4 [0m
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:4 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>

 ================== pre trace ptable ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_7>
return _5;
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
is Other function make_cleanup
 
 Start check Pointer Collect  

======================================================================
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:59:39: warning: use location
   59 |         struct cleanup *my_cleanups = make_cleanup (null_cleanup, NULL);
      |                                       ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_cleanups (my_cleanups_44);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:141:17: warning: use location
  141 |                 do_cleanups (my_cleanups);
      |                 ^
this stmt call this function :do_cleanups
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:my_cleanups========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d13a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77ce120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7f13f77c9738>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
In function ‘add_symbol_file_command’:
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
sect_opts_46 = malloc (64);
./benchmarks/binutils/leak_6/binutils_leak_6.c:66:21: warning: use location
   66 |         sect_opts = xmalloc (sizeof(struct sect_opt) * num_sect_opts); /* allocation site */
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d13f0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7f13f77c9750>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d12d0
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7f13f77c9720>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f7ca5ab0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _8 = num_sect_opts_38 * 32;
    version:8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>

 ================== pre trace ptable ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_9 = VDEF <.MEM_8>
exit (1);
./benchmarks/binutils/leak_6/binutils_leak_6.c:43:17: warning: use location
   43 |                 exit(1);
      |                 ^
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>
is Other function xrealloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d1750
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_71 = xrealloc (sect_opts_36, _8);
    version:71
    ptr-info 0x7f13f77c97e0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location

===== possiable asias =====
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: free in this location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

===== possiable asias =====
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f7ca5cf0
    type <integer_type 0x7f13f7cb27e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9de88 0> max <integer_cst 0x7f13f7c9e500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f13f7cbe7e0>>
   
    def_stmt _16 = num_sect_opts_38 * 32;
    version:16>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location

===== possiable asias =====
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>

 ================== pre trace ptable ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_9 = VDEF <.MEM_8>
exit (1);
./benchmarks/binutils/leak_6/binutils_leak_6.c:43:17: warning: use location
   43 |                 exit(1);
      |                 ^
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>
is Other function xrealloc
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch ---xrealloc-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt call this function :xrealloc
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

======================================================================

 Expand conflict 
 The same function may have multiple branches :xrealloc
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d1678
    type <pointer_type 0x7f13f77be540
        type <record_type 0x7f13f77be498 sect_opt TI
            size <integer_cst 0x7f13f7c9dc00 constant 128>
            unit-size <integer_cst 0x7f13f7c9dc18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be498 fields <field_decl 0x7f13f77b8428 name> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be540>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce000 sect_opts>
    def_stmt sect_opts_64 = xrealloc (sect_opts_36, _16);
    version:64
    ptr-info 0x7f13f77c97c8>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location

===== possiable asias =====
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: free in this location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^

===== possiable asias =====
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d1090
    type <pointer_type 0x7f13f77b5930
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77bd000>>
    var <var_decl 0x7f13f77ce3f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7f13f77c96f0>
 <ssa_name 0x7f13f77d1090
    type <pointer_type 0x7f13f77b5930
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77bd000>>
    var <var_decl 0x7f13f77ce3f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7f13f77c96f0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d1090
    type <pointer_type 0x7f13f77b5930
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77bd000>>
    var <var_decl 0x7f13f77ce3f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7f13f77c96f0>
is Other function 
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d1090
    type <pointer_type 0x7f13f77b5930
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77bd000>>
    var <var_decl 0x7f13f77ce3f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7f13f77c96f0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f13f77c9468
    type <array_type 0x7f13f77bedc8
        type <integer_type 0x7f13f77b5888 char public QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
            pointer_to_this <pointer_type 0x7f13f77b5930>>
        BLK
        size <integer_cst 0x7f13f7cbb060 constant 24>
        unit-size <integer_cst 0x7f13f77ac7e0 constant 3>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f13f77bed20 type <integer_type 0x7f13f7cb2000 sizetype>
            DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb2738 precision:64 min <integer_cst 0x7f13f7c9dbe8 0> max <integer_cst 0x7f13f7c9dd80 2>>
        pointer_to_this <pointer_type 0x7f13f77bee70>>
    readonly constant static "-s\000">

dot graph START

======================================================================
 <ssa_name 0x7f13f7ca5d38
    type <integer_type 0x7f13f7cb25e8 int public SI
        size <integer_cst 0x7f13f7c9ddf8 constant 32>
        unit-size <integer_cst 0x7f13f7c9de10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb25e8 precision:32 min <integer_cst 0x7f13f7c9ddb0 -2147483648> max <integer_cst 0x7f13f7c9ddc8 2147483647>
        pointer_to_this <pointer_type 0x7f13f7cb99d8>>
   
    def_stmt _17 = strcmp (arg_28, "-s");
    version:17>
 <ssa_name 0x7f13f7ca5d38
    type <integer_type 0x7f13f7cb25e8 int public SI
        size <integer_cst 0x7f13f7c9ddf8 constant 32>
        unit-size <integer_cst 0x7f13f7c9de10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb25e8 precision:32 min <integer_cst 0x7f13f7c9ddb0 -2147483648> max <integer_cst 0x7f13f7c9ddc8 2147483647>
        pointer_to_this <pointer_type 0x7f13f7cb99d8>>
   
    def_stmt _17 = strcmp (arg_28, "-s");
    version:17>

 ================== pre trace ptable ================== 
trace fucntion name:strcmp 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f7ca5d38
    type <integer_type 0x7f13f7cb25e8 int public SI
        size <integer_cst 0x7f13f7c9ddf8 constant 32>
        unit-size <integer_cst 0x7f13f7c9de10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb25e8 precision:32 min <integer_cst 0x7f13f7c9ddb0 -2147483648> max <integer_cst 0x7f13f7c9ddc8 2147483647>
        pointer_to_this <pointer_type 0x7f13f7cb99d8>>
   
    def_stmt _17 = strcmp (arg_28, "-s");
    version:17>
is Other function strcmp
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt call this function :strcmp
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f7ca5d38
    type <integer_type 0x7f13f7cb25e8 int public SI
        size <integer_cst 0x7f13f7c9ddf8 constant 32>
        unit-size <integer_cst 0x7f13f7c9de10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb25e8 precision:32 min <integer_cst 0x7f13f7c9ddb0 -2147483648> max <integer_cst 0x7f13f7c9ddc8 2147483647>
        pointer_to_this <pointer_type 0x7f13f7cb99d8>>
   
    def_stmt _17 = strcmp (arg_28, "-s");
    version:17>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
section_addrs_50->num_sections = _24;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:45: warning: use location
  139 |                 section_addrs->num_sections = sec_num;
      |                                             ^
section_addrs_50->num_sections = _24;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:45: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^
make_cleanup (free, section_addrs_50);
./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17: warning: use location
  122 |                 make_cleanup (free, section_addrs);
      |                 ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
[40;36m ======= relate node_fun argument:section_addrs========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:section_addrs========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_80 = VDEF <.MEM_75>
section_addrs_50 = malloc (24);
section_addrs_50 = malloc (24);
In function ‘add_symbol_file_command’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:121:33: warning: use location
  121 |                 section_addrs = malloc (sizeof(struct section_addr_info));
      |                                 ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d14c8
    type <pointer_type 0x7f13f77be888
        type <record_type 0x7f13f77be7e0 section_addr_info BLK
            size <integer_cst 0x7f13f7cbb078 constant 192>
            unit-size <integer_cst 0x7f13f7cbb048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77be7e0 fields <field_decl 0x7f13f77b8688 num_sections> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77be888>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f13f77ce090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7f13f77c9798>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>

 ================== pre trace ptable ================== 
trace fucntion name:free 

 ================== pre trace ptable finish================== 
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
is Other function free
 
 Start check Pointer Collect  

======================================================================
# .MEM_81 = VDEF <.MEM_80>
make_cleanup (free, section_addrs_50);
make_cleanup (free, section_addrs_50);
./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17: warning: use location
  122 |                 make_cleanup (free, section_addrs);
      |                 ^
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_81 = VDEF <.MEM_80>
make_cleanup (free, section_addrs_50);
make_cleanup (free, section_addrs_50);
./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17: warning: use location
this stmt call this function :make_cleanup
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
 <function_decl 0x7f13f77bc200 free
    type <function_type 0x7f13f77b5d20
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
            chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7f13f77b5dc8>>
    addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
    align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
    attributes <tree_list 0x7f13f77b77f8
        purpose <identifier_node 0x7f13f7cd7e10 nothrow>
        chain <tree_list 0x7f13f77b77d0
            purpose <identifier_node 0x7f13f7cd7e38 leaf>>>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with free ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:add_symbol_file_command========= [0m
[40;44m =======node_fun:xrealloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xrealloc  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d1ea0
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <var_decl 0x7f13f77cecf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7f13f77c9828>
 <ssa_name 0x7f13f77d1ea0
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <var_decl 0x7f13f77cecf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7f13f77c9828>

 ================== pre trace ptable ================== 
trace fucntion name:realloc 

 ================== pre trace ptable finish================== 
is Reserved word function :realloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
newmem_5 = realloc (oldmem_3(D), _6);
In function ‘xrealloc’:
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
this stmt call this function :realloc

 ================== find free stmt ================== 
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find free stmt ================== 
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d1ea0
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <var_decl 0x7f13f77cecf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7f13f77c9828>

 ================================================================= 
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: free in this location

===== possiable asias =====
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: free in this location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^

===== possiable asias =====
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;44m =======node_fun:null_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path null_cleanup  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:null_cleanup========= [0m
[40;42m =======start_check_funciton:null_cleanup========= [0m
[40;33m =======POP node_fun stack:null_cleanup========= [0m
[40;44m =======node_fun:make_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>

 ================== this stmt hava call fucntion ================== 
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <var_decl 0x7f13f8545b40 cleanup_chain
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
    align:64 warn_if_not_align:0 context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7f13f7c9dba0>>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with cleanup_chain ========= [0m
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:cleanup_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with function ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8048
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2380 function>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9840>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8090
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2400 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c9858>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return _6;
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
is Other function make_my_cleanup
 
 Start check Pointer Collect  

======================================================================
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
In function ‘make_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:151:10: warning: use location
  151 |   return make_my_cleanup (&cleanup_chain, function, arg);
      |          ^
this stmt call this function :make_my_cleanup
trace fucntion name:make_my_cleanup 
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d80d8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
    version:5
    ptr-info 0x7f13f77c9870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   No memory leak, need more check!  [0m

======================================================================


======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
In function ‘make_my_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:pmy_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d81b0
    type <pointer_type 0x7f13f77bd930
        type <pointer_type 0x7f13f77b5f18 type <record_type 0x7f13f77b5e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7f13f7c9dbb8 constant 64>
            unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f77bd930>>
        public unsigned DI size <integer_cst 0x7f13f7c9dbb8 64> unit-size <integer_cst 0x7f13f7c9dbd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with function ========= [0m
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:function========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d81f8
    type <pointer_type 0x7f13f77b5498
        type <function_type 0x7f13f77b5348 make_cleanup_ftype type <void_type 0x7f13f7cb2f18 void>
            QI
            size <integer_cst 0x7f13f7c9dca8 constant 8>
            unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7f13f77b74b0 value <pointer_type 0x7f13f7cb9000>
                chain <tree_list 0x7f13f7cb1b18 value <void_type 0x7f13f7cb2f18 void>>> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5498>>
        unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f13f77c2500 function>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f13f77c98a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8240
    type <pointer_type 0x7f13f7cb9000
        type <void_type 0x7f13f7cb2f18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f13f7cb9000>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f7cbe9d8>>
    var <parm_decl 0x7f13f77c2580 arg>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f13f77c98b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>

 ================== pre trace ptable ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# .MEM_20 = VDEF <.MEM_19>
exit (1);
In function ‘make_my_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:136:17: warning: use location
  136 |                 exit (1);
      |                 ^
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
is Other function make_my_cleanup2
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
In function ‘make_my_cleanup’:
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt call this function :make_my_cleanup2
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:old_chain========= [0m
In function ‘make_my_cleanup2’:
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
  127 |   struct cleanup *old_chain = *pmy_chain;
      |                   ^
old_chain_6 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:127:19: warning: use location
old_chain_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
  129 |   new->next = *pmy_chain;
      |               ^
_1 = *pmy_chain_5(D);
./benchmarks/binutils/leak_6/../include/common.h:129:15: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8288
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
   
    def_stmt _6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
    version:6
    ptr-info 0x7f13f77c98d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup2========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
new_4 = malloc (32);
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d83a8
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <var_decl 0x7f13f77d7240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7f13f77c9900>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;44m =======node_fun:do_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘do_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
do_my_cleanups (&cleanup_chain, old_chain_2(D));
In function ‘do_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:118:3: warning: use location
  118 |   do_my_cleanups (&cleanup_chain, old_chain);
      |   ^
this stmt call this function :do_my_cleanups
trace fucntion name:do_my_cleanups 
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with old_chain ========= [0m
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘do_my_cleanups’:
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                       ^
_1 = ptr_12->next;
./benchmarks/binutils/leak_6/../include/common.h:105:23: warning: use location
_1

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
  105 |       *pmy_chain = ptr->next;   /* Do this first in case of recursion.  */
      |                  ^
*pmy_chain_11(D) = _1;
./benchmarks/binutils/leak_6/../include/common.h:105:18: warning: use location
*pmy_chain_11(D)

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
  106 |       (*ptr->function) (ptr->arg);
      |        ^
_2 = ptr_12->function;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_2

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:106:8: warning: use location
_3

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
  108 |                         printf("%x\n", ptr->arg);
      |                         ^
_4 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:108:25: warning: use location
_4

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
  109 |       if (ptr->free_arg)
      |              ^
_5 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:109:14: warning: use location
_5

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
  110 |                                 (*ptr->free_arg) (ptr->arg);
      |                                  ^
_6 = ptr_12->free_arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7 = ptr_12->arg;
./benchmarks/binutils/leak_6/../include/common.h:110:34: warning: use location
_7

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:old_chain========= [0m
[40;36m ======= relate gimple_assign_lhs:ptr========= [0m
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
  103 |         while ((ptr = *pmy_chain) != old_chain)
      |                     ^
ptr_12 = *pmy_chain_11(D);
./benchmarks/binutils/leak_6/../include/common.h:103:21: warning: use location
ptr_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f13f77d8798
    type <pointer_type 0x7f13f77b5f18
        type <record_type 0x7f13f77b5e70 cleanup BLK
            size <integer_cst 0x7f13f7c9df18 constant 256>
            unit-size <integer_cst 0x7f13f7cbb018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f77b5e70 fields <field_decl 0x7f13f77b82f8 next> context <translation_unit_decl 0x7f13f7ca8168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7f13f77b5f18>>
        public unsigned DI
        size <integer_cst 0x7f13f7c9dbb8 constant 64>
        unit-size <integer_cst 0x7f13f7c9dbd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f13f77bd930>>
    var <parm_decl 0x7f13f77c2800 old_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f13f77c9990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;44m =======node_fun:do_my_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <array_ref 0x7f13f7ca7268
    type <integer_type 0x7f13f77bd348 char readonly QI
        size <integer_cst 0x7f13f7c9dca8 constant 8>
        unit-size <integer_cst 0x7f13f7c9dcc0 constant 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f13f7cb23f0 precision:8 min <integer_cst 0x7f13f77ac768 -128> max <integer_cst 0x7f13f77ac750 127>
        pointer_to_this <pointer_type 0x7f13f77bd3f0>>
   
    arg:0 <string_cst 0x7f13f77d4900
        type <array_type 0x7f13f77bdb28 type <integer_type 0x7f13f77bd348 char>
            BLK
            size <integer_cst 0x7f13f77ac7c8 constant 184>
            unit-size <integer_cst 0x7f13f77ac7b0 constant 23>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7f13f77bda80>>
        readonly constant static "cleanup!!!!! =========\000">
    arg:1 <integer_cst 0x7f13f7c9df48 type <integer_type 0x7f13f7cb25e8 int> constant 0>>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
args[0] = "prog";
args[1] = "v";
args[2] = "-s";
args[3] = "idx";
args[4] = "addr";
args[5] = 0B;
add_symbol_file_command (&args);
args ={v} {CLOBBER};
return 0;

=======Mapping node_fun:add_symbol_file_command=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 59124318]:
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
sect_opts_46 = malloc (64);
if (args_47(D) == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 23650]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 59100668]:
arg_48 = *args_47(D);
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686024]:
if (argcnt_33 == 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 334846386]:
// predicted unlikely by continue predictor.
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 679839639]:
if (argcnt_33 == 1)
  goto <bb 8>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 231145479]:
_1 = (long unsigned int) section_index_26;
_2 = _1 * 16;
_3 = sect_opts_36 + _2;
_3->name = ".text";
_4 = (long unsigned int) section_index_26;
_5 = _4 * 16;
_6 = sect_opts_36 + _5;
_6->value = arg_28;
section_index_68 = section_index_26 + 1;
_7 = (long unsigned int) section_index_68;
if (_7 >= num_sect_opts_38)
  goto <bb 9>; [33.00%]
else
  goto <bb 17>; [67.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 76278008]:
num_sect_opts_69 = num_sect_opts_38 * 2;
_8 = num_sect_opts_38 * 32;
sect_opts_71 = xrealloc (sect_opts_36, _8);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 448694159]:
if (expecting_sec_name_32 != 0)
  goto <bb 11>; [50.00%]
else
  goto <bb 12>; [50.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 224347079]:
_9 = (long unsigned int) section_index_26;
_10 = _9 * 16;
_11 = sect_opts_36 + _10;
_11->value = arg_28;
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 224347079]:
if (expecting_sec_addr_30 != 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 15>; [50.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 112173540]:
_12 = (long unsigned int) section_index_26;
_13 = _12 * 16;
_14 = sect_opts_36 + _13;
_14->value = arg_28;
section_index_61 = section_index_26 + 1;
_15 = (long unsigned int) section_index_61;
if (_15 >= num_sect_opts_38)
  goto <bb 14>; [33.00%]
else
  goto <bb 17>; [67.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 37017268]:
num_sect_opts_62 = num_sect_opts_38 * 2;
_16 = num_sect_opts_38 * 32;
sect_opts_64 = xrealloc (sect_opts_36, _16);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 112173540]:
_17 = strcmp (arg_28, "-s");
if (_17 == 0)
  goto <bb 17>; [99.96%]
else
  goto <bb 16>; [0.04%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 44869]:
exit (1);

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 1014641157]:
# section_index_25 = PHI <section_index_26(6), section_index_68(8), section_index_68(9), section_index_26(11), section_index_61(13), section_index_61(14), section_index_26(15)>
# expecting_sec_addr_29 = PHI <expecting_sec_addr_30(6), expecting_sec_addr_30(8), expecting_sec_addr_30(9), 0(11), 0(13), 0(14), 1(15)>
# expecting_sec_name_31 = PHI <expecting_sec_name_32(6), expecting_sec_name_32(8), expecting_sec_name_32(9), expecting_sec_name_32(11), expecting_sec_name_32(13), expecting_sec_name_32(14), 1(15)>
# sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
# num_sect_opts_37 = PHI <num_sect_opts_38(6), num_sect_opts_38(8), num_sect_opts_69(9), num_sect_opts_38(11), num_sect_opts_38(13), num_sect_opts_62(14), num_sect_opts_38(15)>
argcnt_72 = argcnt_33 + 1;
_18 = (long unsigned int) argcnt_72;
_19 = _18 * 8;
_20 = args_47(D) + _19;
arg_73 = *_20;

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 1073741824]:
# section_index_26 = PHI <0(4), section_index_25(17)>
# arg_28 = PHI <arg_48(4), arg_73(17)>
# expecting_sec_addr_30 = PHI <0(4), expecting_sec_addr_29(17)>
# expecting_sec_name_32 = PHI <0(4), expecting_sec_name_31(17)>
# argcnt_33 = PHI <0(4), argcnt_72(17)>
# sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
# num_sect_opts_38 = PHI <4(4), num_sect_opts_37(17)>
if (arg_28 != 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 19>; [5.50%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 59055800]:
if (section_index_26 <= 0)
  goto <bb 20>; [0.04%]
else
  goto <bb 21>; [99.96%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 23622]:
exit (1);

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 59032178]:
section_addrs_50 = malloc (24);
make_cleanup (free, section_addrs_50);
goto <bb 23>; [100.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 477623986]:
_21 = (long unsigned int) i_34;
_22 = _21 * 16;
_23 = sect_opts_36 + _22;
sec_54 = _23->name;
section_addrs_50->other[sec_num_27].name = sec_54;
sec_num_56 = sec_num_27 + 1;
i_57 = i_34 + 1;

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 536656164]:
# sec_num_27 = PHI <0(21), sec_num_56(22)>
# i_34 = PHI <0(21), i_57(22)>
if (section_index_26 > i_34)
  goto <bb 22>; [89.00%]
else
  goto <bb 24>; [11.00%]

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 59032178]:
_24 = (long unsigned int) sec_num_27;
section_addrs_50->num_sections = _24;
do_cleanups (my_cleanups_44);
return;

=======Mapping node_fun:xrealloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = MAX_EXPR <1, size_1(D)>;
newmem_5 = realloc (oldmem_3(D), _6);
if (newmem_5 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return newmem_5;

=======Mapping node_fun:null_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
return;

=======Mapping node_fun:make_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
return _5;

=======Mapping node_fun:make_my_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
return _6;

=======Mapping node_fun:make_my_cleanup2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_4 = malloc (32);
old_chain_6 = *pmy_chain_5(D);
_1 = *pmy_chain_5(D);
new_4->next = _1;
new_4->function = function_8(D);
new_4->free_arg = free_arg_10(D);
new_4->arg = arg_12(D);
*pmy_chain_5(D) = new_4;
if (old_chain_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return old_chain_6;

=======Mapping node_fun:do_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
do_my_cleanups (&cleanup_chain, old_chain_2(D));
return;

=======Mapping node_fun:do_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ptr_12->next;
*pmy_chain_11(D) = _1;
_2 = ptr_12->function;
_3 = ptr_12->arg;
_2 (_3);
__builtin_puts (&"cleanup!!!!! ========="[0]);
_4 = ptr_12->arg;
printf ("%x\n", _4);
_5 = ptr_12->free_arg;
if (_5 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_6 = ptr_12->free_arg;
_7 = ptr_12->arg;
_6 (_7);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
free (ptr_12);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
ptr_12 = *pmy_chain_11(D);
if (ptr_12 != old_chain_13(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    all ptable point : 27 [0m
[40;34m    analyzable ptable point : 25 [0m
[40;34m    used_stmt array stack totalsize of : 0.002960 mb[0m
[40;34m    collect time: : 0.001316 s [0m
[40;34m    algorithm time: 0.265742 s [0m
[40;34m    gimple stmt count : : 112 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:46 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 75%)
 phase opt and generate             :   0.08 (100%)   0.22 (100%)   0.31 (100%)   678k ( 24%)
 dump files                         :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)     0  (  0%)
 callgraph functions expansion      :   0.03 ( 38%)   0.00 (  0%)   0.04 ( 13%)   560k ( 19%)
 ipa lto gimple in                  :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)    85k (  3%)
 tree CCP                           :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)   960  (  0%)
 plugin execution                   :   0.05 ( 62%)   0.22 (100%)   0.26 ( 84%)  1728  (  0%)
 initialize rtl                     :   0.00 (  0%)   0.00 (  0%)   0.01 (  3%)    12k (  0%)
 rest of compilation                :   0.03 ( 38%)   0.00 (  0%)   0.01 (  3%)    24k (  1%)
 TOTAL                              :   0.08          0.22          0.31         2885k
