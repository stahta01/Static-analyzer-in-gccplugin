./benchmarks/binutils/leak_6/binutils_leak_6.c: In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: implicit declaration of function â€˜strcmpâ€™ [-Wimplicit-function-declaration]
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^~~~~~
./benchmarks/binutils/leak_6/binutils_leak_6.c:8:1: note: include â€˜<string.h>â€™ or provide a declaration of â€˜strcmpâ€™
    7 | #include "../include/vec.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/leak_6/binutils_leak_6.c: In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:149:33: warning: passing argument 1 of â€˜add_symbol_file_commandâ€™ from incompatible pointer type [-Wincompatible-pointer-types]
  149 |         add_symbol_file_command(args);
      |                                 ^~~~
      |                                 |
      |                                 const char **
./benchmarks/binutils/leak_6/binutils_leak_6.c:49:33: note: expected â€˜char **â€™ but argument is of type â€˜const char **â€™
   49 | add_symbol_file_command (char **args)
      |                          ~~~~~~~^~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -2.7%|          |
nothrow                          |      |      |      |      |     -2.7%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                              |      |      |      |      |     -0.2%|          |
forwprop                         |      |      |      |      |     -0.2%|          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                            |      |      |      |      |     -0.6%|          |
phiopt                           |      |      |      |      |     -0.8%|          |
modref                           |      |      |      |      |     -0.2%|          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========
=======node_fun:add_symbol_file_command=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:xrealloc=========
--------GIMPLE Cond -------
=======node_fun:null_cleanup=========
=======node_fun:make_cleanup=========
=======node_fun:make_my_cleanup=========
=======node_fun:make_my_cleanup2=========
--------GIMPLE Cond -------
=======node_fun:do_cleanups=========
=======node_fun:do_my_cleanups=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 1 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
args[0] = "prog";
# .MEM_3 = VDEF <.MEM_2>
args[1] = "v";
# .MEM_4 = VDEF <.MEM_3>
args[2] = "-s";
# .MEM_5 = VDEF <.MEM_4>
args[3] = "idx";
# .MEM_6 = VDEF <.MEM_5>
args[4] = "addr";
# .MEM_7 = VDEF <.MEM_6>
args[5] = 0B;
# .MEM_8 = VDEF <.MEM_7>
add_symbol_file_command (&args);
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
# .MEM_80 = VDEF <.MEM_75>
section_addrs_50 = malloc (24);
# .MEM_81 = VDEF <.MEM_80>
make_cleanup (free, section_addrs_50);
# .MEM_83 = VDEF <.MEM_82>
do_cleanups (my_cleanups_44);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
# .MEM_8 = VDEF <.MEM_7(D)>
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
# .MEM_4 = VDEF <.MEM_3(D)>
do_my_cleanups (&cleanup_chain, old_chain_2(D));
# .MEM_19 = VDEF <.MEM_18>
__builtin_puts (&"cleanup!!!!! ========="[0]);
# .MEM_20 = VDEF <.MEM_19>
printf ("%x\n", _4);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:add_symbol_file_command========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path add_symbol_file_command  function_call count: 6 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c41e0
    type <pointer_type 0x7ff1de7a83f0
        type <integer_type 0x7ff1de7a8348 char readonly QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1dec8c3f0 precision:8 min <integer_cst 0x7ff1de797768 -128> max <integer_cst 0x7ff1de797750 127>
            pointer_to_this <pointer_type 0x7ff1de7a83f0>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7ff1dec81268 type <integer_type 0x7ff1de7a8348 char>
       
        arg:0 <string_cst 0x7ff1de7bf900 type <array_type 0x7ff1de7a8b28>
            readonly constant static "cleanup!!!!! =========\000">
        arg:1 <integer_cst 0x7ff1dec77f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c4240
    type <pointer_type 0x7ff1de7a8dc8
        type <array_type 0x7ff1de7a8d20 type <integer_type 0x7ff1de7a0888 char>
            SI
            size <integer_cst 0x7ff1dec77df8 constant 32>
            unit-size <integer_cst 0x7ff1dec77e10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7ff1de7a8c78>
            pointer_to_this <pointer_type 0x7ff1de7a8dc8>>
        unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7ff1de7c4220 type <array_type 0x7ff1de7a8d20>
        readonly constant static "%x\012\000">
    ./benchmarks/binutils/leak_6/../include/common.h:108:11 start: ./benchmarks/binutils/leak_6/../include/common.h:108:11 finish: ./benchmarks/binutils/leak_6/../include/common.h:108:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c4140
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7ff1df51fb40 cleanup_chain type <pointer_type 0x7ff1de7a0f18>
        addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7ff1dec77ba0>>
    ./benchmarks/binutils/leak_6/../include/common.h:118:3 start: ./benchmarks/binutils/leak_6/../include/common.h:118:3 finish: ./benchmarks/binutils/leak_6/../include/common.h:118:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4 = malloc (32);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff1de7b4450 type <integer_type 0x7ff1dec8c7e0 long unsigned int> constant 32>
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7c31b0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff1de7ad480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7ff1de7b4888>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate stmt argument:pmy_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate stmt argument:pmy_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7c31b0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff1de7ad480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7ff1de7b4888>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1dee73fe0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7ff1df51fb40 cleanup_chain type <pointer_type 0x7ff1de7a0f18>
        addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7ff1dec77ba0>>
    ./benchmarks/binutils/leak_6/../include/common.h:151:10 start: ./benchmarks/binutils/leak_6/../include/common.h:151:10 finish: ./benchmarks/binutils/leak_6/../include/common.h:151:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bcea0
    type <pointer_type 0x7ff1dec93000
        type <void_type 0x7ff1dec8cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1dec93000>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1dec989d8>>
    var <var_decl 0x7ff1de7b9cf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7ff1de7b4828>
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜xreallocâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
newmem_5 = realloc (oldmem_3(D), _6);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
this stmt is child function---realloc-----

 ================== find ================== 
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newmem_5 == 0B)
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜xreallocâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newmem_5 == 0B)
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (newmem_5 == 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^
if (newmem_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bcea0
    type <pointer_type 0x7ff1dec93000
        type <void_type 0x7ff1dec8cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1dec93000>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1dec989d8>>
    var <var_decl 0x7ff1de7b9cf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7ff1de7b4828>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: Use after free error!: free location 
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: Use after free error!: free location 
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre_check_funciton:add_symbol_file_command========= [0m
[40;42m =======start_check_funciton:add_symbol_file_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc3f0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7ff1de7b4750>
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
bb index := 18
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = sect_opts_36 + _22;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
sec_54 = _23->name;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
Cond in fucntion add_symbol_file_command basic block 15
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 17
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_28 != 0B)
bb index := 18
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^
if (arg_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
Cond in fucntion add_symbol_file_command basic block 18
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 5
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
bb index := 2
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
bb index := 2
# VUSE <.MEM_15>
return;
./benchmarks/binutils/leak_6/../include/common.h:114:1: warning: use location
  114 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_15>
return;
./benchmarks/binutils/leak_6/../include/common.h:114:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================
sect_opts_46 = malloc (64);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:66:21: warning: use location
   66 |         sect_opts = xmalloc (sizeof(struct sect_opt) * num_sect_opts); /* allocation site */
      |                     ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc3f0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7ff1de7b4750>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc4c8
    type <pointer_type 0x7ff1de7a9888
        type <record_type 0x7ff1de7a97e0 section_addr_info BLK
            size <integer_cst 0x7ff1dec95078 constant 192>
            unit-size <integer_cst 0x7ff1dec95048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a97e0 fields <field_decl 0x7ff1de7a3688 num_sections> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9888>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7ff1de7b4798>
# .MEM_80 = VDEF <.MEM_75>
section_addrs_50 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
section_addrs_50->num_sections = _24;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:45: warning: use location
  139 |                 section_addrs->num_sections = sec_num;
      |                                             ^
section_addrs_50->num_sections = _24;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:45: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
sec_54 = _23->name;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^
make_cleanup (free, section_addrs_50);
./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17: warning: use location
  122 |                 make_cleanup (free, section_addrs);
      |                 ^
this stmt is child function---make_cleanup-----

 ================== trace ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
[40;36m ======= relate stmt argument:section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
[40;36m ======= relate stmt argument:section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
[40;36m ======= relate stmt argument:section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
section_addrs_50 = malloc (24);
./benchmarks/binutils/leak_6/binutils_leak_6.c:121:33: warning: use location
  121 |                 section_addrs = malloc (sizeof(struct section_addr_info));
      |                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc4c8
    type <pointer_type 0x7ff1de7a9888
        type <record_type 0x7ff1de7a97e0 section_addr_info BLK
            size <integer_cst 0x7ff1dec95078 constant 192>
            unit-size <integer_cst 0x7ff1dec95048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a97e0 fields <field_decl 0x7ff1de7a3688 num_sections> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9888>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7ff1de7b4798>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7ff1dee73cc0
    type <pointer_type 0x7ff1de7a0dc8
        type <function_type 0x7ff1de7a0d20 type <void_type 0x7ff1dec8cf18 void>
            QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7ff1de7a24b0 value <pointer_type 0x7ff1dec93000>
                chain <tree_list 0x7ff1dec8bb18 value <void_type 0x7ff1dec8cf18 void>>> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0dc8>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <function_decl 0x7ff1de7a1f00 null_cleanup type <function_type 0x7ff1de7a0d20>
        readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7ff1de7b01e0>
        result <result_decl 0x7ff1dec82348 D.4471 type <void_type 0x7ff1dec8cf18 void>
            ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
            align:8 warn_if_not_align:0 context <function_decl 0x7ff1de7a1f00 null_cleanup>>
        arguments <parm_decl 0x7ff1de7ad300 arg type <pointer_type 0x7ff1dec93000>
            unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7ff1de7a1f00 null_cleanup> arg-type <pointer_type 0x7ff1dec93000>>
        struct-function 0x7ff1de7b1228>
    ./benchmarks/binutils/leak_6/binutils_leak_6.c:59:46 start: ./benchmarks/binutils/leak_6/binutils_leak_6.c:59:46 finish: ./benchmarks/binutils/leak_6/binutils_leak_6.c:59:46>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff1de7b43d8 type <integer_type 0x7ff1de7a0738 size_t> constant 64>

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc2d0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7ff1de7b4720>
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = sect_opts_36 + _22;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
sec_54 = _23->name;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
Cond in fucntion add_symbol_file_command basic block 15
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 17
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_28 != 0B)
bb index := 18
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^
if (arg_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
Cond in fucntion add_symbol_file_command basic block 18
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 5
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc2d0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7ff1de7b4720>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc2d0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7ff1de7b4720>
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = sect_opts_36 + _22;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
sec_54 = _23->name;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
Cond in fucntion add_symbol_file_command basic block 15
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 17
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_28 != 0B)
bb index := 18
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^
if (arg_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
Cond in fucntion add_symbol_file_command basic block 18
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 5
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc2d0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7ff1de7b4720>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc090
    type <pointer_type 0x7ff1de7a0930
        type <integer_type 0x7ff1de7a0888 char public QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1dec8c3f0 precision:8 min <integer_cst 0x7ff1de797768 -128> max <integer_cst 0x7ff1de797750 127>
            pointer_to_this <pointer_type 0x7ff1de7a0930>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7ff1de7a8000>>
    var <var_decl 0x7ff1de7b93f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7ff1de7b46f0>
arg_28 = PHI <arg_48(4), arg_73(17)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
Cond in fucntion add_symbol_file_command basic block 15
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 17
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_28 != 0B)
bb index := 18
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^
if (arg_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
Cond in fucntion add_symbol_file_command basic block 18
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 5
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc090
    type <pointer_type 0x7ff1de7a0930
        type <integer_type 0x7ff1de7a0888 char public QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1dec8c3f0 precision:8 min <integer_cst 0x7ff1de797768 -128> max <integer_cst 0x7ff1de797750 127>
            pointer_to_this <pointer_type 0x7ff1de7a0930>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7ff1de7a8000>>
    var <var_decl 0x7ff1de7b93f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7ff1de7b46f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff1de7b44c8 type <integer_type 0x7ff1dec8c7e0 long unsigned int> constant 24>

dot graph START

======================================================================
 <addr_expr 0x7ff1dee73e60
    type <pointer_type 0x7ff1de7a0dc8
        type <function_type 0x7ff1de7a0d20 type <void_type 0x7ff1dec8cf18 void>
            QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7ff1de7a24b0 value <pointer_type 0x7ff1dec93000>
                chain <tree_list 0x7ff1dec8bb18 value <void_type 0x7ff1dec8cf18 void>>> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0dc8>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <function_decl 0x7ff1de7a7200 free type <function_type 0x7ff1de7a0d20>
        addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
        align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        attributes <tree_list 0x7ff1de7a27f8
            purpose <identifier_node 0x7ff1decb1e10 nothrow>
            chain <tree_list 0x7ff1de7a27d0
                purpose <identifier_node 0x7ff1decb1e38 leaf>>>>
    ./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17 start: ./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17 finish: ./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc3a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7b9120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7ff1de7b4738>
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);

 ================== trace ptable================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---make_cleanup-----
this other function ------make_cleanup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
bb index := 2
# VUSE <.MEM_83>
return;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
bb index := 2
# VUSE <.MEM_15>
return;
./benchmarks/binutils/leak_6/../include/common.h:114:1: warning: use location
  114 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_15>
return;
./benchmarks/binutils/leak_6/../include/common.h:114:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
In function â€˜mainâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:59:39: warning: use location
   59 |         struct cleanup *my_cleanups = make_cleanup (null_cleanup, NULL);
      |                                       ^
this stmt is child function---make_cleanup-----

 ================== trace ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_83 = VDEF <.MEM_82>
do_cleanups (my_cleanups_44);
do_cleanups (my_cleanups_44);
./benchmarks/binutils/leak_6/binutils_leak_6.c:141:17: warning: use location
  141 |                 do_cleanups (my_cleanups);
      |                 ^
this stmt is child function---do_cleanups-----

 ================== trace ================== 
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_83 = VDEF <.MEM_82>
do_cleanups (my_cleanups_44);
do_cleanups (my_cleanups_44);
./benchmarks/binutils/leak_6/binutils_leak_6.c:141:17: warning: use location
  141 |                 do_cleanups (my_cleanups);
      |                 ^
this stmt is child function---do_cleanups-----

 ================== trace ================== 
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc3a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7b9120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7ff1de7b4738>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:add_symbol_file_command========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1dee73c00
    type <pointer_type 0x7ff1de7aa5e8
        type <array_type 0x7ff1de7aa0a8 type <pointer_type 0x7ff1de7a83f0>
            BLK
            size <integer_cst 0x7ff1ded4c0a8 constant 384>
            unit-size <integer_cst 0x7ff1de797858 constant 48>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7ff1de7a99d8>
            pointer_to_this <pointer_type 0x7ff1de7aa5e8>>
        unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7ff1df51fcf0 args type <array_type 0x7ff1de7aa0a8>
        addressable BLK ./benchmarks/binutils/leak_6/binutils_leak_6.c:148:14 size <integer_cst 0x7ff1ded4c0a8 384> unit-size <integer_cst 0x7ff1de797858 48>
        align:64 warn_if_not_align:0 context <function_decl 0x7ff1de7a7300 main>>
    ./benchmarks/binutils/leak_6/binutils_leak_6.c:149:26 start: ./benchmarks/binutils/leak_6/binutils_leak_6.c:149:26 finish: ./benchmarks/binutils/leak_6/binutils_leak_6.c:149:26>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:add_symbol_file_command========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path add_symbol_file_command  function_call count: 6 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c41e0
    type <pointer_type 0x7ff1de7a83f0
        type <integer_type 0x7ff1de7a8348 char readonly QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1dec8c3f0 precision:8 min <integer_cst 0x7ff1de797768 -128> max <integer_cst 0x7ff1de797750 127>
            pointer_to_this <pointer_type 0x7ff1de7a83f0>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7ff1dec81268 type <integer_type 0x7ff1de7a8348 char>
       
        arg:0 <string_cst 0x7ff1de7bf900 type <array_type 0x7ff1de7a8b28>
            readonly constant static "cleanup!!!!! =========\000">
        arg:1 <integer_cst 0x7ff1dec77f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c4240
    type <pointer_type 0x7ff1de7a8dc8
        type <array_type 0x7ff1de7a8d20 type <integer_type 0x7ff1de7a0888 char>
            SI
            size <integer_cst 0x7ff1dec77df8 constant 32>
            unit-size <integer_cst 0x7ff1dec77e10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7ff1de7a8c78>
            pointer_to_this <pointer_type 0x7ff1de7a8dc8>>
        unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7ff1de7c4220 type <array_type 0x7ff1de7a8d20>
        readonly constant static "%x\012\000">
    ./benchmarks/binutils/leak_6/../include/common.h:108:11 start: ./benchmarks/binutils/leak_6/../include/common.h:108:11 finish: ./benchmarks/binutils/leak_6/../include/common.h:108:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c4140
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7ff1df51fb40 cleanup_chain type <pointer_type 0x7ff1de7a0f18>
        addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7ff1dec77ba0>>
    ./benchmarks/binutils/leak_6/../include/common.h:118:3 start: ./benchmarks/binutils/leak_6/../include/common.h:118:3 finish: ./benchmarks/binutils/leak_6/../include/common.h:118:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;42m =======pre add _ fucntion:make_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4 = malloc (32);
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff1de7b4450 type <integer_type 0x7ff1dec8c7e0 long unsigned int> constant 32>
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7c31b0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff1de7ad480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7ff1de7b4888>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate stmt argument:pmy_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate stmt argument:pmy_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7c31b0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff1de7ad480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7ff1de7b4888>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1dee73fe0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7ff1df51fb40 cleanup_chain type <pointer_type 0x7ff1de7a0f18>
        addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7ff1dec77ba0>>
    ./benchmarks/binutils/leak_6/../include/common.h:151:10 start: ./benchmarks/binutils/leak_6/../include/common.h:151:10 finish: ./benchmarks/binutils/leak_6/../include/common.h:151:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:strcmp========= [0m
[40;33m =======POP node_fun stack:strcmp========= [0m
[40;42m =======pre add _ fucntion:xrealloc========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path xrealloc  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bcea0
    type <pointer_type 0x7ff1dec93000
        type <void_type 0x7ff1dec8cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1dec93000>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1dec989d8>>
    var <var_decl 0x7ff1de7b9cf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7ff1de7b4828>
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜xreallocâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
newmem_5 = realloc (oldmem_3(D), _6);
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
this stmt is child function---realloc-----

 ================== find ================== 
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newmem_5 == 0B)
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜xreallocâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newmem_5 == 0B)
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (newmem_5 == 0B)
In function â€˜add_symbol_file_commandâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^
if (newmem_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bcea0
    type <pointer_type 0x7ff1dec93000
        type <void_type 0x7ff1dec8cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1dec93000>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1dec989d8>>
    var <var_decl 0x7ff1de7b9cf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7ff1de7b4828>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: Use after free error!: free location 
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: Use after free error!: free location 
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;42m =======pre_check_funciton:add_symbol_file_command========= [0m
[40;42m =======start_check_funciton:add_symbol_file_command========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc3f0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7ff1de7b4750>
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
bb index := 18
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = sect_opts_36 + _22;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
sec_54 = _23->name;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
Cond in fucntion add_symbol_file_command basic block 15
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 17
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_28 != 0B)
bb index := 18
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^
if (arg_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
Cond in fucntion add_symbol_file_command basic block 18
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 5
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
bb index := 2
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_79 = VDEF <.MEM_78>
sect_opts_46 = malloc (64);
bb index := 2
# VUSE <.MEM_15>
return;
./benchmarks/binutils/leak_6/../include/common.h:114:1: warning: use location
  114 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_15>
return;
./benchmarks/binutils/leak_6/../include/common.h:114:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================
sect_opts_46 = malloc (64);
./benchmarks/binutils/leak_6/binutils_leak_6.c:66:21: warning: use location
   66 |         sect_opts = xmalloc (sizeof(struct sect_opt) * num_sect_opts); /* allocation site */
      |                     ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc3f0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_46 = malloc (64);
    version:46
    ptr-info 0x7ff1de7b4750>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc4c8
    type <pointer_type 0x7ff1de7a9888
        type <record_type 0x7ff1de7a97e0 section_addr_info BLK
            size <integer_cst 0x7ff1dec95078 constant 192>
            unit-size <integer_cst 0x7ff1dec95048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a97e0 fields <field_decl 0x7ff1de7a3688 num_sections> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9888>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7ff1de7b4798>
# .MEM_80 = VDEF <.MEM_75>
section_addrs_50 = malloc (24);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================
section_addrs_50->num_sections = _24;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:45: warning: use location
  139 |                 section_addrs->num_sections = sec_num;
      |                                             ^
section_addrs_50->num_sections = _24;
./benchmarks/binutils/leak_6/binutils_leak_6.c:139:45: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
sec_54 = _23->name;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^
make_cleanup (free, section_addrs_50);
./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17: warning: use location
  122 |                 make_cleanup (free, section_addrs);
      |                 ^
this stmt is child function---make_cleanup-----

 ================== trace ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
[40;36m ======= relate stmt argument:section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
[40;36m ======= relate stmt argument:section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with section_addrs ========= [0m
[40;36m ======= relate stmt argument:section_addrs ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
section_addrs_50 = malloc (24);
./benchmarks/binutils/leak_6/binutils_leak_6.c:121:33: warning: use location
  121 |                 section_addrs = malloc (sizeof(struct section_addr_info));
      |                                 ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc4c8
    type <pointer_type 0x7ff1de7a9888
        type <record_type 0x7ff1de7a97e0 section_addr_info BLK
            size <integer_cst 0x7ff1dec95078 constant 192>
            unit-size <integer_cst 0x7ff1dec95048 constant 24>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a97e0 fields <field_decl 0x7ff1de7a3688 num_sections> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9888>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9090 section_addrs>
    def_stmt section_addrs_50 = malloc (24);
    version:50
    ptr-info 0x7ff1de7b4798>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7ff1dee73cc0
    type <pointer_type 0x7ff1de7a0dc8
        type <function_type 0x7ff1de7a0d20 type <void_type 0x7ff1dec8cf18 void>
            QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7ff1de7a24b0 value <pointer_type 0x7ff1dec93000>
                chain <tree_list 0x7ff1dec8bb18 value <void_type 0x7ff1dec8cf18 void>>> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0dc8>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <function_decl 0x7ff1de7a1f00 null_cleanup type <function_type 0x7ff1de7a0d20>
        readonly addressable nothrow static function-specific-target function-specific-opt uninlinable QI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1 align:8 warn_if_not_align:0 context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <block 0x7ff1de7b01e0>
        result <result_decl 0x7ff1dec82348 D.4471 type <void_type 0x7ff1dec8cf18 void>
            ignored VOID ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:1
            align:8 warn_if_not_align:0 context <function_decl 0x7ff1de7a1f00 null_cleanup>>
        arguments <parm_decl 0x7ff1de7ad300 arg type <pointer_type 0x7ff1dec93000>
            unsigned DI ./benchmarks/binutils/leak_6/binutils_leak_6.c:28:21 size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
            align:64 warn_if_not_align:0 context <function_decl 0x7ff1de7a1f00 null_cleanup> arg-type <pointer_type 0x7ff1dec93000>>
        struct-function 0x7ff1de7b1228>
    ./benchmarks/binutils/leak_6/binutils_leak_6.c:59:46 start: ./benchmarks/binutils/leak_6/binutils_leak_6.c:59:46 finish: ./benchmarks/binutils/leak_6/binutils_leak_6.c:59:46>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff1de7b43d8 type <integer_type 0x7ff1de7a0738 size_t> constant 64>

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc2d0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7ff1de7b4720>
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = sect_opts_36 + _22;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
sec_54 = _23->name;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
Cond in fucntion add_symbol_file_command basic block 15
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 17
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_28 != 0B)
bb index := 18
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^
if (arg_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
Cond in fucntion add_symbol_file_command basic block 18
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 5
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc2d0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7ff1de7b4720>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc2d0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7ff1de7b4720>
sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_23 = sect_opts_36 + _22;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_76>
sec_54 = _23->name;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
bb index := 22
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 22 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: use location
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:1 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
Cond in fucntion add_symbol_file_command basic block 15
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 17
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_28 != 0B)
bb index := 18
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^
if (arg_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
Cond in fucntion add_symbol_file_command basic block 18
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 5
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: use location
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
this stmt is child function---xrealloc-----

 ================== trace ================== 
trace fucntion name:xrealloc 
[40;44m =======trace_function_path xrealloc  function_call count: 2 level :0========  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
[40;31m  find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
[40;36m ======= node_fun:xrealloc========= [0m
[40;36m ======= find relate stmt with sect_opts ========= [0m
[40;36m ======= relate stmt argument:sect_opts ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;46m =======add node_fun stack:realloc========= [0m

 ================== trace ================== 
trace fucntion free:2 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = sect_opts_36 + _2;
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:50: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                  ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3->name = ".text";
./benchmarks/binutils/leak_6/binutils_leak_6.c:78:71: warning: use location
   78 |                                         sect_opts[section_index].name = ".text";
      |                                                                       ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc2d0
    type <pointer_type 0x7ff1de7a9540
        type <record_type 0x7ff1de7a9498 sect_opt TI
            size <integer_cst 0x7ff1dec77c00 constant 128>
            unit-size <integer_cst 0x7ff1dec77c18 constant 16>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a9498 fields <field_decl 0x7ff1de7a3428 name> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a9540>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7ff1de7b9000 sect_opts>
    def_stmt sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
    version:36
    ptr-info 0x7ff1de7b4720>

 ================== Start Use after free Check ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
_23 = sect_opts_36 + _22;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:60: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                                            ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_76>
sec_54 = _23->name;
./benchmarks/binutils/leak_6/binutils_leak_6.c:127:45: warning: use location
  127 |                                 const char *sec = sect_opts[i].name;
      |                                             ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_84 = VDEF <.MEM_76>
section_addrs_50->other[sec_num_27].name = sec_54;
./benchmarks/binutils/leak_6/binutils_leak_6.c:131:68: warning: use location
  131 |                                 section_addrs->other[sec_num].name = (char *) sec;
      |                                                                    ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
lto1: warning: use location

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
_14 = sect_opts_36 + _13;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:66: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_87 = VDEF <.MEM_75>
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# VUSE <.MEM_75>
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_88 = VDEF <.MEM_87>
sect_opts_64 = xrealloc (sect_opts_36, _16);
./benchmarks/binutils/leak_6/binutils_leak_6.c:104:98: warning: Use after free error!: free location 
  104 |                                                                                                  xrealloc (sect_opts, num_sect_opts
      |                                                                                                  ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

============================================================
# .MEM_92 = VDEF <.MEM_91>
sect_opts_71 = xrealloc (sect_opts_36, _8);
./benchmarks/binutils/leak_6/binutils_leak_6.c:84:81: warning: Use after free error!: free location 
   84 |                                                                                 xrealloc (sect_opts, num_sect_opts
      |                                                                                 ^
# .MEM_89 = VDEF <.MEM_75>
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

 ================== warring ================== 
[40;35m    Use after free error! [0m
=======================Path Constaint===========================

=======================Path Constaint===========================


 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc090
    type <pointer_type 0x7ff1de7a0930
        type <integer_type 0x7ff1de7a0888 char public QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1dec8c3f0 precision:8 min <integer_cst 0x7ff1de797768 -128> max <integer_cst 0x7ff1de797750 127>
            pointer_to_this <pointer_type 0x7ff1de7a0930>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7ff1de7a8000>>
    var <var_decl 0x7ff1de7b93f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7ff1de7b46f0>
arg_28 = PHI <arg_48(4), arg_73(17)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_17 = strcmp (arg_28, "-s");
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:50: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                  ^
this stmt is child function---strcmp-----

 ================== trace ================== 
trace fucntion name:strcmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_17 == 0)
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
  108 |                                         else if (strcmp (arg, "-s") == 0)
      |                                                 ^
if (_17 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:108:49: warning: use location
Cond in fucntion add_symbol_file_command basic block 15
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 17
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (arg_28 != 0B)
bb index := 18
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 18 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (arg_28 != 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
   71 |         for (arg = args[0]; arg != NULL; arg = args[++argcnt])
      |                                 ^
if (arg_28 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:71:33: warning: use location
Cond in fucntion add_symbol_file_command basic block 18
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 5
 ================== possible direct basic block ================= 
from add_symbol_file_command basic block 19
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location
   97 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_14->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:97:88: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_11->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:92:88: warning: use location
   92 |                                                         sect_opts[section_index].value = arg;
      |                                                                                        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6->value = arg_28;
./benchmarks/binutils/leak_6/binutils_leak_6.c:79:72: warning: use location
   79 |                                         sect_opts[section_index].value = arg;
      |                                                                        ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc090
    type <pointer_type 0x7ff1de7a0930
        type <integer_type 0x7ff1de7a0888 char public QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1dec8c3f0 precision:8 min <integer_cst 0x7ff1de797768 -128> max <integer_cst 0x7ff1de797750 127>
            pointer_to_this <pointer_type 0x7ff1de7a0930>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        pointer_to_this <pointer_type 0x7ff1de7a8000>>
    var <var_decl 0x7ff1de7b93f0 arg>
    def_stmt arg_28 = PHI <arg_48(4), arg_73(17)>
    version:28
    ptr-info 0x7ff1de7b46f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff1de7b44c8 type <integer_type 0x7ff1dec8c7e0 long unsigned int> constant 24>

dot graph START

======================================================================
 <addr_expr 0x7ff1dee73e60
    type <pointer_type 0x7ff1de7a0dc8
        type <function_type 0x7ff1de7a0d20 type <void_type 0x7ff1dec8cf18 void>
            QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            arg-types <tree_list 0x7ff1de7a24b0 value <pointer_type 0x7ff1dec93000>
                chain <tree_list 0x7ff1dec8bb18 value <void_type 0x7ff1dec8cf18 void>>> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0dc8>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <function_decl 0x7ff1de7a7200 free type <function_type 0x7ff1de7a0d20>
        addressable nothrow public external in_system_header built-in QI /usr/include/stdlib.h:565:13
        align:8 warn_if_not_align:0 built-in: BUILT_IN_NORMAL:BUILT_IN_FREE context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
        attributes <tree_list 0x7ff1de7a27f8
            purpose <identifier_node 0x7ff1decb1e10 nothrow>
            chain <tree_list 0x7ff1de7a27d0
                purpose <identifier_node 0x7ff1decb1e38 leaf>>>>
    ./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17 start: ./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17 finish: ./benchmarks/binutils/leak_6/binutils_leak_6.c:122:17>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bc3a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7b9120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7ff1de7b4738>
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);

 ================== trace ptable================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :889========  [0m
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :890========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---make_cleanup-----
this other function ------make_cleanup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
bb index := 2
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
  143 |                 return; /* memory leak */
      |                 ^
beacuse in succ := 24 have return or exit
# VUSE <.MEM_83>
return;
./benchmarks/binutils/leak_6/binutils_leak_6.c:143:17: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 24

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_78 = VDEF <.MEM_77(D)>
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
bb index := 2
# VUSE <.MEM_15>
return;
./benchmarks/binutils/leak_6/../include/common.h:114:1: warning: use location
  114 | }
      | ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_15>
return;
./benchmarks/binutils/leak_6/../include/common.h:114:1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
./benchmarks/binutils/leak_6/binutils_leak_6.c:59:39: warning: use location
   59 |         struct cleanup *my_cleanups = make_cleanup (null_cleanup, NULL);
      |                                       ^
this stmt is child function---make_cleanup-----

 ================== trace ================== 
trace fucntion name:make_cleanup 
[40;44m =======trace_function_path make_cleanup  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:make_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;46m =======add node_fun stack:make_my_cleanup========= [0m
[40;44m =======trace_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:make_my_cleanup========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;46m =======add node_fun stack:make_my_cleanup2========= [0m
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_83 = VDEF <.MEM_82>
do_cleanups (my_cleanups_44);
do_cleanups (my_cleanups_44);
./benchmarks/binutils/leak_6/binutils_leak_6.c:141:17: warning: use location
  141 |                 do_cleanups (my_cleanups);
      |                 ^
this stmt is child function---do_cleanups-----

 ================== trace ================== 
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:1 
# .MEM_83 = VDEF <.MEM_82>
do_cleanups (my_cleanups_44);
do_cleanups (my_cleanups_44);
./benchmarks/binutils/leak_6/binutils_leak_6.c:141:17: warning: use location
  141 |                 do_cleanups (my_cleanups);
      |                 ^
this stmt is child function---do_cleanups-----

 ================== trace ================== 
trace fucntion name:do_cleanups 
[40;44m =======trace_function_path do_cleanups  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:do_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;46m =======add node_fun stack:do_my_cleanups========= [0m
[40;44m =======trace_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
[40;31m  find free stmt free same pointer [0m
# .MEM_22 = VDEF <.MEM_14>
free (ptr_12);
./benchmarks/binutils/leak_6/../include/common.h:112:25: warning: use location
  112 |                         free (ptr);
      |                         ^
[40;36m ======= node_fun:do_my_cleanups========= [0m
[40;36m ======= find relate stmt with my_cleanups ========= [0m
[40;36m ======= relate stmt argument:my_cleanups ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:free========= [0m
[40;46m =======add node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;46m =======add node_fun stack:__builtin_puts========= [0m

 ================== trace ================== 
trace fucntion free:2 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bc3a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7b9120 my_cleanups>
    def_stmt my_cleanups_44 = make_cleanup (null_cleanup, 0B);
    version:44
    ptr-info 0x7ff1de7b4738>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================
[40;33m =======POP node_fun stack:add_symbol_file_command========= [0m
[40;44m =======node_fun:xrealloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path xrealloc  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:realloc========= [0m
[40;33m =======POP node_fun stack:realloc========= [0m
[40;42m =======pre_check_funciton:xrealloc========= [0m
[40;42m =======start_check_funciton:xrealloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7bcea0
    type <pointer_type 0x7ff1dec93000
        type <void_type 0x7ff1dec8cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1dec93000>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1dec989d8>>
    var <var_decl 0x7ff1de7b9cf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7ff1de7b4828>
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);

 ================== trace ptable================== 
trace fucntion name:realloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---realloc-----
this Reserved word function ------realloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜xreallocâ€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
this stmt is child function---realloc-----

 ================== find ================== 
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
[40;32m    FIND REALLOC STMT count:1 name:realloc [0m
[40;32m    this stmt possiable free memory [0m

 ================== find ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newmem_5 == 0B)
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (newmem_5 == 0B)
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^
if (newmem_5 == 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
Cond in fucntion xrealloc basic block 2
 ================== possible direct basic block ================= 
from xrealloc basic block 3
 ================== possible direct basic block ================= 
from xrealloc basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7bcea0
    type <pointer_type 0x7ff1dec93000
        type <void_type 0x7ff1dec8cf18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1dec93000>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1dec989d8>>
    var <var_decl 0x7ff1de7b9cf0 newmem>
    def_stmt newmem_5 = realloc (oldmem_3(D), _6);
    version:5
    ptr-info 0x7ff1de7b4828>
[40;35m <Looserules> find realloc stmt free same pointer [0m
*/If realloc() fails, the initial memory block will not be freed() */# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: use location
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: Use after free error!: free location 
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_8 = VDEF <.MEM_7(D)>
newmem_5 = realloc (oldmem_3(D), _6);
./benchmarks/binutils/leak_6/binutils_leak_6.c:40:12: warning: Use after free error!: free location 
   40 |   newmem = realloc (oldmem, size); /* allocation site */
      |            ^
if (newmem_5 == 0B)
./benchmarks/binutils/leak_6/binutils_leak_6.c:42:6: warning: use location
   42 |   if (!newmem)
      |      ^

 ================== warring ================== 
[40;35m  realloc Use after free error! [0m

 ================== warring ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:1 [0m
[40;31m  	free count:1 [0m

======================================================================

======================================================================
[40;32m   Maybe you don't have memory leak.... need more checks  [0m

======================================================================

[40;33m =======POP node_fun stack:xrealloc========= [0m
[40;44m =======node_fun:null_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path null_cleanup  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:null_cleanup========= [0m
[40;42m =======start_check_funciton:null_cleanup========= [0m
[40;33m =======POP node_fun stack:null_cleanup========= [0m
[40;44m =======node_fun:make_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4 = malloc (32);
In function â€˜make_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff1de7b4450 type <integer_type 0x7ff1dec8c7e0 long unsigned int> constant 32>
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7c31b0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff1de7ad480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7ff1de7b4888>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate stmt argument:pmy_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate stmt argument:pmy_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7c31b0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff1de7ad480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7ff1de7b4888>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;42m =======pre_check_funciton:make_cleanup========= [0m
[40;42m =======start_check_funciton:make_cleanup========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1dee73fe0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7ff1df51fb40 cleanup_chain type <pointer_type 0x7ff1de7a0f18>
        addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7ff1dec77ba0>>
    ./benchmarks/binutils/leak_6/../include/common.h:151:10 start: ./benchmarks/binutils/leak_6/../include/common.h:151:10 finish: ./benchmarks/binutils/leak_6/../include/common.h:151:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:make_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:make_my_cleanup2========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4 = malloc (32);
In function â€˜make_my_cleanupâ€™:
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff1de7b4450 type <integer_type 0x7ff1dec8c7e0 long unsigned int> constant 32>
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup========= [0m
[40;42m =======start_check_funciton:make_my_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7c31b0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff1de7ad480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7ff1de7b4888>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
  145 |   return make_my_cleanup2 (pmy_chain, function, arg, NULL);
      |          ^
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate stmt argument:pmy_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
./benchmarks/binutils/leak_6/../include/common.h:145:10: warning: use location
this stmt is child function---make_my_cleanup2-----

 ================== trace ================== 
trace fucntion name:make_my_cleanup2 
[40;44m =======trace_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:make_my_cleanup2========= [0m
[40;36m ======= find relate stmt with pmy_chain ========= [0m
[40;36m ======= relate stmt argument:pmy_chain ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:exit========= [0m
[40;46m =======add node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7c31b0
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7ff1de7ad480 pmy_chain>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7ff1de7b4888>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:make_my_cleanup========= [0m
[40;44m =======node_fun:make_my_cleanup2========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path make_my_cleanup2  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:make_my_cleanup2========= [0m
[40;42m =======start_check_funciton:make_my_cleanup2========= [0m

dot graph START

======================================================================
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);

 ================== trace ptable================== 
trace fucntion name:malloc 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---malloc-----
this Reserved word function ------malloc-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
In function â€˜make_my_cleanup2â€™:
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_19 = VDEF <.MEM_18>
*pmy_chain_5(D) = new_4;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
*pmy_chain_5(D) = new_4;
./benchmarks/binutils/leak_6/../include/common.h:133:14: warning: use location
  133 |   *pmy_chain = new;
      |              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_18 = VDEF <.MEM_17>
new_4->arg = arg_12(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->arg = arg_12(D);
./benchmarks/binutils/leak_6/../include/common.h:132:12: warning: use location
  132 |   new->arg = arg;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_17 = VDEF <.MEM_16>
new_4->free_arg = free_arg_10(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->free_arg = free_arg_10(D);
./benchmarks/binutils/leak_6/../include/common.h:131:17: warning: use location
  131 |   new->free_arg = free_arg;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_16 = VDEF <.MEM_15>
new_4->function = function_8(D);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->function = function_8(D);
./benchmarks/binutils/leak_6/../include/common.h:130:17: warning: use location
  130 |   new->function = function;
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
new_4->next = _1;
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4->next = _1;
./benchmarks/binutils/leak_6/../include/common.h:129:13: warning: use location
  129 |   new->next = *pmy_chain;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
   45 |   return (newmem);
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_8>
return newmem_5;
./benchmarks/binutils/leak_6/binutils_leak_6.c:45:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
new_4 = malloc (32);
bb index := 2
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
  138 |   return old_chain;
      |          ^
beacuse in succ := 4 have return or exit
# VUSE <.MEM_19>
return old_chain_6;
./benchmarks/binutils/leak_6/../include/common.h:138:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 4

======================================================================
new_4 = malloc (32);
./benchmarks/binutils/leak_6/../include/common.h:126:26: warning: use location
  126 |     = (struct cleanup *) malloc (sizeof (struct cleanup));
      |                          ^
this stmt is child function---malloc-----

 ================== trace ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7ff1de7c33a8
    type <pointer_type 0x7ff1de7a0f18
        type <record_type 0x7ff1de7a0e70 cleanup BLK
            size <integer_cst 0x7ff1dec77f18 constant 256>
            unit-size <integer_cst 0x7ff1dec95018 constant 32>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1de7a0e70 fields <field_decl 0x7ff1de7a32f8 next> context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c>
            pointer_to_this <pointer_type 0x7ff1de7a0f18>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7ff1de7a8930>>
    var <var_decl 0x7ff1de7c2240 new>
    def_stmt new_4 = malloc (32);
    version:4
    ptr-info 0x7ff1de7b4900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7ff1de7b4450 type <integer_type 0x7ff1dec8c7e0 long unsigned int> constant 32>
[40;33m =======POP node_fun stack:make_my_cleanup2========= [0m
[40;44m =======node_fun:do_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_cleanups  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:do_my_cleanups========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c41e0
    type <pointer_type 0x7ff1de7a83f0
        type <integer_type 0x7ff1de7a8348 char readonly QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1dec8c3f0 precision:8 min <integer_cst 0x7ff1de797768 -128> max <integer_cst 0x7ff1de797750 127>
            pointer_to_this <pointer_type 0x7ff1de7a83f0>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7ff1dec81268 type <integer_type 0x7ff1de7a8348 char>
       
        arg:0 <string_cst 0x7ff1de7bf900 type <array_type 0x7ff1de7a8b28>
            readonly constant static "cleanup!!!!! =========\000">
        arg:1 <integer_cst 0x7ff1dec77f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c4240
    type <pointer_type 0x7ff1de7a8dc8
        type <array_type 0x7ff1de7a8d20 type <integer_type 0x7ff1de7a0888 char>
            SI
            size <integer_cst 0x7ff1dec77df8 constant 32>
            unit-size <integer_cst 0x7ff1dec77e10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7ff1de7a8c78>
            pointer_to_this <pointer_type 0x7ff1de7a8dc8>>
        unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7ff1de7c4220 type <array_type 0x7ff1de7a8d20>
        readonly constant static "%x\012\000">
    ./benchmarks/binutils/leak_6/../include/common.h:108:11 start: ./benchmarks/binutils/leak_6/../include/common.h:108:11 finish: ./benchmarks/binutils/leak_6/../include/common.h:108:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
[40;42m =======pre_check_funciton:do_cleanups========= [0m
[40;42m =======start_check_funciton:do_cleanups========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c4140
    type <pointer_type 0x7ff1de7a8930
        type <pointer_type 0x7ff1de7a0f18 type <record_type 0x7ff1de7a0e70 cleanup>
            public unsigned DI
            size <integer_cst 0x7ff1dec77bb8 constant 64>
            unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7ff1de7a8930>>
        public unsigned DI size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <var_decl 0x7ff1df51fb40 cleanup_chain type <pointer_type 0x7ff1de7a0f18>
        addressable static unsigned DI ./benchmarks/binutils/leak_6/../include/common.h:49:24 size <integer_cst 0x7ff1dec77bb8 64> unit-size <integer_cst 0x7ff1dec77bd0 8>
        align:64 warn_if_not_align:0 context <translation_unit_decl 0x7ff1dec82168 ./benchmarks/binutils/leak_6/binutils_leak_6.c> initial <error_mark 0x7ff1dec77ba0>>
    ./benchmarks/binutils/leak_6/../include/common.h:118:3 start: ./benchmarks/binutils/leak_6/../include/common.h:118:3 finish: ./benchmarks/binutils/leak_6/../include/common.h:118:3>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:do_cleanups========= [0m
[40;44m =======node_fun:do_my_cleanups========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_my_cleanups  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:__builtin_puts========= [0m
[40;33m =======POP node_fun stack:__builtin_puts========= [0m
[40;42m =======pre_check_funciton:do_my_cleanups========= [0m
[40;42m =======start_check_funciton:do_my_cleanups========= [0m

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c41e0
    type <pointer_type 0x7ff1de7a83f0
        type <integer_type 0x7ff1de7a8348 char readonly QI
            size <integer_cst 0x7ff1dec77ca8 constant 8>
            unit-size <integer_cst 0x7ff1dec77cc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7ff1dec8c3f0 precision:8 min <integer_cst 0x7ff1de797768 -128> max <integer_cst 0x7ff1de797750 127>
            pointer_to_this <pointer_type 0x7ff1de7a83f0>>
        public unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    constant
    arg:0 <array_ref 0x7ff1dec81268 type <integer_type 0x7ff1de7a8348 char>
       
        arg:0 <string_cst 0x7ff1de7bf900 type <array_type 0x7ff1de7a8b28>
            readonly constant static "cleanup!!!!! =========\000">
        arg:1 <integer_cst 0x7ff1dec77f48 constant 0>>>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7ff1de7c4240
    type <pointer_type 0x7ff1de7a8dc8
        type <array_type 0x7ff1de7a8d20 type <integer_type 0x7ff1de7a0888 char>
            SI
            size <integer_cst 0x7ff1dec77df8 constant 32>
            unit-size <integer_cst 0x7ff1dec77e10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7ff1de7a8c78>
            pointer_to_this <pointer_type 0x7ff1de7a8dc8>>
        unsigned DI
        size <integer_cst 0x7ff1dec77bb8 constant 64>
        unit-size <integer_cst 0x7ff1dec77bd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7ff1de7c4220 type <array_type 0x7ff1de7a8d20>
        readonly constant static "%x\012\000">
    ./benchmarks/binutils/leak_6/../include/common.h:108:11 start: ./benchmarks/binutils/leak_6/../include/common.h:108:11 finish: ./benchmarks/binutils/leak_6/../include/common.h:108:11>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:do_my_cleanups========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
args[0] = "prog";
args[1] = "v";
args[2] = "-s";
args[3] = "idx";
args[4] = "addr";
args[5] = 0B;
add_symbol_file_command (&args);
args ={v} {CLOBBER};
return 0;

=======Mapping node_fun:add_symbol_file_command=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 59124318]:
my_cleanups_44 = make_cleanup (null_cleanup, 0B);
sect_opts_46 = malloc (64);
if (args_47(D) == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 23650]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 59100668]:
arg_48 = *args_47(D);
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686024]:
if (argcnt_33 == 0)
  goto <bb 6>; [33.00%]
else
  goto <bb 7>; [67.00%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 334846386]:
// predicted unlikely by continue predictor.
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 679839639]:
if (argcnt_33 == 1)
  goto <bb 8>; [34.00%]
else
  goto <bb 10>; [66.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [local count: 231145479]:
_1 = (long unsigned int) section_index_26;
_2 = _1 * 16;
_3 = sect_opts_36 + _2;
_3->name = ".text";
_4 = (long unsigned int) section_index_26;
_5 = _4 * 16;
_6 = sect_opts_36 + _5;
_6->value = arg_28;
section_index_68 = section_index_26 + 1;
_7 = (long unsigned int) section_index_68;
if (_7 >= num_sect_opts_38)
  goto <bb 9>; [33.00%]
else
  goto <bb 17>; [67.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [local count: 76278008]:
num_sect_opts_69 = num_sect_opts_38 * 2;
_8 = num_sect_opts_38 * 32;
sect_opts_71 = xrealloc (sect_opts_36, _8);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 10 
<bb 10> [local count: 448694159]:
if (expecting_sec_name_32 != 0)
  goto <bb 11>; [50.00%]
else
  goto <bb 12>; [50.00%]

=======is loop:1=========

 bb index 11 
<bb 11> [local count: 224347079]:
_9 = (long unsigned int) section_index_26;
_10 = _9 * 16;
_11 = sect_opts_36 + _10;
_11->value = arg_28;
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 224347079]:
if (expecting_sec_addr_30 != 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 15>; [50.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 112173540]:
_12 = (long unsigned int) section_index_26;
_13 = _12 * 16;
_14 = sect_opts_36 + _13;
_14->value = arg_28;
section_index_61 = section_index_26 + 1;
_15 = (long unsigned int) section_index_61;
if (_15 >= num_sect_opts_38)
  goto <bb 14>; [33.00%]
else
  goto <bb 17>; [67.00%]

=======is loop:1=========

 bb index 14 
<bb 14> [local count: 37017268]:
num_sect_opts_62 = num_sect_opts_38 * 2;
_16 = num_sect_opts_38 * 32;
sect_opts_64 = xrealloc (sect_opts_36, _16);
goto <bb 17>; [100.00%]

=======is loop:1=========

 bb index 15 
<bb 15> [local count: 112173540]:
_17 = strcmp (arg_28, "-s");
if (_17 == 0)
  goto <bb 17>; [99.96%]
else
  goto <bb 16>; [0.04%]

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 44869]:
exit (1);

=======is loop:1=========

 bb index 17 
<bb 17> [local count: 1014641157]:
# section_index_25 = PHI <section_index_26(6), section_index_68(8), section_index_68(9), section_index_26(11), section_index_61(13), section_index_61(14), section_index_26(15)>
# expecting_sec_addr_29 = PHI <expecting_sec_addr_30(6), expecting_sec_addr_30(8), expecting_sec_addr_30(9), 0(11), 0(13), 0(14), 1(15)>
# expecting_sec_name_31 = PHI <expecting_sec_name_32(6), expecting_sec_name_32(8), expecting_sec_name_32(9), expecting_sec_name_32(11), expecting_sec_name_32(13), expecting_sec_name_32(14), 1(15)>
# sect_opts_35 = PHI <sect_opts_36(6), sect_opts_36(8), sect_opts_71(9), sect_opts_36(11), sect_opts_36(13), sect_opts_64(14), sect_opts_36(15)>
# num_sect_opts_37 = PHI <num_sect_opts_38(6), num_sect_opts_38(8), num_sect_opts_69(9), num_sect_opts_38(11), num_sect_opts_38(13), num_sect_opts_62(14), num_sect_opts_38(15)>
argcnt_72 = argcnt_33 + 1;
_18 = (long unsigned int) argcnt_72;
_19 = _18 * 8;
_20 = args_47(D) + _19;
arg_73 = *_20;

=======is loop:1=========

 bb index 18 
<bb 18> [local count: 1073741824]:
# section_index_26 = PHI <0(4), section_index_25(17)>
# arg_28 = PHI <arg_48(4), arg_73(17)>
# expecting_sec_addr_30 = PHI <0(4), expecting_sec_addr_29(17)>
# expecting_sec_name_32 = PHI <0(4), expecting_sec_name_31(17)>
# argcnt_33 = PHI <0(4), argcnt_72(17)>
# sect_opts_36 = PHI <sect_opts_46(4), sect_opts_35(17)>
# num_sect_opts_38 = PHI <4(4), num_sect_opts_37(17)>
if (arg_28 != 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 19>; [5.50%]

=======is loop:0=========

 bb index 19 
<bb 19> [local count: 59055800]:
if (section_index_26 <= 0)
  goto <bb 20>; [0.04%]
else
  goto <bb 21>; [99.96%]

=======is loop:0=========

 bb index 20 
<bb 20> [local count: 23622]:
exit (1);

=======is loop:0=========

 bb index 21 
<bb 21> [local count: 59032178]:
section_addrs_50 = malloc (24);
make_cleanup (free, section_addrs_50);
goto <bb 23>; [100.00%]

=======is loop:1=========

 bb index 22 
<bb 22> [local count: 477623986]:
_21 = (long unsigned int) i_34;
_22 = _21 * 16;
_23 = sect_opts_36 + _22;
sec_54 = _23->name;
section_addrs_50->other[sec_num_27].name = sec_54;
sec_num_56 = sec_num_27 + 1;
i_57 = i_34 + 1;

=======is loop:1=========

 bb index 23 
<bb 23> [local count: 536656164]:
# sec_num_27 = PHI <0(21), sec_num_56(22)>
# i_34 = PHI <0(21), i_57(22)>
if (section_index_26 > i_34)
  goto <bb 22>; [89.00%]
else
  goto <bb 24>; [11.00%]

=======is loop:0=========

 bb index 24 
<bb 24> [local count: 59032178]:
_24 = (long unsigned int) sec_num_27;
section_addrs_50->num_sections = _24;
do_cleanups (my_cleanups_44);
return;

=======Mapping node_fun:xrealloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = MAX_EXPR <1, size_1(D)>;
newmem_5 = realloc (oldmem_3(D), _6);
if (newmem_5 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return newmem_5;

=======Mapping node_fun:null_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
return;

=======Mapping node_fun:make_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = make_my_cleanup (&cleanup_chain, function_2(D), arg_3(D));
return _5;

=======Mapping node_fun:make_my_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_6 = make_my_cleanup2 (pmy_chain_2(D), function_3(D), arg_4(D), 0B);
return _6;

=======Mapping node_fun:make_my_cleanup2=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
new_4 = malloc (32);
old_chain_6 = *pmy_chain_5(D);
_1 = *pmy_chain_5(D);
new_4->next = _1;
new_4->function = function_8(D);
new_4->free_arg = free_arg_10(D);
new_4->arg = arg_12(D);
*pmy_chain_5(D) = new_4;
if (old_chain_6 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
return old_chain_6;

=======Mapping node_fun:do_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
do_my_cleanups (&cleanup_chain, old_chain_2(D));
return;

=======Mapping node_fun:do_my_cleanups=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111598]:
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
_1 = ptr_12->next;
*pmy_chain_11(D) = _1;
_2 = ptr_12->function;
_3 = ptr_12->arg;
_2 (_3);
__builtin_puts (&"cleanup!!!!! ========="[0]);
_4 = ptr_12->arg;
printf ("%x\n", _4);
_5 = ptr_12->free_arg;
if (_5 != 0B)
  goto <bb 4>; [70.00%]
else
  goto <bb 5>; [30.00%]

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 668941161]:
_6 = ptr_12->free_arg;
_7 = ptr_12->arg;
_6 (_7);

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
free (ptr_12);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
ptr_12 = *pmy_chain_11(D);
if (ptr_12 != old_chain_13(D))
  goto <bb 3>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 118111600]:
return;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 1 [0m
[40;34m    find Entry point : 8 [0m
[40;34m    used_stmt array stack totalsize of : 0.002088 mb[0m
[40;34m    collect time: : 0.000322 s [0m
[40;34m    algorithm time: 0.115481 s [0m
[40;34m    gimple stmt count : : 112 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +2.1%|     +0.0%|
cplxlower                        |      |      |      |      |     +2.1%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -1.7%|     -0.6%|
copyprop                         |      |    +3|      |      |     -1.8%|     -0.6%|
reassoc              ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -30.4%|    -54.9%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts                           |      |      |      |      |     -0.9%|     -1.8%|
lim                              |      |      |      |      |     -0.9%|     -1.8%|
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +44.3%|   +126.2%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.3%|     -0.0%|
phiopt                           |      |      |      |      |     -0.3%|     -0.0%|
fab                  ------------|      |      |      |      |          |          |
dce                              |      |      |      |      |     -0.3%|     -0.0%|
crited                           |      |      |      |      |     -0.3%|     -0.0%|
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +72.4%|    +44.4%|
into_cfglayout                   |      |      |      |      |     -1.2%|     -0.5%|
jump                             |      |      |      |      |     -1.6%|     -1.0%|
subreg1                          |      |      |      |      |     -0.4%|     -0.4%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -1.2%|     -1.2%|
ce1                              |      |      |      |      |     -1.2%|     -1.2%|
reginfo                          |      |      |      |      |          |     +0.0%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant                  |      |      |      |      |     +0.2%|     +0.0%|
loop2_done                       |      |      |      |      |     +0.2%|     +0.0%|
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +3.9%|     +5.6%|
ce2                              |      |      |      |      |     +3.8%|     +5.3%|
outof_cfglayout                  |      |      |      |      |     +1.0%|     +0.5%|
split1                           |      |      |      |      |     +1.5%|     +1.6%|
subreg3                          |      |      |      |      |     +0.6%|     +1.1%|
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -8.0%|    -14.0%|
postreload                       |      |      |      |      |     -8.6%|    -16.2%|
split2                           |      |      |      |      |          |     +0.1%|
cmpelim                          |      |      |      |      |          |     +0.1%|
pro_and_epilogue                 |      |      |      |      |    +11.7%|    +13.1%|
dse2                             |      |      |      |      |    +10.4%|    +11.6%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg        ------------|      |      |      |      |          |          |
rtl_dce              ------------|      |      |      |      |          |          |
bbro                             |      |      |      |      |     +0.2%|     -0.2%|
split4                           |      |      |      |      |     +0.2%|     -0.2%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
