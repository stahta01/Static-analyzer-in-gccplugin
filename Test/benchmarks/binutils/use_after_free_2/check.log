In file included from ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:6:0:
./benchmarks/binutils/use_after_free_2/../include/common.h: In function â€˜discard_my_cleanupsâ€™:
./benchmarks/binutils/use_after_free_2/../include/common.h:94:21: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
   printf("freearg: %x\n", ptr->arg);
                    ~^     ~~~~~~~~
                    %p
./benchmarks/binutils/use_after_free_2/../include/common.h: In function â€˜do_my_cleanupsâ€™:
./benchmarks/binutils/use_after_free_2/../include/common.h:108:13: warning: format â€˜%xâ€™ expects argument of type â€˜unsigned intâ€™, but argument 2 has type â€˜void *â€™ [-Wformat=]
    printf("%x\n", ptr->arg);
            ~^     ~~~~~~~~
            %p
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function â€˜bfd_generic_archive_pâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7: warning: implicit declaration of function â€˜bfd_breadâ€™; did you mean â€˜freadâ€™? [-Wimplicit-function-declaration]
   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
       ^~~~~~~~~
       fread
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:11: warning: implicit declaration of function â€˜bfd_get_errorâ€™ [-Wimplicit-function-declaration]
       if (bfd_get_error () != bfd_error_system_call)
           ^~~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:56:2: warning: implicit declaration of function â€˜bfd_set_errorâ€™ [-Wimplicit-function-declaration]
  bfd_set_error (bfd_error_wrong_format);
  ^~~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33: warning: implicit declaration of function â€˜strncmpâ€™ [-Wimplicit-function-declaration]
   bfd_is_thin_archive (abfd) = (strncmp (armag, ARMAGT, SARMAG) == 0);
                                 ^~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function â€˜bfd_fopenâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: implicit declaration of function â€˜_bfd_new_bfdâ€™ [-Wimplicit-function-declaration]
   nbfd = _bfd_new_bfd (); /* allocation site */
          ^~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   nbfd = _bfd_new_bfd (); /* allocation site */
        ^
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: implicit declaration of function â€˜bfd_find_targetâ€™ [-Wimplicit-function-declaration]
   target_vec = bfd_find_target (target, nbfd);
                ^~~~~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: assignment makes pointer from integer without a cast [-Wint-conversion]
   target_vec = bfd_find_target (target, nbfd);
              ^
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:2: warning: implicit declaration of function â€˜closeâ€™; did you mean â€˜pcloseâ€™? [-Wimplicit-function-declaration]
  close (fd);
  ^~~~~
  pclose
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: implicit declaration of function â€˜_bfd_delete_bfdâ€™ [-Wimplicit-function-declaration]
       _bfd_delete_bfd (nbfd);
       ^~~~~~~~~~~~~~~
In file included from ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:6:0:
./benchmarks/binutils/use_after_free_2/../include/common.h:22:20: warning: implicit declaration of function â€˜strdupâ€™ [-Wimplicit-function-declaration]
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: note: in expansion of macro â€˜xstrdupâ€™
   nbfd->filename = xstrdup (filename);
                    ^~~~~~~
./benchmarks/binutils/use_after_free_2/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function â€˜strdupâ€™
 #define xstrdup(a) strdup(a)
                    ^
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: note: in expansion of macro â€˜xstrdupâ€™
   nbfd->filename = xstrdup (filename);
                    ^~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function â€˜_bfd_archive_close_and_cleanupâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:7: warning: implicit declaration of function â€˜bfd_read_pâ€™; did you mean â€˜freadâ€™? [-Wimplicit-function-declaration]
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
       ^~~~~~~~~~
       fread
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:4: warning: implicit declaration of function â€˜bfd_closeâ€™; did you mean â€˜fcloseâ€™? [-Wimplicit-function-declaration]
    bfd_close (nbfd);
    ^~~~~~~~~
    fclose
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function â€˜find_nested_archiveâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: implicit declaration of function â€˜filename_cmpâ€™ [-Wimplicit-function-declaration]
   if (filename_cmp (filename, arch_bfd->filename) == 0)
       ^~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: implicit declaration of function â€˜bfd_check_formatâ€™; did you mean â€˜bfd_mach_arm_2â€™? [-Wimplicit-function-declaration]
   if (!bfd_check_format (archive, bfd_archive))
        ^~~~~~~~~~~~~~~~
        bfd_mach_arm_2
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
--------GIMPLE Cond -------
succs:= 2
--------GIMPLE Cond -------
--------GIMPLE Cond -------
succs:= 3
succs:= 4
succs:= 4
succs:= 3
succs:= 2
--------GIMPLE Cond -------
succs:= 2
succs:= 2
--------GIMPLE Cond -------
succs:= 4
succs:= 4
--------GIMPLE Cond -------
succs:= 6
succs:= 6
--------GIMPLE Cond -------
succs:= 9
--------GIMPLE Cond -------
succs:= 11
--------GIMPLE Cond -------
succs:= 12
succs:= 12
--------GIMPLE Cond -------
succs:= 14
succs:= 14
--------GIMPLE Cond -------
succs:= 16
succs:= 9
succs:= 16
--------GIMPLE Cond -------
succs:= 19
--------GIMPLE Cond -------
succs:= 20
succs:= 20
--------GIMPLE Cond -------
succs:= 22
--------GIMPLE Cond -------
succs:= 23
--------GIMPLE Cond -------
succs:= 22
succs:= 23
succs:= 26
--------GIMPLE Cond -------
succs:= 27
--------GIMPLE Cond -------
succs:= 28
succs:= 27
--------GIMPLE Cond -------
succs:= 30
--------GIMPLE Cond -------
succs:= 31
--------GIMPLE Cond -------
succs:= 30
succs:= 31
succs:= 32
succs:= 28
succs:= 32
--------GIMPLE Cond -------
succs:= 34
--------GIMPLE Cond -------
succs:= 34
succs:= 37
--------GIMPLE Cond -------
succs:= 38
succs:= 38
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
# .MEM_26 = VDEF <.MEM_23>
close (fd_18(D));
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));
# .MEM_60 = VDEF <.MEM_44(D)>
_35 = __printf_chk (1, "usage: bfdtest1 <archive>%s", "");
# .MEM_101 = VDEF <.MEM_44(D)>
_62 = bfd_fopen (_1, 0B, "r", -1);
# .MEM_58 = VDEF <.MEM_101>
_36 = __printf_chk (1, "no such archive%s", "");
# .MEM_112 = VDEF <.MEM_41>
_64 = filename_cmp (_5, _63);
# .MEM_120 = VDEF <.MEM_112>
bfd_set_error (10);
# .MEM_119 = VDEF <.MEM_95>
_68 = filename_cmp (_5, _67);
# .MEM_113 = VDEF <.MEM_95>
_79 = bfd_fopen (_5, target_77, "r", -1);
# .MEM_57 = VDEF <.MEM_97>
_37 = __printf_chk (1, "%d\n", _6);
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
# .MEM_53 = VDEF <.MEM_46>
bfd_close (archive_20);
# .MEM_54 = VDEF <.MEM_53>
_38 = __printf_chk (1, "bfd_check_format%s", "");
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
# .MEM_104 = VDEF <.MEM_98>
bfd_close (nbfd_93);
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
# .MEM_108 = VDEF <.MEM_106>
_81 = bfd_get_error ();
# .MEM_109 = VDEF <.MEM_108>
bfd_set_error (3);
# VUSE <.MEM_106>
_82 = strncmp (&armag, "!<thin>\n", 8);
# VUSE <.MEM_107>
_84 = strncmp (&armag, "!<arch>\n", 8);
# VUSE <.MEM_107>
_85 = strncmp (&armag, "!<bout>\n", 8);
# .MEM_49 = VDEF <.MEM_42>
_39 = __printf_chk (1, "%d\n", _9);
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
# .MEM_51 = VDEF <.MEM_50>
_40 = __printf_chk (1, "bfd_close%s", "");
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:bfd_fopen========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;33m =======POP node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre_check_funciton:bfd_fopen========= [0m
[40;42m =======start_check_funciton:bfd_fopen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
_5 = strdup (filename_15(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   nbfd->filename = xstrdup (filename);
                    ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
_bfd_delete_bfd (nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
if (_3 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   if (target_vec == NULL)
      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();

 ================== trace ptable================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---_bfd_new_bfd-----
this other function ------_bfd_new_bfd-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================
if (_1 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
   if (nbfd == NULL)
      ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
Cond in fucntion bfd_fopen basic block 2
 ================== possible direct basic block ================= 
from bfd_fopen basic block 8
 ================== possible direct basic block ================= 
from bfd_fopen basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================
_2 = (long int) _1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   nbfd = _bfd_new_bfd (); /* allocation site */
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================
nbfd_11 = (struct bfd *) _2;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: use location
   nbfd = _bfd_new_bfd (); /* allocation site */
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
_bfd_delete_bfd (nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================
_1 = _bfd_new_bfd ();
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   nbfd = _bfd_new_bfd (); /* allocation site */
          ^
this stmt is child function---_bfd_new_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>
trace fucntion name:_bfd_new_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afebab0
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22080 target>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f052ab400a8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afebab0
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22080 target>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f052ab400a8>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
if (_3 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   if (target_vec == NULL)
      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
_bfd_delete_bfd (nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afebab0
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22080 target>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f052ab400a8>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afebab0
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22080 target>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f052ab400a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afebb88
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
    var <parm_decl 0x7f052ab22180 fd>
    def_stmt GIMPLE_NOP
    version 18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_26 = VDEF <.MEM_23>
close (fd_18(D));
close (fd_18(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:2: warning: use location
  close (fd);
  ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7f052afebb88
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
    var <parm_decl 0x7f052ab22180 fd>
    def_stmt GIMPLE_NOP
    version 18>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18(D) != -1)
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================
if (fd_18(D) != -1)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
       if (fd != -1)
          ^
if (fd_18(D) != -1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
Cond in fucntion bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 5
 ================== possible direct basic block ================= 
from bfd_fopen basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afebb88
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
    var <parm_decl 0x7f052ab22180 fd>
    def_stmt GIMPLE_NOP
    version 18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afeba68
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052bd78bd0 nbfd>
    def_stmt nbfd_11 = (struct bfd *) _2;
    version 11
    ptr-info 0x7f052ab40090>
nbfd_11 = (struct bfd *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
_bfd_delete_bfd (nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afeba68
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052bd78bd0 nbfd>
    def_stmt nbfd_11 = (struct bfd *) _2;
    version 11
    ptr-info 0x7f052ab40090>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afeba68
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052bd78bd0 nbfd>
    def_stmt nbfd_11 = (struct bfd *) _2;
    version 11
    ptr-info 0x7f052ab40090>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
if (_3 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   if (target_vec == NULL)
      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afeba68
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052bd78bd0 nbfd>
    def_stmt nbfd_11 = (struct bfd *) _2;
    version 11
    ptr-info 0x7f052ab40090>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
_5 = strdup (filename_15(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   nbfd->filename = xstrdup (filename);
                    ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
_bfd_delete_bfd (nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
if (_3 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   if (target_vec == NULL)
      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_fopen========= [0m
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 11 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:__printf_chk========= [0m
[40;33m =======POP node_fun stack:__printf_chk========= [0m
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;33m =======POP node_fun stack:bfd_set_error========= [0m
[40;42m =======pre add _ fucntion:bfd_get_error========= [0m
[40;33m =======POP node_fun stack:bfd_get_error========= [0m
[40;42m =======pre add _ fucntion:bfd_bread========= [0m
[40;33m =======POP node_fun stack:bfd_bread========= [0m
[40;42m =======pre add _ fucntion:bfd_read_p========= [0m
[40;33m =======POP node_fun stack:bfd_read_p========= [0m
[40;42m =======pre add _ fucntion:bfd_check_format========= [0m
[40;33m =======POP node_fun stack:bfd_check_format========= [0m
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_fopen  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;33m =======POP node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre_check_funciton:bfd_fopen========= [0m
[40;42m =======start_check_funciton:bfd_fopen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));
bb index := 7
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
_5 = strdup (filename_15(D));
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   nbfd->filename = xstrdup (filename);
                    ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
_bfd_delete_bfd (nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
if (_3 == 0)
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   if (target_vec == NULL)
      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afeb9d8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = strdup (filename_15(D));
    version 5
    ptr-info 0x7f052ab40060>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();

 ================== trace ptable================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---_bfd_new_bfd-----
this other function ------_bfd_new_bfd-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================
if (_1 == 0)
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
   if (nbfd == NULL)
      ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
Cond in fucntion bfd_fopen basic block 2
 ================== possible direct basic block ================= 
from bfd_fopen basic block 8
 ================== possible direct basic block ================= 
from bfd_fopen basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================
_2 = (long int) _1;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   nbfd = _bfd_new_bfd (); /* allocation site */
          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================
nbfd_11 = (struct bfd *) _2;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: use location
   nbfd = _bfd_new_bfd (); /* allocation site */
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
_bfd_delete_bfd (nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 2 ,possiable got to succ := 40

======================================================================
_1 = _bfd_new_bfd ();
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   nbfd = _bfd_new_bfd (); /* allocation site */
          ^
this stmt is child function---_bfd_new_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>
trace fucntion name:_bfd_new_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afeb8b8
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version 1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afebab0
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22080 target>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f052ab400a8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afebab0
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22080 target>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f052ab400a8>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
if (_3 == 0)
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   if (target_vec == NULL)
      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
_bfd_delete_bfd (nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afebab0
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22080 target>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f052ab400a8>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afebab0
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22080 target>
    def_stmt GIMPLE_NOP
    version 12
    ptr-info 0x7f052ab400a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afebb88
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
    var <parm_decl 0x7f052ab22180 fd>
    def_stmt GIMPLE_NOP
    version 18>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_26 = VDEF <.MEM_23>
close (fd_18(D));
close (fd_18(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:2: warning: use location
  close (fd);
  ^
this stmt is child function---close-----

 ================== trace ================== 
 <ssa_name 0x7f052afebb88
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
    var <parm_decl 0x7f052ab22180 fd>
    def_stmt GIMPLE_NOP
    version 18>
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (fd_18(D) != -1)
bb index := 4
# VUSE <.MEM_50>
return 0;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================
if (fd_18(D) != -1)
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
       if (fd != -1)
          ^
if (fd_18(D) != -1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
Cond in fucntion bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 5
 ================== possible direct basic block ================= 
from bfd_fopen basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afebb88
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
    var <parm_decl 0x7f052ab22180 fd>
    def_stmt GIMPLE_NOP
    version 18>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afeba68
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052bd78bd0 nbfd>
    def_stmt nbfd_11 = (struct bfd *) _2;
    version 11
    ptr-info 0x7f052ab40090>
nbfd_11 = (struct bfd *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
_bfd_delete_bfd (nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afeba68
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052bd78bd0 nbfd>
    def_stmt nbfd_11 = (struct bfd *) _2;
    version 11
    ptr-info 0x7f052ab40090>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afeba68
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052bd78bd0 nbfd>
    def_stmt nbfd_11 = (struct bfd *) _2;
    version 11
    ptr-info 0x7f052ab40090>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
if (_3 == 0)
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   if (target_vec == NULL)
      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afeba68
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052bd78bd0 nbfd>
    def_stmt nbfd_11 = (struct bfd *) _2;
    version 11
    ptr-info 0x7f052ab40090>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23>
_5 = strdup (filename_15(D));
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
_5 = strdup (filename_15(D));
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   nbfd->filename = xstrdup (filename);
                    ^
this stmt is child function---strdup-----

 ================== trace ================== 
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>
trace fucntion name:strdup 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_24>
nbfd_11->filename = _5;
bb index := 7
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 7 ,possiable got to succ := 40

======================================================================
nbfd_11->filename = _5;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   nbfd->filename = xstrdup (filename);
                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
bb index := 8
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 8 ,possiable got to succ := 40

======================================================================
_6 = PHI <0B(2), 0B(6), nbfd_11(7)>
In function â€˜mainâ€™:
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_19>
_bfd_delete_bfd (nbfd_11);
bb index := 6
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================
_bfd_delete_bfd (nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
       _bfd_delete_bfd (nbfd);
       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
_3 = bfd_find_target (target_12(D), nbfd_11);
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_3 = bfd_find_target (target_12(D), nbfd_11);
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
if (_3 == 0)
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   if (target_vec == NULL)
      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_4 = (long int) _3;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
_4 = (long int) _3;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   target_vec = bfd_find_target (target, nbfd);
                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_20>
return _6;
In function â€˜bfd_fopenâ€™:
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_vec_14 = (const struct bfd_target *) _4;
bb index := 3
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 3 ,possiable got to succ := 40

======================================================================
target_vec_14 = (const struct bfd_target *) _4;
In function â€˜mainâ€™:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: use location
   target_vec = bfd_find_target (target, nbfd);
              ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afebb40
    type <pointer_type 0x7f052ab0dd20
        type <integer_type 0x7f052ab0dc78 char readonly string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0dd20>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <parm_decl 0x7f052ab22000 filename>
    def_stmt GIMPLE_NOP
    version 15
    ptr-info 0x7f052ab400d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_fopen========= [0m
[40;42m =======pre add _ fucntion:filename_cmp========= [0m
[40;33m =======POP node_fun stack:filename_cmp========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f052afe3f90 type <integer_type 0x7f052aff75e8 int> constant 1>

dot graph START

======================================================================
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
# VUSE <.MEM_44(D)>
_1 = *argv_18(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_44(D)>
_62 = bfd_fopen (_1, 0B, "r", -1);
bb index := 4
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_44(D)>
_62 = bfd_fopen (_1, 0B, "r", -1);
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_44(D)>
_62 = bfd_fopen (_1, 0B, "r", -1);
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_101 = VDEF <.MEM_44(D)>
_62 = bfd_fopen (_1, 0B, "r", -1);
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================
_62 = bfd_fopen (_1, 0B, "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
   return bfd_fopen (filename, target, "r", -1);
          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = _62;
bb index := 4
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = _62;
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = _62;
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_102 = _62;
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================
_102 = _62;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
archive_20 = _102;
bb index := 4
# VUSE <.MEM_20>
return _6;
lto1: warning: use location
beacuse in succ := 8 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
archive_20 = _102;
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
archive_20 = _102;
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
archive_20 = _102;
bb index := 4
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 4 ,possiable got to succ := 40

======================================================================
archive_20 = _102;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:176:11: warning: use location
   archive = bfd_openr (argv[0], NULL);
           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
nbfd_92 = archive_20->nested_archives;
bb index := 24
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 40

======================================================================
nbfd_92 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_93 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
       ^
if (nbfd_93 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_104 = VDEF <.MEM_98>
bfd_close (nbfd_93);
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
bfd_close (nbfd_93);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:4: warning: use location
    bfd_close (nbfd);
    ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
next_94 = nbfd_93->archive_next;
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_94 = nbfd_93->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:9: warning: use location
    next = nbfd->archive_next;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_65 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
   for (abfd = arch_bfd->nested_archives;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_66 = PHI <abfd_65(8), abfd_69(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_72 = PHI <0B(7), abfd_66(9), abfd_70(16), abfd_70(17)>
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = PHI <0B(7), abfd_66(9), abfd_70(16), abfd_70(17)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _72;
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = _72;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_31 = _121;
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_31 = _121;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:182:7: warning: use location
  nbfd = find_nested_archive(argv[i], archive);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_97>
_6 = MEM[(int *)nbfd_31];
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = MEM[(int *)nbfd_31];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:2: warning: use location
  __USE(nbfd);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_97>
_37 = __printf_chk (1, "%d\n", _6);
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = __printf_chk (1, "%d\n", _6);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_69 = abfd_66->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
        abfd = abfd->archive_next)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = abfd_66->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
       if (filename_cmp (filename, abfd->filename) == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = filename_cmp (_5, _67);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
this stmt is child function---filename_cmp-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
       if (filename_cmp (filename, abfd->filename) == 0)
          ^
if (_68 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = bfd_fopen (_5, target_77, "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
   return bfd_fopen (filename, target, "r", -1);
          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _79;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n_bfd_78 = _114;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:132:9: warning: use location
   n_bfd = bfd_openr (filename, target);
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = n_bfd_78;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_70 = _116;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:8: warning: use location
   abfd = open_nested_file (filename, arch_bfd);
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
       abfd->archive_next = arch_bfd->nested_archives;
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_70->archive_next = _71;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
       abfd->archive_next = arch_bfd->nested_archives;
                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
nbfd_24 = archive_20->nested_archives;
bb index := 35
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 40

======================================================================
nbfd_24 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:14: warning: use location
    for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
bb index := 37
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
bb index := 37
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_49>
nbfd_25 = nbfd_11->archive_next;
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_25 = nbfd_11->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:53: warning: use location
    for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_9 = MEM[(int *)nbfd_11];
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = MEM[(int *)nbfd_11];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:4: warning: use location
    __USE(nbfd);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_42>
_39 = __printf_chk (1, "%d\n", _9);
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = __printf_chk (1, "%d\n", _9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
archive_20->nested_archives = abfd_70;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
       arch_bfd->nested_archives = abfd;
                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n_bfd_78->my_archive = archive_20;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
       n_bfd->my_archive = archive;
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_41>
_64 = filename_cmp (_5, _63);
bb index := 6
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = filename_cmp (_5, _63);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
   if (filename_cmp (filename, arch_bfd->filename) == 0)
       ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================
_91 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================
if (_91 == 2)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
                         ^
if (_91 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_8 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:196:13: warning: use location
   if(archive->format != bfd_unknown)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================
_90 = bfd_read_p (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:7: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
       ^
this stmt is child function---bfd_read_p-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:bfd_read_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_88 = archive_20->xvec;
bb index := 33
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_88 = archive_20->xvec;
bb index := 33
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 40

======================================================================
_88 = archive_20->xvec;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:67:14: warning: use location
   return abfd->xvec;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_111 = _89;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = archive_20->xvec;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:21: warning: use location
     target = archive->xvec->name;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
target_76 = _75->name;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:12: warning: use location
     target = archive->xvec->name;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
bb index := 32
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
bb index := 32
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 40

======================================================================
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:64:10: warning: use location
       && ! bfd_is_thin_archive (abfd))
          ^
archive_20->is_thin_archive = _83;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:30: warning: use location
   bfd_is_thin_archive (abfd) = (strncmp (armag, ARMAGT, SARMAG) == 0);
                              ^
archive_20->is_thin_archive = _83;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:30: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================
_80 = bfd_bread (&armag, 8, archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7: warning: use location
   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
       ^
this stmt is child function---bfd_bread-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:bfd_bread 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================
if (_80 != 8)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:6: warning: use location
   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
      ^
if (_80 != 8)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:6: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== possible direct basic block ================= 
from main basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = BIT_FIELD_REF <*archive_20, 8, 512>;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
   if (!archive->target_defaulted)
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73 & 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
   if (!archive->target_defaulted)
      ^
if (_74 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_63 = archive_20->filename;
bb index := 6
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = archive_20->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
   if (filename_cmp (filename, arch_bfd->filename) == 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================
_10 = bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:8: warning: use location
   if (!bfd_close (archive))
        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
bfd_close (archive_20);
bb index := 21
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 40

======================================================================
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
       bfd_close (archive);
       ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
   if (!bfd_check_format (archive, bfd_archive))
        ^
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afebea0
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _1 = *argv_18(D);
    version 1
    ptr-info 0x7f052ab400f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
# VUSE <.MEM_41>
_5 = *_4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = bfd_fopen (_5, target_77, "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
   return bfd_fopen (filename, target, "r", -1);
          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _79;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n_bfd_78 = _114;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:132:9: warning: use location
   n_bfd = bfd_openr (filename, target);
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = n_bfd_78;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_70 = _116;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:8: warning: use location
   abfd = open_nested_file (filename, arch_bfd);
        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_72 = PHI <0B(7), abfd_66(9), abfd_70(16), abfd_70(17)>
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = PHI <0B(7), abfd_66(9), abfd_70(16), abfd_70(17)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _72;
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = _72;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_31 = _121;
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_31 = _121;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:182:7: warning: use location
  nbfd = find_nested_archive(argv[i], archive);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_97>
_6 = MEM[(int *)nbfd_31];
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = MEM[(int *)nbfd_31];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:2: warning: use location
  __USE(nbfd);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_97>
_37 = __printf_chk (1, "%d\n", _6);
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = __printf_chk (1, "%d\n", _6);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
archive_20->nested_archives = abfd_70;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
       arch_bfd->nested_archives = abfd;
                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
nbfd_92 = archive_20->nested_archives;
bb index := 24
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 40

======================================================================
nbfd_92 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_93 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
       ^
if (nbfd_93 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_104 = VDEF <.MEM_98>
bfd_close (nbfd_93);
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
bfd_close (nbfd_93);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:4: warning: use location
    bfd_close (nbfd);
    ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
next_94 = nbfd_93->archive_next;
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_94 = nbfd_93->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:9: warning: use location
    next = nbfd->archive_next;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_65 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
   for (abfd = arch_bfd->nested_archives;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_66 = PHI <abfd_65(8), abfd_69(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_69 = abfd_66->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
        abfd = abfd->archive_next)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = abfd_66->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
       if (filename_cmp (filename, abfd->filename) == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = filename_cmp (_5, _67);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
this stmt is child function---filename_cmp-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
       if (filename_cmp (filename, abfd->filename) == 0)
          ^
if (_68 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
       abfd->archive_next = arch_bfd->nested_archives;
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_70->archive_next = _71;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
       abfd->archive_next = arch_bfd->nested_archives;
                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
nbfd_24 = archive_20->nested_archives;
bb index := 35
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 40

======================================================================
nbfd_24 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:14: warning: use location
    for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
bb index := 37
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
bb index := 37
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_49>
nbfd_25 = nbfd_11->archive_next;
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_25 = nbfd_11->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:53: warning: use location
    for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_9 = MEM[(int *)nbfd_11];
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = MEM[(int *)nbfd_11];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:4: warning: use location
    __USE(nbfd);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_42>
_39 = __printf_chk (1, "%d\n", _9);
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = __printf_chk (1, "%d\n", _9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================
_91 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================
if (_91 == 2)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
                         ^
if (_91 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_8 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:196:13: warning: use location
   if(archive->format != bfd_unknown)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================
_90 = bfd_read_p (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:7: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
       ^
this stmt is child function---bfd_read_p-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:bfd_read_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_88 = archive_20->xvec;
bb index := 33
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_88 = archive_20->xvec;
bb index := 33
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 40

======================================================================
_88 = archive_20->xvec;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:67:14: warning: use location
   return abfd->xvec;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_111 = _89;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = archive_20->xvec;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:21: warning: use location
     target = archive->xvec->name;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
target_76 = _75->name;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:12: warning: use location
     target = archive->xvec->name;
            ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
target_77 = PHI <0B(12), target_76(13)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
bb index := 32
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
bb index := 32
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 40

======================================================================
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:64:10: warning: use location
       && ! bfd_is_thin_archive (abfd))
          ^
archive_20->is_thin_archive = _83;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:30: warning: use location
   bfd_is_thin_archive (abfd) = (strncmp (armag, ARMAGT, SARMAG) == 0);
                              ^
archive_20->is_thin_archive = _83;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:30: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================
_80 = bfd_bread (&armag, 8, archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7: warning: use location
   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
       ^
this stmt is child function---bfd_bread-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:bfd_bread 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================
if (_80 != 8)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:6: warning: use location
   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
      ^
if (_80 != 8)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:6: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== possible direct basic block ================= 
from main basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n_bfd_78->my_archive = archive_20;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
       n_bfd->my_archive = archive;
                         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = BIT_FIELD_REF <*archive_20, 8, 512>;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
   if (!archive->target_defaulted)
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73 & 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
   if (!archive->target_defaulted)
      ^
if (_74 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_63 = archive_20->filename;
bb index := 6
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = archive_20->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
   if (filename_cmp (filename, arch_bfd->filename) == 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_41>
_64 = filename_cmp (_5, _63);
bb index := 6
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = filename_cmp (_5, _63);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
this stmt is child function---filename_cmp-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================
_10 = bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:8: warning: use location
   if (!bfd_close (archive))
        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
bfd_close (archive_20);
bb index := 21
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 40

======================================================================
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
       bfd_close (archive);
       ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
   if (!bfd_check_format (archive, bfd_archive))
        ^
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052afeb5e8
    type <pointer_type 0x7f052ab0d7e0
        type <integer_type 0x7f052ab0d738 char public string-flag QI
            size <integer_cst 0x7f052afe3cd8 constant 8>
            unit size <integer_cst 0x7f052afe3cf0 constant 1>
            align 8 symtab 0 alias set -1 canonical type 0x7f052aff73f0 precision 8 min <integer_cst 0x7f052ab10180 -128> max <integer_cst 0x7f052ab10168 127>
            pointer_to_this <pointer_type 0x7f052ab0d7e0>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7f052ab0d888>>
   
    def_stmt _5 = *_4;
    version 5
    ptr-info 0x7f052ab40120>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f052ab10eb8 type <integer_type 0x7f052aff75e8 int> constant 10>

dot graph START

======================================================================
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
archive_20 = _102;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
nbfd_92 = archive_20->nested_archives;
bb index := 24
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 40

======================================================================
nbfd_92 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_93 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
       ^
if (nbfd_93 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_104 = VDEF <.MEM_98>
bfd_close (nbfd_93);
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
bfd_close (nbfd_93);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:4: warning: use location
    bfd_close (nbfd);
    ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
next_94 = nbfd_93->archive_next;
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_94 = nbfd_93->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:9: warning: use location
    next = nbfd->archive_next;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_65 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
   for (abfd = arch_bfd->nested_archives;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_66 = PHI <abfd_65(8), abfd_69(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_72 = PHI <0B(7), abfd_66(9), abfd_70(16), abfd_70(17)>
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = PHI <0B(7), abfd_66(9), abfd_70(16), abfd_70(17)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _72;
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = _72;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_31 = _121;
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_31 = _121;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:182:7: warning: use location
  nbfd = find_nested_archive(argv[i], archive);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_97>
_6 = MEM[(int *)nbfd_31];
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = MEM[(int *)nbfd_31];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:2: warning: use location
  __USE(nbfd);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_97>
_37 = __printf_chk (1, "%d\n", _6);
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = __printf_chk (1, "%d\n", _6);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_69 = abfd_66->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
        abfd = abfd->archive_next)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = abfd_66->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
       if (filename_cmp (filename, abfd->filename) == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = filename_cmp (_5, _67);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
this stmt is child function---filename_cmp-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
       if (filename_cmp (filename, abfd->filename) == 0)
          ^
if (_68 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = bfd_fopen (_5, target_77, "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
   return bfd_fopen (filename, target, "r", -1);
          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _79;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n_bfd_78 = _114;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:132:9: warning: use location
   n_bfd = bfd_openr (filename, target);
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = n_bfd_78;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_70 = _116;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:8: warning: use location
   abfd = open_nested_file (filename, arch_bfd);
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
archive_20->nested_archives = abfd_70;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
       arch_bfd->nested_archives = abfd;
                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
       abfd->archive_next = arch_bfd->nested_archives;
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_70->archive_next = _71;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
       abfd->archive_next = arch_bfd->nested_archives;
                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
nbfd_24 = archive_20->nested_archives;
bb index := 35
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 40

======================================================================
nbfd_24 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:14: warning: use location
    for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
bb index := 37
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
bb index := 37
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_49>
nbfd_25 = nbfd_11->archive_next;
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_25 = nbfd_11->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:53: warning: use location
    for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_9 = MEM[(int *)nbfd_11];
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = MEM[(int *)nbfd_11];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:4: warning: use location
    __USE(nbfd);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_42>
_39 = __printf_chk (1, "%d\n", _9);
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = __printf_chk (1, "%d\n", _9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n_bfd_78->my_archive = archive_20;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
       n_bfd->my_archive = archive;
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_41>
_64 = filename_cmp (_5, _63);
bb index := 6
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = filename_cmp (_5, _63);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
   if (filename_cmp (filename, arch_bfd->filename) == 0)
       ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================
_91 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================
if (_91 == 2)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
                         ^
if (_91 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_8 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:196:13: warning: use location
   if(archive->format != bfd_unknown)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================
_90 = bfd_read_p (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:7: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
       ^
this stmt is child function---bfd_read_p-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_read_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_88 = archive_20->xvec;
bb index := 33
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_88 = archive_20->xvec;
bb index := 33
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 40

======================================================================
_88 = archive_20->xvec;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:67:14: warning: use location
   return abfd->xvec;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_111 = _89;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = archive_20->xvec;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:21: warning: use location
     target = archive->xvec->name;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
target_76 = _75->name;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:12: warning: use location
     target = archive->xvec->name;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
bb index := 32
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
bb index := 32
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 40

======================================================================
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:64:10: warning: use location
       && ! bfd_is_thin_archive (abfd))
          ^
archive_20->is_thin_archive = _83;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:30: warning: use location
   bfd_is_thin_archive (abfd) = (strncmp (armag, ARMAGT, SARMAG) == 0);
                              ^
archive_20->is_thin_archive = _83;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:30: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================
_80 = bfd_bread (&armag, 8, archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7: warning: use location
   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
       ^
this stmt is child function---bfd_bread-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_bread 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================
if (_80 != 8)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:6: warning: use location
   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
      ^
if (_80 != 8)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:6: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== possible direct basic block ================= 
from main basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = BIT_FIELD_REF <*archive_20, 8, 512>;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
   if (!archive->target_defaulted)
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73 & 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
   if (!archive->target_defaulted)
      ^
if (_74 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_63 = archive_20->filename;
bb index := 6
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = archive_20->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
   if (filename_cmp (filename, arch_bfd->filename) == 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================
_10 = bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:8: warning: use location
   if (!bfd_close (archive))
        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
bfd_close (archive_20);
bb index := 21
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 40

======================================================================
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
       bfd_close (archive);
       ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
   if (!bfd_check_format (archive, bfd_archive))
        ^
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
archive_20 = _102;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
nbfd_92 = archive_20->nested_archives;
bb index := 24
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 24 ,possiable got to succ := 40

======================================================================
nbfd_92 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_93 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
       ^
if (nbfd_93 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_104 = VDEF <.MEM_98>
bfd_close (nbfd_93);
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

 Expand conflict 
 The same function may have multiple branches :bfd_close
# .MEM_53 = VDEF <.MEM_46>
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
       bfd_close (archive);
       ^
# .MEM_104 = VDEF <.MEM_98>
bfd_close (nbfd_93);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:4: warning: use location
    bfd_close (nbfd);
    ^
=======================Path Constaint===========================

=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
next_94 = nbfd_93->archive_next;
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_94 = nbfd_93->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:9: warning: use location
    next = nbfd->archive_next;
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_65 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
   for (abfd = arch_bfd->nested_archives;
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_66 = PHI <abfd_65(8), abfd_69(10)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_72 = PHI <0B(7), abfd_66(9), abfd_70(16), abfd_70(17)>
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_72 = PHI <0B(7), abfd_66(9), abfd_70(16), abfd_70(17)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_121 = _72;
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_121 = _72;
lto1: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_31 = _121;
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_31 = _121;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:182:7: warning: use location
  nbfd = find_nested_archive(argv[i], archive);
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_97>
_6 = MEM[(int *)nbfd_31];
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = MEM[(int *)nbfd_31];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:2: warning: use location
  __USE(nbfd);
  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_57 = VDEF <.MEM_97>
_37 = __printf_chk (1, "%d\n", _6);
bb index := 18
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 18 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_37 = __printf_chk (1, "%d\n", _6);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_69 = abfd_66->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
        abfd = abfd->archive_next)
             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_67 = abfd_66->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
       if (filename_cmp (filename, abfd->filename) == 0)
           ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_68 = filename_cmp (_5, _67);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
this stmt is child function---filename_cmp-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_68 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
       if (filename_cmp (filename, abfd->filename) == 0)
          ^
if (_68 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
Cond in fucntion main basic block 9
 ================== possible direct basic block ================= 
from main basic block 18
 ================== possible direct basic block ================= 
from main basic block 10
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_79 = bfd_fopen (_5, target_77, "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
   return bfd_fopen (filename, target, "r", -1);
          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_114 = _79;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n_bfd_78 = _114;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:132:9: warning: use location
   n_bfd = bfd_openr (filename, target);
         ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_116 = n_bfd_78;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_70 = _116;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:8: warning: use location
   abfd = open_nested_file (filename, arch_bfd);
        ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
archive_20->nested_archives = abfd_70;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
       arch_bfd->nested_archives = abfd;
                                 ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_71 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
       abfd->archive_next = arch_bfd->nested_archives;
                                    ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_70->archive_next = _71;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
       abfd->archive_next = arch_bfd->nested_archives;
                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
nbfd_24 = archive_20->nested_archives;
bb index := 35
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 35 ,possiable got to succ := 40

======================================================================
nbfd_24 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:14: warning: use location
    for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
bb index := 37
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
bb index := 37
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 37 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_49>
nbfd_25 = nbfd_11->archive_next;
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_25 = nbfd_11->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:53: warning: use location
    for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
                                                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_42>
_9 = MEM[(int *)nbfd_11];
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = MEM[(int *)nbfd_11];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:4: warning: use location
    __USE(nbfd);
    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_42>
_39 = __printf_chk (1, "%d\n", _9);
bb index := 36
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 36 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_39 = __printf_chk (1, "%d\n", _9);
this stmt is child function---__printf_chk-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:__printf_chk 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
n_bfd_78->my_archive = archive_20;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
       n_bfd->my_archive = archive;
                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_112 = VDEF <.MEM_41>
_64 = filename_cmp (_5, _63);
bb index := 6
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_64 = filename_cmp (_5, _63);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
   if (filename_cmp (filename, arch_bfd->filename) == 0)
       ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_103>
_91 = archive_20->format;
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================
_91 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_91 == 2)
bb index := 23
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 23 ,possiable got to succ := 40

======================================================================
if (_91 == 2)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
                         ^
if (_91 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion main basic block 23
 ================== possible direct basic block ================= 
from main basic block 24
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_110>
_8 = archive_20->format;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_8 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:196:13: warning: use location
   if(archive->format != bfd_unknown)
             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_103 = VDEF <.MEM_46>
_90 = bfd_read_p (archive_20);
bb index := 22
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 22 ,possiable got to succ := 40

======================================================================
_90 = bfd_read_p (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:7: warning: use location
   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
       ^
this stmt is child function---bfd_read_p-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_read_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_88 = archive_20->xvec;
bb index := 33
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_88 = archive_20->xvec;
bb index := 33
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 33 ,possiable got to succ := 40

======================================================================
_88 = archive_20->xvec;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:67:14: warning: use location
   return abfd->xvec;
              ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_111 = _89;
bb index := 34
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 34 ,possiable got to succ := 40

======================================================================
_111 = _89;
lto1: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_75 = archive_20->xvec;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:21: warning: use location
     target = archive->xvec->name;
                     ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
target_76 = _75->name;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:12: warning: use location
     target = archive->xvec->name;
            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
bb index := 32
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_107>
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
bb index := 32
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 32 ,possiable got to succ := 40

======================================================================
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:64:10: warning: use location
       && ! bfd_is_thin_archive (abfd))
          ^
archive_20->is_thin_archive = _83;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:30: warning: use location
   bfd_is_thin_archive (abfd) = (strncmp (armag, ARMAGT, SARMAG) == 0);
                              ^
archive_20->is_thin_archive = _83;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:30: warning: use location

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_106 = VDEF <.MEM_99>
_80 = bfd_bread (&armag, 8, archive_20);
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================
_80 = bfd_bread (&armag, 8, archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7: warning: use location
   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
       ^
this stmt is child function---bfd_bread-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_bread 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_80 != 8)
bb index := 27
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 27 ,possiable got to succ := 40

======================================================================
if (_80 != 8)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:6: warning: use location
   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
      ^
if (_80 != 8)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:6: warning: use location
Cond in fucntion main basic block 27
 ================== possible direct basic block ================= 
from main basic block 28
 ================== possible direct basic block ================= 
from main basic block 30
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_73 = BIT_FIELD_REF <*archive_20, 8, 512>;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
   if (!archive->target_defaulted)
       ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_74 = _73 & 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_74 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
   if (!archive->target_defaulted)
      ^
if (_74 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
Cond in fucntion main basic block 12
 ================== possible direct basic block ================= 
from main basic block 13
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_41>
_63 = archive_20->filename;
bb index := 6
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 6 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_63 = archive_20->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
   if (filename_cmp (filename, arch_bfd->filename) == 0)
       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_50 = VDEF <.MEM_43>
_10 = bfd_close (archive_20);
bb index := 38
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 38 ,possiable got to succ := 40

======================================================================
_10 = bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:8: warning: use location
   if (!bfd_close (archive))
        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_46>
bfd_close (archive_20);
bb index := 21
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 21 ,possiable got to succ := 40

======================================================================
# .MEM_53 = VDEF <.MEM_46>
bfd_close (archive_20);
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
       bfd_close (archive);
       ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
   if (!bfd_check_format (archive, bfd_archive))
        ^
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_41>
_7 = bfd_check_format (archive_20, 2);
bb index := 20
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 20 ,possiable got to succ := 40

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052ab2c240
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab28000 archive>
    def_stmt archive_20 = _102;
    version 20
    ptr-info 0x7f052ab40168>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052ab3d750
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab41090 nbfd>
    def_stmt nbfd_93 = PHI <nbfd_92(24), next_94(25)>
    version 93
    ptr-info 0x7f052ab40360>
nbfd_93 = PHI <nbfd_92(24), next_94(25)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_93 != 0B)
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_93 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
       ^
if (nbfd_93 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:7: warning: use location
Cond in fucntion main basic block 26
 ================== possible direct basic block ================= 
from main basic block 25
 ================== possible direct basic block ================= 
from main basic block 27
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_104 = VDEF <.MEM_98>
bfd_close (nbfd_93);
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_104 = VDEF <.MEM_98>
bfd_close (nbfd_93);
bfd_close (nbfd_93);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:4: warning: use location
    bfd_close (nbfd);
    ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
 <ssa_name 0x7f052ab3d750
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab41090 nbfd>
    def_stmt nbfd_93 = PHI <nbfd_92(24), next_94(25)>
    version 93
    ptr-info 0x7f052ab40360>
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_98>
next_94 = nbfd_93->archive_next;
bb index := 25
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 25 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_94 = nbfd_93->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:9: warning: use location
    next = nbfd->archive_next;
         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
bb index := 26
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 26 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_93 = PHI <nbfd_92(24), next_94(25)>
lto1: warning: use location
this stmt have mutiple branch ---(null)-----

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052ab3d750
    type <pointer_type 0x7f052ab0d0a8
        type <record_type 0x7f052ab0df18 bfd BLK
            size <integer_cst 0x7f052b09cc30 constant 576>
            unit size <integer_cst 0x7f052ab10228 constant 72>
            align 64 symtab 0 alias set -1 canonical type 0x7f052ab0ddc8 fields <field_decl 0x7f052ab0fa18 filename> context <translation_unit_decl 0x7f052afee168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7f052ab0d0a8> chain <type_decl 0x7f052ab0fab0 D.4002>>
        public unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
    var <var_decl 0x7f052ab41090 nbfd>
    def_stmt nbfd_93 = PHI <nbfd_92(24), next_94(25)>
    version 93
    ptr-info 0x7f052ab40360>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f052ab34580
    type <pointer_type 0x7f052ab18930
        type <array_type 0x7f052ab18738 type <integer_type 0x7f052ab0d738 char>
            BLK
            size <integer_cst 0x7f052ab103f0 constant 72>
            unit size <integer_cst 0x7f052ab103d8 constant 9>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f052ab18690>
            pointer_to_this <pointer_type 0x7f052ab18930>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f052ab37b40 armag type <array_type 0x7f052ab18738>
        addressable used BLK file ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c line 50 col 8 size <integer_cst 0x7f052ab103f0 72> unit size <integer_cst 0x7f052ab103d8 9>
        align 8 context <function_decl 0x7f052ab0eb00 main> abstract_origin <var_decl 0x7f052ab37990 armag>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f052ab3d090
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _81 = bfd_get_error ();
    version 81>
# .MEM_108 = VDEF <.MEM_106>
_81 = bfd_get_error ();

 ================== trace ptable================== 
trace fucntion name:bfd_get_error 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---bfd_get_error-----
this other function ------bfd_get_error-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_81 != 1)
bb index := 28
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_81 != 1)
bb index := 28
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 40

======================================================================
if (_81 != 1)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:10: warning: use location
       if (bfd_get_error () != bfd_error_system_call)
          ^
if (_81 != 1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:10: warning: use location
Cond in fucntion main basic block 28
 ================== possible direct basic block ================= 
from main basic block 29
 ================== possible direct basic block ================= 
from main basic block 34
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_108 = VDEF <.MEM_106>
_81 = bfd_get_error ();
bb index := 28
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 40

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_108 = VDEF <.MEM_106>
_81 = bfd_get_error ();
bb index := 28
# VUSE <.MEM_50>
return 0;
lto1: warning: use location
beacuse in succ := 40 have return or exit
gimple stmt in succ := 28 ,possiable got to succ := 40

======================================================================
_81 = bfd_get_error ();
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:11: warning: use location
       if (bfd_get_error () != bfd_error_system_call)
           ^
this stmt is child function---bfd_get_error-----

 ================== trace ================== 
 <ssa_name 0x7f052ab3d090
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _81 = bfd_get_error ();
    version 81>
trace fucntion name:bfd_get_error 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f052ab3d090
    type <integer_type 0x7f052aff75e8 int public SI
        size <integer_cst 0x7f052afe3e28 constant 32>
        unit size <integer_cst 0x7f052afe3e40 constant 4>
        align 32 symtab 0 alias set -1 canonical type 0x7f052aff75e8 precision 32 min <integer_cst 0x7f052afe3de0 -2147483648> max <integer_cst 0x7f052afe3df8 2147483647>
        pointer_to_this <pointer_type 0x7f052affea80>>
   
    def_stmt _81 = bfd_get_error ();
    version 81>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7f052afe3fa8 type <integer_type 0x7f052aff75e8 int> constant 3>

dot graph START

======================================================================
 <addr_expr 0x7f052ab346a0
    type <pointer_type 0x7f052ab18930
        type <array_type 0x7f052ab18738 type <integer_type 0x7f052ab0d738 char>
            BLK
            size <integer_cst 0x7f052ab103f0 constant 72>
            unit size <integer_cst 0x7f052ab103d8 constant 9>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f052ab18690>
            pointer_to_this <pointer_type 0x7f052ab18930>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f052ab37b40 armag type <array_type 0x7f052ab18738>
        addressable used BLK file ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c line 50 col 8 size <integer_cst 0x7f052ab103f0 72> unit size <integer_cst 0x7f052ab103d8 9>
        align 8 context <function_decl 0x7f052ab0eb00 main> abstract_origin <var_decl 0x7f052ab37990 armag>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f052ab34760
    type <pointer_type 0x7f052ab18930
        type <array_type 0x7f052ab18738 type <integer_type 0x7f052ab0d738 char>
            BLK
            size <integer_cst 0x7f052ab103f0 constant 72>
            unit size <integer_cst 0x7f052ab103d8 constant 9>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f052ab18690>
            pointer_to_this <pointer_type 0x7f052ab18930>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f052ab37b40 armag type <array_type 0x7f052ab18738>
        addressable used BLK file ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c line 50 col 8 size <integer_cst 0x7f052ab103f0 72> unit size <integer_cst 0x7f052ab103d8 9>
        align 8 context <function_decl 0x7f052ab0eb00 main> abstract_origin <var_decl 0x7f052ab37990 armag>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:7 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:7 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7f052ab34820
    type <pointer_type 0x7f052ab18930
        type <array_type 0x7f052ab18738 type <integer_type 0x7f052ab0d738 char>
            BLK
            size <integer_cst 0x7f052ab103f0 constant 72>
            unit size <integer_cst 0x7f052ab103d8 constant 9>
            align 8 symtab 0 alias set -1 structural equality domain <integer_type 0x7f052ab18690>
            pointer_to_this <pointer_type 0x7f052ab18930>>
        unsigned DI
        size <integer_cst 0x7f052afe3be8 constant 64>
        unit size <integer_cst 0x7f052afe3c00 constant 8>
        align 64 symtab 0 alias set -1 structural equality>
   
    arg 0 <var_decl 0x7f052ab37b40 armag type <array_type 0x7f052ab18738>
        addressable used BLK file ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c line 50 col 8 size <integer_cst 0x7f052ab103f0 72> unit size <integer_cst 0x7f052ab103d8 9>
        align 8 context <function_decl 0x7f052ab0eb00 main> abstract_origin <var_decl 0x7f052ab37990 armag>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:10 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:10 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:bfd_fopen=========
=======is loop:0=========

 bb index 2 
<bb 2> [100.00%]:
_1 = _bfd_new_bfd ();
_2 = (long int) _1;
nbfd_11 = (struct bfd *) _2;
if (_1 == 0)
  goto <bb 8>; [16.72%]
else
  goto <bb 3>; [83.28%]

=======is loop:0=========

 bb index 3 
<bb 3> [83.28%]:
_3 = bfd_find_target (target_12(D), nbfd_11);
_4 = (long int) _3;
target_vec_14 = (const struct bfd_target *) _4;
if (_3 == 0)
  goto <bb 4>; [16.72%]
else
  goto <bb 7>; [83.28%]

=======is loop:0=========

 bb index 4 
<bb 4> [13.92%]:
if (fd_18(D) != -1)
  goto <bb 5>; [52.88%]
else
  goto <bb 6>; [47.12%]

=======is loop:0=========

 bb index 5 
<bb 5> [7.36%]:
close (fd_18(D));

=======is loop:0=========

 bb index 6 
<bb 6> [13.92%]:
_bfd_delete_bfd (nbfd_11);
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [69.36%]:
_5 = strdup (filename_15(D));
nbfd_11->filename = _5;

=======is loop:0=========

 bb index 8 
<bb 8> [100.00%]:
# _6 = PHI <0B(2), 0B(6), nbfd_11(7)>
return _6;

=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [2.67%]:
if (argc_16(D) != 2)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [0.00%]:
_35 = __printf_chk (1, "usage: bfdtest1 <archive>%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [2.67%]:
_1 = *argv_18(D);
_62 = bfd_fopen (_1, 0B, "r", -1);
_102 = _62;
archive_20 = _102;
if (archive_20 == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 19>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [0.00%]:
_36 = __printf_chk (1, "no such archive%s", "");
exit (1);

=======is loop:1=========

 bb index 6 
<bb 6> [15.14%]:
_2 = (long unsigned int) i_12;
_3 = _2 * 8;
_4 = argv_18(D) + _3;
_5 = *_4;
_63 = archive_20->filename;
_64 = filename_cmp (_5, _63);
if (_64 == 0)
  goto <bb 7>; [4.64%]
else
  goto <bb 8>; [95.36%]

=======is loop:1=========

 bb index 7 
<bb 7> [0.70%]:
bfd_set_error (10);
goto <bb 18>; [100.00%]

=======is loop:1=========

 bb index 8 
<bb 8> [14.44%]:
abfd_65 = archive_20->nested_archives;
goto <bb 11>; [100.00%]

=======is loop:1=========

 bb index 9 
<bb 9> [92.50%]:
_67 = abfd_66->filename;
_68 = filename_cmp (_5, _67);
if (_68 == 0)
  goto <bb 18>; [7.50%]
else
  goto <bb 10>; [92.50%]

=======is loop:1=========

 bb index 10 
<bb 10> [85.56%]:
abfd_69 = abfd_66->archive_next;

=======is loop:1=========

 bb index 11 
<bb 11> [100.00%]:
# abfd_66 = PHI <abfd_65(8), abfd_69(10)>
if (abfd_66 != 0B)
  goto <bb 9>; [92.50%]
else
  goto <bb 12>; [7.50%]

=======is loop:1=========

 bb index 12 
<bb 12> [7.50%]:
_73 = BIT_FIELD_REF <*archive_20, 8, 512>;
_74 = _73 & 1;
if (_74 == 0)
  goto <bb 13>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:1=========

 bb index 13 
<bb 13> [3.75%]:
_75 = archive_20->xvec;
target_76 = _75->name;

=======is loop:1=========

 bb index 14 
<bb 14> [7.50%]:
# target_77 = PHI <0B(12), target_76(13)>
_79 = bfd_fopen (_5, target_77, "r", -1);
_114 = _79;
n_bfd_78 = _114;
if (n_bfd_78 != 0B)
  goto <bb 15>; [73.26%]
else
  goto <bb 16>; [26.74%]

=======is loop:1=========

 bb index 15 
<bb 15> [5.49%]:
n_bfd_78->my_archive = archive_20;

=======is loop:1=========

 bb index 16 
<bb 16> [7.50%]:
_116 = n_bfd_78;
abfd_70 = _116;
if (abfd_70 != 0B)
  goto <bb 17>; [73.26%]
else
  goto <bb 18>; [26.74%]

=======is loop:1=========

 bb index 17 
<bb 17> [5.49%]:
_71 = archive_20->nested_archives;
abfd_70->archive_next = _71;
archive_20->nested_archives = abfd_70;

=======is loop:1=========

 bb index 18 
<bb 18> [15.14%]:
# _72 = PHI <0B(7), abfd_66(9), abfd_70(16), abfd_70(17)>
_121 = _72;
nbfd_31 = _121;
_6 = MEM[(int *)nbfd_31];
_37 = __printf_chk (1, "%d\n", _6);
i_32 = i_12 + 1;

=======is loop:1=========

 bb index 19 
<bb 19> [17.81%]:
# i_12 = PHI <1(4), i_32(18)>
if (i_12 < argc_16(D))
  goto <bb 6>; [85.00%]
else
  goto <bb 20>; [15.00%]

=======is loop:0=========

 bb index 20 
<bb 20> [2.67%]:
_7 = bfd_check_format (archive_20, 2);
if (_7 == 0)
  goto <bb 21>; [0.04%]
else
  goto <bb 22>; [99.96%]

=======is loop:0=========

 bb index 21 
<bb 21> [0.00%]:
bfd_close (archive_20);
_38 = __printf_chk (1, "bfd_check_format%s", "");
exit (1);

=======is loop:0=========

 bb index 22 
<bb 22> [2.67%]:
_90 = bfd_read_p (archive_20);
if (_90 != 0)
  goto <bb 23>; [54.00%]
else
  goto <bb 27>; [46.00%]

=======is loop:0=========

 bb index 23 
<bb 23> [1.44%]:
_91 = archive_20->format;
if (_91 == 2)
  goto <bb 24>; [37.68%]
else
  goto <bb 27>; [62.32%]

=======is loop:0=========

 bb index 24 
<bb 24> [0.54%]:
nbfd_92 = archive_20->nested_archives;
goto <bb 26>; [100.00%]

=======is loop:1=========

 bb index 25 
<bb 25> [3.08%]:
next_94 = nbfd_93->archive_next;
bfd_close (nbfd_93);

=======is loop:1=========

 bb index 26 
<bb 26> [3.62%]:
# nbfd_93 = PHI <nbfd_92(24), next_94(25)>
if (nbfd_93 != 0B)
  goto <bb 25>; [85.00%]
else
  goto <bb 27>; [15.00%]

=======is loop:0=========

 bb index 27 
<bb 27> [2.67%]:
_105 = 1;
_80 = bfd_bread (&armag, 8, archive_20);
if (_80 != 8)
  goto <bb 28>; [48.88%]
else
  goto <bb 30>; [51.12%]

=======is loop:0=========

 bb index 28 
<bb 28> [1.31%]:
_81 = bfd_get_error ();
if (_81 != 1)
  goto <bb 29>; [48.88%]
else
  goto <bb 34>; [51.12%]

=======is loop:0=========

 bb index 29 
<bb 29> [0.64%]:
bfd_set_error (3);
goto <bb 34>; [100.00%]

=======is loop:0=========

 bb index 30 
<bb 30> [1.37%]:
_82 = strncmp (&armag, "!<thin>\n", 8);
_83 = _82 == 0;
archive_20->is_thin_archive = _83;
_84 = strncmp (&armag, "!<arch>\n", 8);
if (_84 != 0)
  goto <bb 31>; [50.00%]
else
  goto <bb 33>; [50.00%]

=======is loop:0=========

 bb index 31 
<bb 31> [0.68%]:
_85 = strncmp (&armag, "!<bout>\n", 8);
if (_85 != 0)
  goto <bb 32>; [50.00%]
else
  goto <bb 33>; [50.00%]

=======is loop:0=========

 bb index 32 
<bb 32> [0.34%]:
_86 = BIT_FIELD_REF <*archive_20, 8, 224>;
_87 = _86 & 2;
if (_87 == 0)
  goto <bb 34>; [9.00%]
else
  goto <bb 33>; [91.00%]

=======is loop:0=========

 bb index 33 
<bb 33> [1.33%]:
_88 = archive_20->xvec;

=======is loop:0=========

 bb index 34 
<bb 34> [2.67%]:
# _89 = PHI <0B(28), 0B(29), 0B(32), _88(33)>
armag ={v} {CLOBBER};
_111 = _89;
_8 = archive_20->format;
if (_8 != 0)
  goto <bb 35>; [50.00%]
else
  goto <bb 38>; [50.00%]

=======is loop:0=========

 bb index 35 
<bb 35> [1.34%]:
nbfd_24 = archive_20->nested_archives;
goto <bb 37>; [100.00%]

=======is loop:1=========

 bb index 36 
<bb 36> [7.57%]:
_9 = MEM[(int *)nbfd_11];
_39 = __printf_chk (1, "%d\n", _9);
nbfd_25 = nbfd_11->archive_next;

=======is loop:1=========

 bb index 37 
<bb 37> [8.90%]:
# nbfd_11 = PHI <nbfd_24(35), nbfd_25(36)>
if (nbfd_11 != 0B)
  goto <bb 36>; [85.00%]
else
  goto <bb 38>; [15.00%]

=======is loop:0=========

 bb index 38 
<bb 38> [2.67%]:
_10 = bfd_close (archive_20);
if (_10 == 0)
  goto <bb 39>; [0.04%]
else
  goto <bb 40>; [99.96%]

=======is loop:0=========

 bb index 39 
<bb 39> [0.00%]:
_40 = __printf_chk (1, "bfd_close%s", "");
exit (1);

=======is loop:0=========

 bb index 40 
<bb 40> [2.67%]:
return 0;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    find Entry point : 11 [0m
[40;34m    used_stmt array stack totalsize of : 7696 [0m
[40;34m    collect time: : 0.000581 s [0m
[40;34m    algorithm time: 0.055204 s [0m
[40;34m    gimple stmt count : : 104 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
/usr/bin/ld: /tmp/cc62zIMC.ltrans0.ltrans.o: in function `bfd_fopen':
<artificial>:(.text+0x19): undefined reference to `_bfd_new_bfd'
/usr/bin/ld: <artificial>:(.text+0x30): undefined reference to `bfd_find_target'
/usr/bin/ld: <artificial>:(.text+0x68): undefined reference to `_bfd_delete_bfd'
/usr/bin/ld: /tmp/cc62zIMC.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0xd3): undefined reference to `filename_cmp'
/usr/bin/ld: <artificial>:(.text+0xf5): undefined reference to `filename_cmp'
/usr/bin/ld: <artificial>:(.text+0x16f): undefined reference to `bfd_check_format'
/usr/bin/ld: <artificial>:(.text+0x184): undefined reference to `bfd_read_p'
/usr/bin/ld: <artificial>:(.text+0x1ab): undefined reference to `bfd_bread'
/usr/bin/ld: <artificial>:(.text+0x23e): undefined reference to `bfd_close'
/usr/bin/ld: <artificial>:(.text+0x2bb): undefined reference to `bfd_set_error'
/usr/bin/ld: <artificial>:(.text+0x2cd): undefined reference to `bfd_close'
/usr/bin/ld: <artificial>:(.text+0x310): undefined reference to `bfd_close'
/usr/bin/ld: <artificial>:(.text+0x327): undefined reference to `bfd_get_error'
/usr/bin/ld: <artificial>:(.text+0x33f): undefined reference to `bfd_set_error'
collect2: error: ld returned 1 exit status
