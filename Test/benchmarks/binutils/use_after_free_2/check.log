./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function ‘bfd_generic_archive_p’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7: warning: implicit declaration of function ‘bfd_bread’ [-Wimplicit-function-declaration]
   53 |   if (bfd_bread (armag, SARMAG, abfd) != SARMAG)
      |       ^~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:11: warning: implicit declaration of function ‘bfd_get_error’ [-Wimplicit-function-declaration]
   55 |       if (bfd_get_error () != bfd_error_system_call)
      |           ^~~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:56:9: warning: implicit declaration of function ‘bfd_set_error’ [-Wimplicit-function-declaration]
   56 |         bfd_set_error (bfd_error_wrong_format);
      |         ^~~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33: warning: implicit declaration of function ‘strncmp’ [-Wimplicit-function-declaration]
   60 |   bfd_is_thin_archive (abfd) = (strncmp (armag, ARMAGT, SARMAG) == 0);
      |                                 ^~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:8:1: note: include ‘<string.h>’ or provide a declaration of ‘strncmp’
    7 | #include "../include/binutils.h"
  +++ |+#include <string.h>
    8 | 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:12:16: warning: ‘strncmp’ argument 3 type is ‘int’ where ‘long unsigned int’ is expected in a call to built-in function declared without prototype [-Wbuiltin-declaration-mismatch]
   12 | #define SARMAG 8
      |                ^
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:57: note: in expansion of macro ‘SARMAG’
   60 |   bfd_is_thin_archive (abfd) = (strncmp (armag, ARMAGT, SARMAG) == 0);
      |                                                         ^~~~~~
<built-in>: note: built-in ‘strncmp’ declared here
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:12:16: warning: ‘strncmp’ argument 3 type is ‘int’ where ‘long unsigned int’ is expected in a call to built-in function declared without prototype [-Wbuiltin-declaration-mismatch]
   12 | #define SARMAG 8
      |                ^
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:30: note: in expansion of macro ‘SARMAG’
   62 |   if (strncmp (armag, ARMAG, SARMAG) != 0
      |                              ^~~~~~
<built-in>: note: built-in ‘strncmp’ declared here
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:12:16: warning: ‘strncmp’ argument 3 type is ‘int’ where ‘long unsigned int’ is expected in a call to built-in function declared without prototype [-Wbuiltin-declaration-mismatch]
   12 | #define SARMAG 8
      |                ^
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:34: note: in expansion of macro ‘SARMAG’
   63 |       && strncmp (armag, ARMAGB, SARMAG) != 0
      |                                  ^~~~~~
<built-in>: note: built-in ‘strncmp’ declared here
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function ‘bfd_fopen’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: implicit declaration of function ‘_bfd_new_bfd’ [-Wimplicit-function-declaration]
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: assignment to ‘bfd *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |        ^
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: implicit declaration of function ‘bfd_find_target’ [-Wimplicit-function-declaration]
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^~~~~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:14: warning: assignment to ‘const bfd_target *’ from ‘int’ makes pointer from integer without a cast [-Wint-conversion]
   82 |   target_vec = bfd_find_target (target, nbfd);
      |              ^
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:9: warning: implicit declaration of function ‘close’; did you mean ‘pclose’? [-Wimplicit-function-declaration]
   86 |         close (fd);
      |         ^~~~~
      |         pclose
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: implicit declaration of function ‘_bfd_delete_bfd’ [-Wimplicit-function-declaration]
   87 |       _bfd_delete_bfd (nbfd);
      |       ^~~~~~~~~~~~~~~
In file included from ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:6:
./benchmarks/binutils/use_after_free_2/../include/common.h:22:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: note: in expansion of macro ‘xstrdup’
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^~~~~~~
./benchmarks/binutils/use_after_free_2/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: note: in expansion of macro ‘xstrdup’
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function ‘_bfd_archive_close_and_cleanup’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:7: warning: implicit declaration of function ‘bfd_read_p’ [-Wimplicit-function-declaration]
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |       ^~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:11: warning: implicit declaration of function ‘bfd_close’; did you mean ‘fclose’? [-Wimplicit-function-declaration]
  117 |           bfd_close (nbfd);
      |           ^~~~~~~~~
      |           fclose
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: implicit declaration of function ‘filename_cmp’ [-Wimplicit-function-declaration]
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^~~~~~~~~~~~
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c: In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: implicit declaration of function ‘bfd_check_format’ [-Wimplicit-function-declaration]
  186 |   if (!bfd_check_format (archive, bfd_archive))
      |        ^~~~~~~~~~~~~~~~
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cfg                  ------------|      |      |      |      |          |          |
ompexp                           |      |      |      |      |   +100.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
ssa                              |      |      |      |      |     -2.0%|          |
nothrow                          |      |      |      |      |     -2.0%|          |
fixup_cfg            ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
einline              ------------|      |      |      |      |          |          |
early_optimizations  ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
ethread              ------------|      |      |      |      |          |          |
esra                 ------------|      |      |      |      |          |          |
ealias               ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
iftoswitch           ------------|      |      |      |      |          |          |
profile_estimate     ------------|      |      |      |      |          |          |
local-pure-const                 |      |      |      |      |          |   +100.0%|
release_ssa          ------------|      |      |      |      |          |          |
local-fnsummary      ------------|      |      |      |      |          |          |
=======ipa_pta=========
===============The first stage : Point of interest stmt collect=================
=======node_fun:main=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:find_nested_archive=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:open_nested_file=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:_bfd_archive_close_and_cleanup=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:bfd_openr=========
=======node_fun:bfd_fopen=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
=======node_fun:bfd_generic_archive_p=========
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
--------GIMPLE Cond -------
===============The first stage : Point of interest stmt collect=================
start PointerConstraint
pointer ftable is 0 
pointer ptable is 1 
===============The second stage : Mapping stmt=================
# .MEM_56 = VDEF <.MEM_40(D)>
printf ("usage: bfdtest1 <archive>%s", "");
# .MEM_41 = VDEF <.MEM_40(D)>
archive_20 = bfd_openr (_1, 0B);
# .MEM_54 = VDEF <.MEM_41>
printf ("no such archive%s", "");
# .MEM_52 = VDEF <.MEM_37>
nbfd_34 = find_nested_archive (_5, archive_20);
# .MEM_53 = VDEF <.MEM_52>
printf ("%d\n", _6);
# .MEM_42 = VDEF <.MEM_37>
_7 = bfd_check_format (archive_20, 2);
# .MEM_49 = VDEF <.MEM_42>
bfd_close (archive_20);
# .MEM_50 = VDEF <.MEM_49>
printf ("bfd_check_format%s", "");
# .MEM_43 = VDEF <.MEM_42>
_bfd_archive_close_and_cleanup (archive_20);
# .MEM_44 = VDEF <.MEM_43>
bfd_generic_archive_p (archive_20);
# .MEM_45 = VDEF <.MEM_38>
printf ("%d\n", _9);
# .MEM_46 = VDEF <.MEM_39>
_10 = bfd_close (archive_20);
# .MEM_47 = VDEF <.MEM_46>
printf ("bfd_close%s", "");
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
# .MEM_29 = VDEF <.MEM_24>
bfd_set_error (10);
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
# .MEM_14 = VDEF <.MEM_13(D)>
n_bfd_11 = bfd_openr (filename_9(D), target_4);
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
# .MEM_7 = VDEF <.MEM_6(D)>
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
# .MEM_24 = VDEF <.MEM_21>
close (fd_16(D));
# .MEM_25 = VDEF <.MEM_17>
_bfd_delete_bfd (nbfd_10);
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = bfd_bread (&armag, 8, abfd_13(D));
# .MEM_22 = VDEF <.MEM_20>
_2 = bfd_get_error ();
# .MEM_23 = VDEF <.MEM_22>
bfd_set_error (3);
# VUSE <.MEM_20>
_3 = strncmp (&armag, "!<thin>\n", 8);
# VUSE <.MEM_21>
_5 = strncmp (&armag, "!<arch>\n", 8);
# VUSE <.MEM_21>
_6 = strncmp (&armag, "!<bout>\n", 8);
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
start collect similar stmtstart collect similar stmtstart collect similar stmtstart collect similar stmt
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
===============The second stage : record fucntion =================

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 8 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:exit========= [0m
[40;33m =======POP node_fun stack:exit========= [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:bfd_generic_archive_p========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_generic_archive_p  function_call count: 4 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;33m =======POP node_fun stack:bfd_set_error========= [0m
[40;42m =======pre add _ fucntion:bfd_get_error========= [0m
[40;33m =======POP node_fun stack:bfd_get_error========= [0m
[40;42m =======pre add _ fucntion:bfd_bread========= [0m
[40;33m =======POP node_fun stack:bfd_bread========= [0m
[40;42m =======pre_check_funciton:bfd_generic_archive_p========= [0m
[40;42m =======start_check_funciton:bfd_generic_archive_p========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fbdfac98200
    type <pointer_type 0x7fbdfac7b9d8
        type <array_type 0x7fbdfac7b7e0 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a870 constant 72>
            unit-size <integer_cst 0x7fbdfac6a858 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7b738>
            pointer_to_this <pointer_type 0x7fbdfac7b9d8>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fbdfac97510 armag type <array_type 0x7fbdfac7b7e0>
        addressable BLK ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:50:8 size <integer_cst 0x7fbdfac6a870 72> unit-size <integer_cst 0x7fbdfac6a858 9>
        align:8 warn_if_not_align:0 context <function_decl 0x7fbdfac74a00 bfd_generic_archive_p>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac994c8
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _2 = bfd_get_error ();
    version:2>
# .MEM_22 = VDEF <.MEM_20>
_2 = bfd_get_error ();

 ================== trace ptable================== 
trace fucntion name:bfd_get_error 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---bfd_get_error-----
this other function ------bfd_get_error-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 != 1)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_generic_archive_p’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
if (_2 != 1)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:10: warning: use location
   55 |       if (bfd_get_error () != bfd_error_system_call)
      |          ^
if (_2 != 1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:10: warning: use location
Cond in fucntion bfd_generic_archive_p basic block 3
 ================== possible direct basic block ================= 
from bfd_generic_archive_p basic block 4
 ================== possible direct basic block ================= 
from bfd_generic_archive_p basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
_2 = bfd_get_error ();
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_generic_archive_p’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
_2 = bfd_get_error ();
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:11: warning: use location
   55 |       if (bfd_get_error () != bfd_error_system_call)
      |           ^
this stmt is child function---bfd_get_error-----

 ================== trace ================== 
trace fucntion name:bfd_get_error 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac994c8
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _2 = bfd_get_error ();
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fbdfb14af78 type <integer_type 0x7fbdfb15f5e8 int> constant 3>

dot graph START

======================================================================
 <addr_expr 0x7fbdfac98280
    type <pointer_type 0x7fbdfac7b9d8
        type <array_type 0x7fbdfac7b7e0 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a870 constant 72>
            unit-size <integer_cst 0x7fbdfac6a858 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7b738>
            pointer_to_this <pointer_type 0x7fbdfac7b9d8>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fbdfac97510 armag type <array_type 0x7fbdfac7b7e0>
        addressable BLK ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:50:8 size <integer_cst 0x7fbdfac6a870 72> unit-size <integer_cst 0x7fbdfac6a858 9>
        align:8 warn_if_not_align:0 context <function_decl 0x7fbdfac74a00 bfd_generic_archive_p>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fbdfac98300
    type <pointer_type 0x7fbdfac7b9d8
        type <array_type 0x7fbdfac7b7e0 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a870 constant 72>
            unit-size <integer_cst 0x7fbdfac6a858 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7b738>
            pointer_to_this <pointer_type 0x7fbdfac7b9d8>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fbdfac97510 armag type <array_type 0x7fbdfac7b7e0>
        addressable BLK ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:50:8 size <integer_cst 0x7fbdfac6a870 72> unit-size <integer_cst 0x7fbdfac6a858 9>
        align:8 warn_if_not_align:0 context <function_decl 0x7fbdfac74a00 bfd_generic_archive_p>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:7 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:7 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fbdfac98380
    type <pointer_type 0x7fbdfac7b9d8
        type <array_type 0x7fbdfac7b7e0 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a870 constant 72>
            unit-size <integer_cst 0x7fbdfac6a858 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7b738>
            pointer_to_this <pointer_type 0x7fbdfac7b9d8>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fbdfac97510 armag type <array_type 0x7fbdfac7b7e0>
        addressable BLK ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:50:8 size <integer_cst 0x7fbdfac6a870 72> unit-size <integer_cst 0x7fbdfac6a858 9>
        align:8 warn_if_not_align:0 context <function_decl 0x7fbdfac74a00 bfd_generic_archive_p>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:10 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:10 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_generic_archive_p========= [0m
[40;42m =======pre add _ fucntion:_bfd_archive_close_and_cleanup========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path _bfd_archive_close_and_cleanup  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:bfd_read_p========= [0m
[40;33m =======POP node_fun stack:bfd_read_p========= [0m
[40;42m =======pre_check_funciton:_bfd_archive_close_and_cleanup========= [0m
[40;42m =======start_check_funciton:_bfd_archive_close_and_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90bd0
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80380 abfd>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fbdfac87918>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_22>
return _7;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
nbfd_9 = abfd_7(D)->nested_archives;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_3 != 0B)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:42: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                                          ^
if (nbfd_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:42: warning: use location
Cond in fucntion _bfd_archive_close_and_cleanup basic block 6
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 5
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_22>
return _7;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
bfd_close (nbfd_3);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:11: warning: use location
  117 |           bfd_close (nbfd);
      |           ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_22>
return _7;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_10 = nbfd_3->archive_next;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:16: warning: use location
  116 |           next = nbfd->archive_next;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_2 = abfd_7(D)->format;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_2 == 2)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                         ^
if (_2 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion _bfd_archive_close_and_cleanup basic block 3
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 4
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = bfd_read_p (abfd_7(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:7: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |       ^
this stmt is child function---bfd_read_p-----

 ================== trace ================== 
trace fucntion name:bfd_read_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_1 != 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:6: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |      ^
if (_1 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:6: warning: use location
Cond in fucntion _bfd_archive_close_and_cleanup basic block 2
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 3
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90bd0
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80380 abfd>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fbdfac87918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90b88
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac8ef30 nbfd>
    def_stmt nbfd_3 = PHI <nbfd_9(4), next_10(5)>
    version:3
    ptr-info 0x7fbdfac87900>
nbfd_3 = PHI <nbfd_9(4), next_10(5)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_3 != 0B)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:42: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                                          ^
if (nbfd_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:42: warning: use location
Cond in fucntion _bfd_archive_close_and_cleanup basic block 6
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 5
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_22>
return _7;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bfd_close (nbfd_3);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:11: warning: use location
  117 |           bfd_close (nbfd);
      |           ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_22>
return _7;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_10 = nbfd_3->archive_next;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:16: warning: use location
  116 |           next = nbfd->archive_next;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_46>
return 0;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90b88
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac8ef30 nbfd>
    def_stmt nbfd_3 = PHI <nbfd_9(4), next_10(5)>
    version:3
    ptr-info 0x7fbdfac87900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_bfd_archive_close_and_cleanup========= [0m
[40;42m =======pre add _ fucntion:bfd_check_format========= [0m
[40;33m =======POP node_fun stack:bfd_check_format========= [0m
[40;42m =======pre add _ fucntion:find_nested_archive========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path find_nested_archive  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:open_nested_file========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path open_nested_file  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_openr  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_fopen  function_call count: 5 level :4========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;33m =======POP node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre_check_funciton:bfd_fopen========= [0m
[40;42m =======start_check_funciton:bfd_fopen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();

 ================== trace ptable================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---_bfd_new_bfd-----
this other function ------_bfd_new_bfd-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_1 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
   77 |   if (nbfd == NULL)
      |      ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
Cond in fucntion bfd_fopen basic block 2
 ================== possible direct basic block ================= 
from bfd_fopen basic block 8
 ================== possible direct basic block ================= 
from bfd_fopen basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = (long int) _1;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
nbfd_10 = (struct bfd *) _2;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = _bfd_new_bfd ();
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^
this stmt is child function---_bfd_new_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_21>
close (fd_16(D));
close (fd_16(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:9: warning: use location
   86 |         close (fd);
      |         ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:0 
if (fd_16(D) != -1)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
   85 |       if (fd != -1)
      |          ^
if (fd_16(D) != -1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
Cond in fucntion bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 5
 ================== possible direct basic block ================= 
from bfd_fopen basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>
nbfd_10 = (struct bfd *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
# .MEM_25 = VDEF <.MEM_17>
_bfd_delete_bfd (nbfd_10);
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_fopen========= [0m
[40;42m =======pre_check_funciton:bfd_openr========= [0m
[40;42m =======start_check_funciton:bfd_openr========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
  102 |   return bfd_fopen (filename, target, "r", -1);
      |          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_openr========= [0m
[40;42m =======pre_check_funciton:open_nested_file========= [0m
[40;42m =======start_check_funciton:open_nested_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90948
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80280 filename>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fbdfac878d0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
n_bfd_11 = bfd_openr (filename_9(D), target_4);
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
n_bfd_11 = bfd_openr (filename_9(D), target_4);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:132:11: warning: use location
  132 |   n_bfd = bfd_openr (filename, target);
      |           ^
this stmt is child function---bfd_openr-----

 ================== trace ================== 
trace fucntion name:bfd_openr 
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
n_bfd_11->my_archive = archive_7(D);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
n_bfd_11->my_archive = archive_7(D);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
  135 |       n_bfd->my_archive = archive;
      |                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
n_bfd_11->my_archive = archive_7(D);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
n_bfd_11->my_archive = archive_7(D);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
  135 |       n_bfd->my_archive = archive;
      |                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = archive_7(D)->xvec;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:21: warning: use location
  131 |     target = archive->xvec->name;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
target_8 = _3->name;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:12: warning: use location
  131 |     target = archive->xvec->name;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_4 = PHI <0B(2), target_8(3)>
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
target_4 = PHI <0B(2), target_8(3)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
  130 |   if (!archive->target_defaulted)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = _1 & 1;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
  130 |   if (!archive->target_defaulted)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_2 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
  130 |   if (!archive->target_defaulted)
      |      ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
Cond in fucntion open_nested_file basic block 2
 ================== possible direct basic block ================= 
from open_nested_file basic block 3
 ================== possible direct basic block ================= 
from open_nested_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_bfd_11 != 0B)
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (n_bfd_11 != 0B)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:133:6: warning: use location
  133 |   if (n_bfd != NULL)
      |      ^
if (n_bfd_11 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:133:6: warning: use location
Cond in fucntion open_nested_file basic block 4
 ================== possible direct basic block ================= 
from open_nested_file basic block 5
 ================== possible direct basic block ================= 
from open_nested_file basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90948
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80280 filename>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fbdfac878d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:open_nested_file========= [0m
[40;42m =======pre add _ fucntion:filename_cmp========= [0m
[40;33m =======POP node_fun stack:filename_cmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;33m =======POP node_fun stack:bfd_set_error========= [0m
[40;42m =======pre_check_funciton:find_nested_archive========= [0m
[40;42m =======start_check_funciton:find_nested_archive========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac903f0
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80180 filename>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7fbdfac87810>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:10: warning: use location
  159 |   abfd = open_nested_file (filename, arch_bfd);
      |          ^
this stmt is child function---open_nested_file-----

 ================== trace ================== 
trace fucntion name:open_nested_file 
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
bb index := 10
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_22>
return _7;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================
arch_bfd_11(D)->nested_archives = abfd_16;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
  163 |       arch_bfd->nested_archives = abfd;
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_22>
return _7;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================
_5 = arch_bfd_11(D)->nested_archives;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_22>
return _7;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================
abfd_16->archive_next = _5;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                          ^
abfd_14 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
  152 |   for (abfd = arch_bfd->nested_archives;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (abfd_6 != 0B)
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (abfd_6 != 0B)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:153:13: warning: use location
  153 |        abfd != NULL;
      |             ^
if (abfd_6 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:153:13: warning: use location
Cond in fucntion find_nested_archive basic block 7
 ================== possible direct basic block ================= 
from find_nested_archive basic block 5
 ================== possible direct basic block ================= 
from find_nested_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_22>
return _7;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_20 = abfd_6->archive_next;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
  154 |        abfd = abfd->archive_next)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = abfd_6->filename;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = filename_cmp (filename_12(D), _3);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |          ^
if (_4 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
Cond in fucntion find_nested_archive basic block 5
 ================== possible direct basic block ================= 
from find_nested_archive basic block 10
 ================== possible direct basic block ================= 
from find_nested_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
_1 = arch_bfd_11(D)->filename;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
_2 = filename_cmp (filename_12(D), _1);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘find_nested_archive’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
_2 = filename_cmp (filename_12(D), _1);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac903f0
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80180 filename>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7fbdfac87810>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fbdfac874c8 type <integer_type 0x7fbdfb15f5e8 int> constant 10>
[40;33m =======POP node_fun stack:find_nested_archive========= [0m
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_openr  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_fopen  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;33m =======POP node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre_check_funciton:bfd_fopen========= [0m
[40;42m =======start_check_funciton:bfd_fopen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();

 ================== trace ptable================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---_bfd_new_bfd-----
this other function ------_bfd_new_bfd-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_1 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
   77 |   if (nbfd == NULL)
      |      ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
Cond in fucntion bfd_fopen basic block 2
 ================== possible direct basic block ================= 
from bfd_fopen basic block 8
 ================== possible direct basic block ================= 
from bfd_fopen basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = (long int) _1;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
nbfd_10 = (struct bfd *) _2;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = _bfd_new_bfd ();
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^
this stmt is child function---_bfd_new_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_21>
close (fd_16(D));
close (fd_16(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:9: warning: use location
   86 |         close (fd);
      |         ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:0 
if (fd_16(D) != -1)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
   85 |       if (fd != -1)
      |          ^
if (fd_16(D) != -1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
Cond in fucntion bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 5
 ================== possible direct basic block ================= 
from bfd_fopen basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>
nbfd_10 = (struct bfd *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
# .MEM_25 = VDEF <.MEM_17>
_bfd_delete_bfd (nbfd_10);
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘main’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘main’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_fopen========= [0m
[40;42m =======pre_check_funciton:bfd_openr========= [0m
[40;42m =======start_check_funciton:bfd_openr========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
  102 |   return bfd_fopen (filename, target, "r", -1);
      |          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_openr========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fbdfb346ae0
    type <pointer_type 0x7fbdfac7d3f0
        type <array_type 0x7fbdfac7d348 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a8e8 constant 224>
            unit-size <integer_cst 0x7fbdfac6a8d0 constant 28>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7d2a0>
            pointer_to_this <pointer_type 0x7fbdfac7d3f0>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fbdfb1540e0 type <array_type 0x7fbdfac7d348>
        readonly constant static "usage: bfdtest1 <archive>%s\000">
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:174:5 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:174:5 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:174:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfb152630
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _1 = *argv_18(D);
    version:1
    ptr-info 0x7fbdfac876a8>
# VUSE <.MEM_40(D)>
_1 = *argv_18(D);

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40(D)>
archive_20 = bfd_openr (_1, 0B);
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40(D)>
archive_20 = bfd_openr (_1, 0B);
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
archive_20 = bfd_openr (_1, 0B);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:176:13: warning: use location
  176 |   archive = bfd_openr (argv[0], NULL);
      |             ^
this stmt is child function---bfd_openr-----

 ================== trace ================== 
trace fucntion name:bfd_openr 
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_39>
_10 = bfd_close (archive_20);
bb index := 14
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
_10 = bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:8: warning: use location
  202 |   if (!bfd_close (archive))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 14
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
if (_10 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:6: warning: use location
  202 |   if (!bfd_close (archive))
      |      ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:6: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
nbfd_24 = archive_20->nested_archives;
bb index := 11
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 16

======================================================================
nbfd_24 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:19: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(11), nbfd_26(12)>
bb index := 13
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_11 = PHI <nbfd_24(11), nbfd_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_11 != 0B)
bb index := 13
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_11 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:47: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                                               ^
if (nbfd_11 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:47: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
nbfd_26 = nbfd_11->archive_next;
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_26 = nbfd_11->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:58: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_9 = MEM[(int *)nbfd_11];
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = MEM[(int *)nbfd_11];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:11: warning: use location
  200 |           __USE(nbfd);
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_38>
printf ("%d\n", _9);
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _9);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:11: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
abfd_14 = arch_bfd_11(D)->nested_archives;
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
abfd_14 = arch_bfd_11(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
abfd_14 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
  152 |   for (abfd = arch_bfd->nested_archives;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_20 = abfd_6->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
  154 |        abfd = abfd->archive_next)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = abfd_6->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = filename_cmp (filename_12(D), _3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:10: warning: use location
  159 |   abfd = open_nested_file (filename, arch_bfd);
      |          ^
this stmt is child function---open_nested_file-----

 ================== trace ================== 
trace fucntion name:open_nested_file 
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
arch_bfd_11(D)->nested_archives = abfd_16;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
  163 |       arch_bfd->nested_archives = abfd;
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
_5 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
abfd_16->archive_next = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = arch_bfd_11(D)->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = filename_cmp (filename_12(D), _1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
nbfd_9 = abfd_7(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
bfd_close (nbfd_3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:11: warning: use location
  117 |           bfd_close (nbfd);
      |           ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_10 = nbfd_3->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:16: warning: use location
  116 |           next = nbfd->archive_next;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
_8 = archive_20->format;
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_8 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:196:13: warning: use location
  196 |   if(archive->format != bfd_unknown)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_2 = abfd_7(D)->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_2 == 2)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                         ^
if (_2 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
bfd_generic_archive_p (archive_20);
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
bfd_generic_archive_p (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:194:3: warning: use location
  194 |   bfd_generic_archive_p (archive);
      |   ^
this stmt is child function---bfd_generic_archive_p-----

 ================== trace ================== 
trace fucntion name:bfd_generic_archive_p 
[40;44m =======trace_function_path bfd_generic_archive_p  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:bfd_generic_archive_p========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;46m =======add node_fun stack:bfd_set_error========= [0m
[40;42m =======pre add _ fucntion:bfd_get_error========= [0m
[40;46m =======add node_fun stack:bfd_get_error========= [0m
[40;42m =======pre add _ fucntion:bfd_bread========= [0m
[40;46m =======add node_fun stack:bfd_bread========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
_bfd_archive_close_and_cleanup (archive_20);
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_bfd_archive_close_and_cleanup (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:192:3: warning: use location
  192 |   _bfd_archive_close_and_cleanup (archive);
      |   ^
this stmt is child function---_bfd_archive_close_and_cleanup-----

 ================== trace ================== 
trace fucntion name:_bfd_archive_close_and_cleanup 
[40;44m =======trace_function_path _bfd_archive_close_and_cleanup  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:_bfd_archive_close_and_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;46m =======add node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:bfd_read_p========= [0m
[40;46m =======add node_fun stack:bfd_read_p========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_42>
bfd_close (archive_20);
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
  188 |       bfd_close (archive);
      |       ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_37>
_7 = bfd_check_format (archive_20, 2);
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
  186 |   if (!bfd_check_format (archive, bfd_archive))
      |        ^
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_37>
nbfd_34 = find_nested_archive (_5, archive_20);
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_34 = find_nested_archive (_5, archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:182:16: warning: use location
  182 |         nbfd = find_nested_archive(argv[i], archive);
      |                ^
this stmt is child function---find_nested_archive-----

 ================== trace ================== 
trace fucntion name:find_nested_archive 
[40;44m =======trace_function_path find_nested_archive  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:find_nested_archive========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:open_nested_file========= [0m
[40;46m =======add node_fun stack:open_nested_file========= [0m
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :3========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre add _ fucntion:filename_cmp========= [0m
[40;46m =======add node_fun stack:filename_cmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;46m =======add node_fun stack:bfd_set_error========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_6 = MEM[(int *)nbfd_34];
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = MEM[(int *)nbfd_34];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:9: warning: use location
  183 |         __USE(nbfd);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
printf ("%d\n", _6);
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _6);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:9: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfb152630
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _1 = *argv_18(D);
    version:1
    ptr-info 0x7fbdfac876a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fbdfb346b80
    type <pointer_type 0x7fbdfac7da80
        type <array_type 0x7fbdfac7d9d8 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a930 constant 144>
            unit-size <integer_cst 0x7fbdfac6a918 constant 18>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7d930>
            pointer_to_this <pointer_type 0x7fbdfac7da80>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fbdfac89708 type <array_type 0x7fbdfac7d9d8>
        readonly constant static "no such archive%s\000">
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:178:5 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:178:5 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:178:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfb152750
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fbdfac876d8>
# VUSE <.MEM_37>
_5 = *_4;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_37>
nbfd_34 = find_nested_archive (_5, archive_20);
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_34 = find_nested_archive (_5, archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:182:16: warning: use location
  182 |         nbfd = find_nested_archive(argv[i], archive);
      |                ^
this stmt is child function---find_nested_archive-----

 ================== trace ================== 
trace fucntion name:find_nested_archive 
[40;44m =======trace_function_path find_nested_archive  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:find_nested_archive========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:open_nested_file========= [0m
[40;46m =======add node_fun stack:open_nested_file========= [0m
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :3========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre add _ fucntion:filename_cmp========= [0m
[40;46m =======add node_fun stack:filename_cmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;46m =======add node_fun stack:bfd_set_error========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_6 = MEM[(int *)nbfd_34];
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = MEM[(int *)nbfd_34];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:9: warning: use location
  183 |         __USE(nbfd);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
printf ("%d\n", _6);
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _6);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:9: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_39>
_10 = bfd_close (archive_20);
bb index := 14
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
_10 = bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:8: warning: use location
  202 |   if (!bfd_close (archive))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 14
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
if (_10 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:6: warning: use location
  202 |   if (!bfd_close (archive))
      |      ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:6: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
nbfd_24 = archive_20->nested_archives;
bb index := 11
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 16

======================================================================
nbfd_24 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:19: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(11), nbfd_26(12)>
bb index := 13
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_11 = PHI <nbfd_24(11), nbfd_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_11 != 0B)
bb index := 13
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_11 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:47: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                                               ^
if (nbfd_11 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:47: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
nbfd_26 = nbfd_11->archive_next;
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_26 = nbfd_11->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:58: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_9 = MEM[(int *)nbfd_11];
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = MEM[(int *)nbfd_11];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:11: warning: use location
  200 |           __USE(nbfd);
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_38>
printf ("%d\n", _9);
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _9);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:11: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
abfd_14 = arch_bfd_11(D)->nested_archives;
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
abfd_14 = arch_bfd_11(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
abfd_14 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
  152 |   for (abfd = arch_bfd->nested_archives;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_20 = abfd_6->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
  154 |        abfd = abfd->archive_next)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = abfd_6->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = filename_cmp (filename_12(D), _3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:10: warning: use location
  159 |   abfd = open_nested_file (filename, arch_bfd);
      |          ^
this stmt is child function---open_nested_file-----

 ================== trace ================== 
trace fucntion name:open_nested_file 
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
arch_bfd_11(D)->nested_archives = abfd_16;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
  163 |       arch_bfd->nested_archives = abfd;
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
_5 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
abfd_16->archive_next = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = arch_bfd_11(D)->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = filename_cmp (filename_12(D), _1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
nbfd_9 = abfd_7(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
bfd_close (nbfd_3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:11: warning: use location
  117 |           bfd_close (nbfd);
      |           ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_10 = nbfd_3->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:16: warning: use location
  116 |           next = nbfd->archive_next;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
_8 = archive_20->format;
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_8 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:196:13: warning: use location
  196 |   if(archive->format != bfd_unknown)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_2 = abfd_7(D)->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_2 == 2)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                         ^
if (_2 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
bfd_generic_archive_p (archive_20);
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
bfd_generic_archive_p (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:194:3: warning: use location
  194 |   bfd_generic_archive_p (archive);
      |   ^
this stmt is child function---bfd_generic_archive_p-----

 ================== trace ================== 
trace fucntion name:bfd_generic_archive_p 
[40;44m =======trace_function_path bfd_generic_archive_p  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:bfd_generic_archive_p========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;46m =======add node_fun stack:bfd_set_error========= [0m
[40;42m =======pre add _ fucntion:bfd_get_error========= [0m
[40;46m =======add node_fun stack:bfd_get_error========= [0m
[40;42m =======pre add _ fucntion:bfd_bread========= [0m
[40;46m =======add node_fun stack:bfd_bread========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
_bfd_archive_close_and_cleanup (archive_20);
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_bfd_archive_close_and_cleanup (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:192:3: warning: use location
  192 |   _bfd_archive_close_and_cleanup (archive);
      |   ^
this stmt is child function---_bfd_archive_close_and_cleanup-----

 ================== trace ================== 
trace fucntion name:_bfd_archive_close_and_cleanup 
[40;44m =======trace_function_path _bfd_archive_close_and_cleanup  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:_bfd_archive_close_and_cleanup========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate stmt argument:(null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;46m =======add node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:bfd_read_p========= [0m
[40;46m =======add node_fun stack:bfd_read_p========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_42>
bfd_close (archive_20);
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
  188 |       bfd_close (archive);
      |       ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_37>
_7 = bfd_check_format (archive_20, 2);
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
  186 |   if (!bfd_check_format (archive, bfd_archive))
      |        ^
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfb152750
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _5 = *_4;
    version:5
    ptr-info 0x7fbdfac876d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fbdfb346c40
    type <pointer_type 0x7fbdfac7dc78
        type <array_type 0x7fbdfac7dbd0 type <integer_type 0x7fbdfac73dc8 char>
            SI
            size <integer_cst 0x7fbdfb14adf8 constant 32>
            unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7db28>
            pointer_to_this <pointer_type 0x7fbdfac7dc78>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fbdfb346c20 type <array_type 0x7fbdfac7dbd0>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:2 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:2 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:2>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfb152a20
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfb9f2cf0 archive>
    def_stmt archive_20 = bfd_openr (_1, 0B);
    version:20
    ptr-info 0x7fbdfac87720>
# .MEM_41 = VDEF <.MEM_40(D)>
archive_20 = bfd_openr (_1, 0B);

 ================== trace ptable================== 
trace fucntion name:bfd_openr 
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :889========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---bfd_openr-----
this other function ------bfd_openr-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40(D)>
archive_20 = bfd_openr (_1, 0B);
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40(D)>
archive_20 = bfd_openr (_1, 0B);
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
archive_20 = bfd_openr (_1, 0B);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:176:13: warning: use location
  176 |   archive = bfd_openr (argv[0], NULL);
      |             ^
this stmt is child function---bfd_openr-----

 ================== trace ================== 
trace fucntion name:bfd_openr 
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_39>
_10 = bfd_close (archive_20);
bb index := 14
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
_10 = bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:8: warning: use location
  202 |   if (!bfd_close (archive))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 14
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
if (_10 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:6: warning: use location
  202 |   if (!bfd_close (archive))
      |      ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:6: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
nbfd_24 = archive_20->nested_archives;
bb index := 11
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 16

======================================================================
nbfd_24 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:19: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(11), nbfd_26(12)>
bb index := 13
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_11 = PHI <nbfd_24(11), nbfd_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_11 != 0B)
bb index := 13
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_11 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:47: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                                               ^
if (nbfd_11 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:47: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
nbfd_26 = nbfd_11->archive_next;
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_26 = nbfd_11->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:58: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_9 = MEM[(int *)nbfd_11];
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = MEM[(int *)nbfd_11];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:11: warning: use location
  200 |           __USE(nbfd);
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_38>
printf ("%d\n", _9);
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _9);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:11: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
abfd_14 = arch_bfd_11(D)->nested_archives;
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
abfd_14 = arch_bfd_11(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
abfd_14 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
  152 |   for (abfd = arch_bfd->nested_archives;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_20 = abfd_6->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
  154 |        abfd = abfd->archive_next)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = abfd_6->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = filename_cmp (filename_12(D), _3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:10: warning: use location
  159 |   abfd = open_nested_file (filename, arch_bfd);
      |          ^
this stmt is child function---open_nested_file-----

 ================== trace ================== 
trace fucntion name:open_nested_file 
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
arch_bfd_11(D)->nested_archives = abfd_16;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
  163 |       arch_bfd->nested_archives = abfd;
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
_5 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
abfd_16->archive_next = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = arch_bfd_11(D)->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = filename_cmp (filename_12(D), _1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
nbfd_9 = abfd_7(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
bfd_close (nbfd_3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:11: warning: use location
  117 |           bfd_close (nbfd);
      |           ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_10 = nbfd_3->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:16: warning: use location
  116 |           next = nbfd->archive_next;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
_8 = archive_20->format;
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_8 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:196:13: warning: use location
  196 |   if(archive->format != bfd_unknown)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_2 = abfd_7(D)->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_2 == 2)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                         ^
if (_2 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
bfd_generic_archive_p (archive_20);
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
bfd_generic_archive_p (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:194:3: warning: use location
  194 |   bfd_generic_archive_p (archive);
      |   ^
this stmt is child function---bfd_generic_archive_p-----

 ================== trace ================== 
trace fucntion name:bfd_generic_archive_p 
[40;44m =======trace_function_path bfd_generic_archive_p  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:bfd_generic_archive_p========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;46m =======add node_fun stack:bfd_set_error========= [0m
[40;42m =======pre add _ fucntion:bfd_get_error========= [0m
[40;46m =======add node_fun stack:bfd_get_error========= [0m
[40;42m =======pre add _ fucntion:bfd_bread========= [0m
[40;46m =======add node_fun stack:bfd_bread========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
_bfd_archive_close_and_cleanup (archive_20);
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_bfd_archive_close_and_cleanup (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:192:3: warning: use location
  192 |   _bfd_archive_close_and_cleanup (archive);
      |   ^
this stmt is child function---_bfd_archive_close_and_cleanup-----

 ================== trace ================== 
trace fucntion name:_bfd_archive_close_and_cleanup 
[40;44m =======trace_function_path _bfd_archive_close_and_cleanup  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:_bfd_archive_close_and_cleanup========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;46m =======add node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:bfd_read_p========= [0m
[40;46m =======add node_fun stack:bfd_read_p========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_42>
bfd_close (archive_20);
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
  188 |       bfd_close (archive);
      |       ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_37>
_7 = bfd_check_format (archive_20, 2);
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
  186 |   if (!bfd_check_format (archive, bfd_archive))
      |        ^
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_37>
nbfd_34 = find_nested_archive (_5, archive_20);
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_34 = find_nested_archive (_5, archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:182:16: warning: use location
  182 |         nbfd = find_nested_archive(argv[i], archive);
      |                ^
this stmt is child function---find_nested_archive-----

 ================== trace ================== 
trace fucntion name:find_nested_archive 
[40;44m =======trace_function_path find_nested_archive  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:find_nested_archive========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:open_nested_file========= [0m
[40;46m =======add node_fun stack:open_nested_file========= [0m
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :3========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre add _ fucntion:filename_cmp========= [0m
[40;46m =======add node_fun stack:filename_cmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;46m =======add node_fun stack:bfd_set_error========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_6 = MEM[(int *)nbfd_34];
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = MEM[(int *)nbfd_34];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:9: warning: use location
  183 |         __USE(nbfd);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
printf ("%d\n", _6);
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _6);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:9: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfb152a20
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfb9f2cf0 archive>
    def_stmt archive_20 = bfd_openr (_1, 0B);
    version:20
    ptr-info 0x7fbdfac87720>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfb152a20
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfb9f2cf0 archive>
    def_stmt archive_20 = bfd_openr (_1, 0B);
    version:20
    ptr-info 0x7fbdfac87720>
# .MEM_41 = VDEF <.MEM_40(D)>
archive_20 = bfd_openr (_1, 0B);

 ================== trace ptable================== 
trace fucntion name:bfd_openr 
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :888========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :889========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---bfd_openr-----
this other function ------bfd_openr-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40(D)>
archive_20 = bfd_openr (_1, 0B);
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_41 = VDEF <.MEM_40(D)>
archive_20 = bfd_openr (_1, 0B);
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
archive_20 = bfd_openr (_1, 0B);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:176:13: warning: use location
  176 |   archive = bfd_openr (argv[0], NULL);
      |             ^
this stmt is child function---bfd_openr-----

 ================== trace ================== 
trace fucntion name:bfd_openr 
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_46 = VDEF <.MEM_39>
_10 = bfd_close (archive_20);
bb index := 14
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
_10 = bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:8: warning: use location
  202 |   if (!bfd_close (archive))
      |        ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_10 == 0)
bb index := 14
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 14 ,possiable got to succ := 16

======================================================================
if (_10 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:6: warning: use location
  202 |   if (!bfd_close (archive))
      |      ^
if (_10 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:202:6: warning: use location
Cond in fucntion main basic block 14
 ================== possible direct basic block ================= 
from main basic block 15
 ================== possible direct basic block ================= 
from main basic block 16
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
nbfd_24 = archive_20->nested_archives;
bb index := 11
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 11 ,possiable got to succ := 16

======================================================================
nbfd_24 = archive_20->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:19: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                   ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_11 = PHI <nbfd_24(11), nbfd_26(12)>
bb index := 13
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_11 = PHI <nbfd_24(11), nbfd_26(12)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_11 != 0B)
bb index := 13
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 13 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_11 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:47: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                                               ^
if (nbfd_11 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:47: warning: use location
Cond in fucntion main basic block 13
 ================== possible direct basic block ================= 
from main basic block 12
 ================== possible direct basic block ================= 
from main basic block 14
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_45>
nbfd_26 = nbfd_11->archive_next;
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_26 = nbfd_11->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:199:58: warning: use location
  199 |         for (nbfd = archive->nested_archives; nbfd; nbfd = nbfd->archive_next)
      |                                                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_38>
_9 = MEM[(int *)nbfd_11];
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_9 = MEM[(int *)nbfd_11];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:11: warning: use location
  200 |           __USE(nbfd);
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_45 = VDEF <.MEM_38>
printf ("%d\n", _9);
bb index := 12
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 12 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _9);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:11: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
abfd_14 = arch_bfd_11(D)->nested_archives;
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_24>
abfd_14 = arch_bfd_11(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
abfd_14 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
  152 |   for (abfd = arch_bfd->nested_archives;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_20 = abfd_6->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
  154 |        abfd = abfd->archive_next)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = abfd_6->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = filename_cmp (filename_12(D), _3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:10: warning: use location
  159 |   abfd = open_nested_file (filename, arch_bfd);
      |          ^
this stmt is child function---open_nested_file-----

 ================== trace ================== 
trace fucntion name:open_nested_file 
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
arch_bfd_11(D)->nested_archives = abfd_16;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
  163 |       arch_bfd->nested_archives = abfd;
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
_5 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
abfd_16->archive_next = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = arch_bfd_11(D)->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = filename_cmp (filename_12(D), _1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
nbfd_9 = abfd_7(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================

 Expand conflict 
 The same function may have multiple branches :bfd_close
# .MEM_49 = VDEF <.MEM_42>
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
  188 |       bfd_close (archive);
      |       ^
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:11: warning: use location
  117 |           bfd_close (nbfd);
      |           ^
=======================Path Constaint===========================

=======================Path Constaint===========================


======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_10 = nbfd_3->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:16: warning: use location
  116 |           next = nbfd->archive_next;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_44>
_8 = archive_20->format;
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_8 = archive_20->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:196:13: warning: use location
  196 |   if(archive->format != bfd_unknown)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_2 = abfd_7(D)->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_2 == 2)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                         ^
if (_2 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion main basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_44 = VDEF <.MEM_43>
bfd_generic_archive_p (archive_20);
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
bfd_generic_archive_p (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:194:3: warning: use location
  194 |   bfd_generic_archive_p (archive);
      |   ^
this stmt is child function---bfd_generic_archive_p-----

 ================== trace ================== 
trace fucntion name:bfd_generic_archive_p 
[40;44m =======trace_function_path bfd_generic_archive_p  function_call count: 4 level :0========  [0m
[40;36m ======= node_fun:bfd_generic_archive_p========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;46m =======add node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;46m =======add node_fun stack:bfd_set_error========= [0m
[40;42m =======pre add _ fucntion:bfd_get_error========= [0m
[40;46m =======add node_fun stack:bfd_get_error========= [0m
[40;42m =======pre add _ fucntion:bfd_bread========= [0m
[40;46m =======add node_fun stack:bfd_bread========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_43 = VDEF <.MEM_42>
_bfd_archive_close_and_cleanup (archive_20);
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_bfd_archive_close_and_cleanup (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:192:3: warning: use location
  192 |   _bfd_archive_close_and_cleanup (archive);
      |   ^
this stmt is child function---_bfd_archive_close_and_cleanup-----

 ================== trace ================== 
trace fucntion name:_bfd_archive_close_and_cleanup 
[40;44m =======trace_function_path _bfd_archive_close_and_cleanup  function_call count: 2 level :0========  [0m
[40;36m ======= node_fun:_bfd_archive_close_and_cleanup========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;46m =======add node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:bfd_read_p========= [0m
[40;46m =======add node_fun stack:bfd_read_p========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_49 = VDEF <.MEM_42>
bfd_close (archive_20);
bb index := 9
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 16

======================================================================
# .MEM_49 = VDEF <.MEM_42>
bfd_close (archive_20);
bfd_close (archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:188:7: warning: use location
  188 |       bfd_close (archive);
      |       ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_42 = VDEF <.MEM_37>
_7 = bfd_check_format (archive_20, 2);
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_7 = bfd_check_format (archive_20, 2);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:186:8: warning: use location
  186 |   if (!bfd_check_format (archive, bfd_archive))
      |        ^
this stmt is child function---bfd_check_format-----

 ================== trace ================== 
trace fucntion name:bfd_check_format 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_52 = VDEF <.MEM_37>
nbfd_34 = find_nested_archive (_5, archive_20);
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_34 = find_nested_archive (_5, archive_20);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:182:16: warning: use location
  182 |         nbfd = find_nested_archive(argv[i], archive);
      |                ^
this stmt is child function---find_nested_archive-----

 ================== trace ================== 
trace fucntion name:find_nested_archive 
[40;44m =======trace_function_path find_nested_archive  function_call count: 3 level :0========  [0m
[40;36m ======= node_fun:find_nested_archive========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:open_nested_file========= [0m
[40;46m =======add node_fun stack:open_nested_file========= [0m
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :2========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :3========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with archive ========= [0m
[40;36m ======= relate stmt argument:archive ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre add _ fucntion:filename_cmp========= [0m
[40;46m =======add node_fun stack:filename_cmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;46m =======add node_fun stack:bfd_set_error========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_52>
_6 = MEM[(int *)nbfd_34];
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_6 = MEM[(int *)nbfd_34];
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:9: warning: use location
  183 |         __USE(nbfd);
      |         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_53 = VDEF <.MEM_52>
printf ("%d\n", _6);
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
printf ("%d\n", _6);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:183:9: warning: use location
this stmt is child function---printf-----

 ================== trace ================== 
trace fucntion name:printf 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfb152a20
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfb9f2cf0 archive>
    def_stmt archive_20 = bfd_openr (_1, 0B);
    version:20
    ptr-info 0x7fbdfac87720>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fbdfb346cc0
    type <pointer_type 0x7fbdfac7de70
        type <array_type 0x7fbdfac7ddc8 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a978 constant 152>
            unit-size <integer_cst 0x7fbdfac6a960 constant 19>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7dd20>
            pointer_to_this <pointer_type 0x7fbdfac7de70>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fbdfac89780 type <array_type 0x7fbdfac7ddc8>
        readonly constant static "bfd_check_format%s\000">
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:189:7 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:189:7 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:189:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fbdfb346da0
    type <pointer_type 0x7fbdfac7dc78
        type <array_type 0x7fbdfac7dbd0 type <integer_type 0x7fbdfac73dc8 char>
            SI
            size <integer_cst 0x7fbdfb14adf8 constant 32>
            unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7db28>
            pointer_to_this <pointer_type 0x7fbdfac7dc78>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fbdfb346d80 type <array_type 0x7fbdfac7dbd0>
        readonly constant static "%d\012\000">
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:4 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:4 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:200:4>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fbdfb346e00
    type <pointer_type 0x7fbdfac7e1f8
        type <array_type 0x7fbdfac7e150 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a7c8 constant 96>
            unit-size <integer_cst 0x7fbdfac6a9a8 constant 12>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7e0a8>
            pointer_to_this <pointer_type 0x7fbdfac7e1f8>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    readonly constant
    arg:0 <string_cst 0x7fbdfac89848 type <array_type 0x7fbdfac7e150>
        readonly constant static "bfd_close%s\000">
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:203:5 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:203:5 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:203:5>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:find_nested_archive========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path find_nested_archive  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:open_nested_file========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path open_nested_file  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_openr  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_fopen  function_call count: 5 level :3========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;33m =======POP node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre_check_funciton:bfd_fopen========= [0m
[40;42m =======start_check_funciton:bfd_fopen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘find_nested_archive’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();

 ================== trace ptable================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---_bfd_new_bfd-----
this other function ------_bfd_new_bfd-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_1 == 0)
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
   77 |   if (nbfd == NULL)
      |      ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
Cond in fucntion bfd_fopen basic block 2
 ================== possible direct basic block ================= 
from bfd_fopen basic block 8
 ================== possible direct basic block ================= 
from bfd_fopen basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = (long int) _1;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
nbfd_10 = (struct bfd *) _2;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘find_nested_archive’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = _bfd_new_bfd ();
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^
this stmt is child function---_bfd_new_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘find_nested_archive’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_21>
close (fd_16(D));
close (fd_16(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:9: warning: use location
   86 |         close (fd);
      |         ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:0 
if (fd_16(D) != -1)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
   85 |       if (fd != -1)
      |          ^
if (fd_16(D) != -1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
Cond in fucntion bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 5
 ================== possible direct basic block ================= 
from bfd_fopen basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>
nbfd_10 = (struct bfd *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘find_nested_archive’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
# .MEM_25 = VDEF <.MEM_17>
_bfd_delete_bfd (nbfd_10);
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘find_nested_archive’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_fopen========= [0m
[40;42m =======pre_check_funciton:bfd_openr========= [0m
[40;42m =======start_check_funciton:bfd_openr========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
  102 |   return bfd_fopen (filename, target, "r", -1);
      |          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_openr========= [0m
[40;42m =======pre_check_funciton:open_nested_file========= [0m
[40;42m =======start_check_funciton:open_nested_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90948
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80280 filename>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fbdfac878d0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
n_bfd_11 = bfd_openr (filename_9(D), target_4);
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
n_bfd_11 = bfd_openr (filename_9(D), target_4);
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:132:11: warning: use location
  132 |   n_bfd = bfd_openr (filename, target);
      |           ^
this stmt is child function---bfd_openr-----

 ================== trace ================== 
trace fucntion name:bfd_openr 
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
n_bfd_11->my_archive = archive_7(D);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
n_bfd_11->my_archive = archive_7(D);
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
  135 |       n_bfd->my_archive = archive;
      |                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
n_bfd_11->my_archive = archive_7(D);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
n_bfd_11->my_archive = archive_7(D);
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
  135 |       n_bfd->my_archive = archive;
      |                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = archive_7(D)->xvec;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:21: warning: use location
  131 |     target = archive->xvec->name;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
target_8 = _3->name;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:12: warning: use location
  131 |     target = archive->xvec->name;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_4 = PHI <0B(2), target_8(3)>
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
target_4 = PHI <0B(2), target_8(3)>
In function ‘find_nested_archive’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
  130 |   if (!archive->target_defaulted)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = _1 & 1;
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
  130 |   if (!archive->target_defaulted)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
In function ‘open_nested_file’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_2 == 0)
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
  130 |   if (!archive->target_defaulted)
      |      ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
Cond in fucntion open_nested_file basic block 2
 ================== possible direct basic block ================= 
from open_nested_file basic block 3
 ================== possible direct basic block ================= 
from open_nested_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_bfd_11 != 0B)
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (n_bfd_11 != 0B)
In function ‘find_nested_archive’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:133:6: warning: use location
  133 |   if (n_bfd != NULL)
      |      ^
if (n_bfd_11 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:133:6: warning: use location
Cond in fucntion open_nested_file basic block 4
 ================== possible direct basic block ================= 
from open_nested_file basic block 5
 ================== possible direct basic block ================= 
from open_nested_file basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90948
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80280 filename>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fbdfac878d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:open_nested_file========= [0m
[40;42m =======pre add _ fucntion:filename_cmp========= [0m
[40;33m =======POP node_fun stack:filename_cmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;33m =======POP node_fun stack:bfd_set_error========= [0m
[40;42m =======pre_check_funciton:find_nested_archive========= [0m
[40;42m =======start_check_funciton:find_nested_archive========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac903f0
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80180 filename>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7fbdfac87810>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_25 = VDEF <.MEM_21>
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
bb index := 8
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 10

======================================================================
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:159:10: warning: use location
  159 |   abfd = open_nested_file (filename, arch_bfd);
      |          ^
this stmt is child function---open_nested_file-----

 ================== trace ================== 
trace fucntion name:open_nested_file 
[40;44m =======trace_function_path open_nested_file  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:open_nested_file========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;46m =======add node_fun stack:bfd_openr========= [0m
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :1========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :2========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
bb index := 10
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 10 ,possiable got to succ := 16

======================================================================
_7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_27 = VDEF <.MEM_26>
arch_bfd_11(D)->nested_archives = abfd_16;
bb index := 9
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================
arch_bfd_11(D)->nested_archives = abfd_16;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:163:33: warning: use location
  163 |       arch_bfd->nested_archives = abfd;
      |                                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_25>
_5 = arch_bfd_11(D)->nested_archives;
bb index := 9
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================
_5 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:36: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                                    ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_26 = VDEF <.MEM_25>
abfd_16->archive_next = _5;
bb index := 9
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 9 ,possiable got to succ := 10

======================================================================
abfd_16->archive_next = _5;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:162:26: warning: use location
  162 |       abfd->archive_next = arch_bfd->nested_archives;
      |                          ^
abfd_14 = arch_bfd_11(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:152:13: warning: use location
  152 |   for (abfd = arch_bfd->nested_archives;
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_6 = PHI <abfd_14(4), abfd_20(6)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (abfd_6 != 0B)
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (abfd_6 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:153:13: warning: use location
  153 |        abfd != NULL;
      |             ^
if (abfd_6 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:153:13: warning: use location
Cond in fucntion find_nested_archive basic block 7
 ================== possible direct basic block ================= 
from find_nested_archive basic block 5
 ================== possible direct basic block ================= 
from find_nested_archive basic block 8
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_28>
abfd_20 = abfd_6->archive_next;
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
abfd_20 = abfd_6->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:154:13: warning: use location
  154 |        abfd = abfd->archive_next)
      |             ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_21>
_3 = abfd_6->filename;
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_3 = abfd_6->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_28 = VDEF <.MEM_21>
_4 = filename_cmp (filename_12(D), _3);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_4 = filename_cmp (filename_12(D), _3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:11: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |           ^
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_4 == 0)
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (_4 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
  156 |       if (filename_cmp (filename, abfd->filename) == 0)
      |          ^
if (_4 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:156:10: warning: use location
Cond in fucntion find_nested_archive basic block 5
 ================== possible direct basic block ================= 
from find_nested_archive basic block 10
 ================== possible direct basic block ================= 
from find_nested_archive basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_23(D)>
_1 = arch_bfd_11(D)->filename;
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
_1 = arch_bfd_11(D)->filename;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
  146 |   if (filename_cmp (filename, arch_bfd->filename) == 0)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
_2 = filename_cmp (filename_12(D), _1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_24 = VDEF <.MEM_23(D)>
_2 = filename_cmp (filename_12(D), _1);
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================
_2 = filename_cmp (filename_12(D), _1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:146:7: warning: use location
this stmt is child function---filename_cmp-----

 ================== trace ================== 
trace fucntion name:filename_cmp 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac903f0
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80180 filename>
    def_stmt GIMPLE_NOP
    version:12
    ptr-info 0x7fbdfac87810>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fbdfac874c8 type <integer_type 0x7fbdfb15f5e8 int> constant 10>
[40;33m =======POP node_fun stack:find_nested_archive========= [0m
[40;44m =======node_fun:open_nested_file========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path open_nested_file  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_openr========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path bfd_openr  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_fopen  function_call count: 5 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;33m =======POP node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre_check_funciton:bfd_fopen========= [0m
[40;42m =======start_check_funciton:bfd_fopen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘open_nested_file’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();

 ================== trace ptable================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---_bfd_new_bfd-----
this other function ------_bfd_new_bfd-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_1 == 0)
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
   77 |   if (nbfd == NULL)
      |      ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
Cond in fucntion bfd_fopen basic block 2
 ================== possible direct basic block ================= 
from bfd_fopen basic block 8
 ================== possible direct basic block ================= 
from bfd_fopen basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = (long int) _1;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
nbfd_10 = (struct bfd *) _2;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘open_nested_file’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = _bfd_new_bfd ();
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^
this stmt is child function---_bfd_new_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘open_nested_file’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_21>
close (fd_16(D));
close (fd_16(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:9: warning: use location
   86 |         close (fd);
      |         ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:0 
if (fd_16(D) != -1)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
   85 |       if (fd != -1)
      |          ^
if (fd_16(D) != -1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
Cond in fucntion bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 5
 ================== possible direct basic block ================= 
from bfd_fopen basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>
nbfd_10 = (struct bfd *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘open_nested_file’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
# .MEM_25 = VDEF <.MEM_17>
_bfd_delete_bfd (nbfd_10);
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘open_nested_file’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘open_nested_file’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_fopen========= [0m
[40;42m =======pre_check_funciton:bfd_openr========= [0m
[40;42m =======start_check_funciton:bfd_openr========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
  102 |   return bfd_fopen (filename, target, "r", -1);
      |          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_openr========= [0m
[40;42m =======pre_check_funciton:open_nested_file========= [0m
[40;42m =======start_check_funciton:open_nested_file========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90948
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80280 filename>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fbdfac878d0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
n_bfd_11 = bfd_openr (filename_9(D), target_4);
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
n_bfd_11 = bfd_openr (filename_9(D), target_4);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:132:11: warning: use location
  132 |   n_bfd = bfd_openr (filename, target);
      |           ^
this stmt is child function---bfd_openr-----

 ================== trace ================== 
trace fucntion name:bfd_openr 
[40;44m =======trace_function_path bfd_openr  function_call count: 1 level :0========  [0m
[40;36m ======= node_fun:bfd_openr========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
bfd_fopen this fucntion return value is heap-object 
bfd_openr this fucntion return value is heap-object bfd_fopen
[40;46m =======add node_fun stack:bfd_fopen========= [0m
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :1========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
n_bfd_11->my_archive = archive_7(D);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
n_bfd_11->my_archive = archive_7(D);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
  135 |       n_bfd->my_archive = archive;
      |                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_14>
n_bfd_11->my_archive = archive_7(D);
bb index := 5
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 6

======================================================================
n_bfd_11->my_archive = archive_7(D);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:135:25: warning: use location
  135 |       n_bfd->my_archive = archive;
      |                         ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_3 = archive_7(D)->xvec;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = archive_7(D)->xvec;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:21: warning: use location
  131 |     target = archive->xvec->name;
      |                     ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
target_8 = _3->name;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
target_8 = _3->name;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:131:12: warning: use location
  131 |     target = archive->xvec->name;
      |            ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
target_4 = PHI <0B(2), target_8(3)>
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
target_4 = PHI <0B(2), target_8(3)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_13(D)>
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
  130 |   if (!archive->target_defaulted)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = _1 & 1;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = _1 & 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:7: warning: use location
  130 |   if (!archive->target_defaulted)
      |       ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 6

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_2 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
  130 |   if (!archive->target_defaulted)
      |      ^
if (_2 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:130:6: warning: use location
Cond in fucntion open_nested_file basic block 2
 ================== possible direct basic block ================= 
from open_nested_file basic block 3
 ================== possible direct basic block ================= 
from open_nested_file basic block 4
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (n_bfd_11 != 0B)
bb index := 4
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
  137 |   return n_bfd;
      |          ^
beacuse in succ := 6 have return or exit
# VUSE <.MEM_12>
return n_bfd_11;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:137:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 6

======================================================================
if (n_bfd_11 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:133:6: warning: use location
  133 |   if (n_bfd != NULL)
      |      ^
if (n_bfd_11 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:133:6: warning: use location
Cond in fucntion open_nested_file basic block 4
 ================== possible direct basic block ================= 
from open_nested_file basic block 5
 ================== possible direct basic block ================= 
from open_nested_file basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90948
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80280 filename>
    def_stmt GIMPLE_NOP
    version:9
    ptr-info 0x7fbdfac878d0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:open_nested_file========= [0m
[40;44m =======node_fun:_bfd_archive_close_and_cleanup========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path _bfd_archive_close_and_cleanup  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_close========= [0m
[40;33m =======POP node_fun stack:bfd_close========= [0m
[40;42m =======pre add _ fucntion:bfd_read_p========= [0m
[40;33m =======POP node_fun stack:bfd_read_p========= [0m
[40;42m =======pre_check_funciton:_bfd_archive_close_and_cleanup========= [0m
[40;42m =======start_check_funciton:_bfd_archive_close_and_cleanup========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90bd0
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80380 abfd>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fbdfac87918>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_22>
return _7;
In function ‘_bfd_archive_close_and_cleanup’:
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
nbfd_9 = abfd_7(D)->nested_archives;
bb index := 4
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 4 ,possiable got to succ := 10

======================================================================
nbfd_9 = abfd_7(D)->nested_archives;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:17: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                 ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_3 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:42: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                                          ^
if (nbfd_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:42: warning: use location
Cond in fucntion _bfd_archive_close_and_cleanup basic block 6
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 5
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
bfd_close (nbfd_3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:11: warning: use location
  117 |           bfd_close (nbfd);
      |           ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_10 = nbfd_3->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:16: warning: use location
  116 |           next = nbfd->archive_next;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_14>
_2 = abfd_7(D)->format;
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_2 = abfd_7(D)->format;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:32: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 == 2)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_2 == 2)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |                         ^
if (_2 == 2)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:25: warning: use location
Cond in fucntion _bfd_archive_close_and_cleanup basic block 3
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 4
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_14 = VDEF <.MEM_13(D)>
_1 = bfd_read_p (abfd_7(D));
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = bfd_read_p (abfd_7(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:7: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |       ^
this stmt is child function---bfd_read_p-----

 ================== trace ================== 
trace fucntion name:bfd_read_p 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 != 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_1 != 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:6: warning: use location
  108 |   if (bfd_read_p (abfd) && abfd->format == bfd_archive)
      |      ^
if (_1 != 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:108:6: warning: use location
Cond in fucntion _bfd_archive_close_and_cleanup basic block 2
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 3
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90bd0
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80380 abfd>
    def_stmt GIMPLE_NOP
    version:7
    ptr-info 0x7fbdfac87918>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90b88
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac8ef30 nbfd>
    def_stmt nbfd_3 = PHI <nbfd_9(4), next_10(5)>
    version:3
    ptr-info 0x7fbdfac87900>
nbfd_3 = PHI <nbfd_9(4), next_10(5)>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (nbfd_3 != 0B)
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
if (nbfd_3 != 0B)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:42: warning: use location
  114 |       for (nbfd = abfd->nested_archives; nbfd; nbfd = next)
      |                                          ^
if (nbfd_3 != 0B)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:114:42: warning: use location
Cond in fucntion _bfd_archive_close_and_cleanup basic block 6
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 5
 ================== possible direct basic block ================= 
from _bfd_archive_close_and_cleanup basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
# .MEM_15 = VDEF <.MEM_11>
bfd_close (nbfd_3);
bfd_close (nbfd_3);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:117:11: warning: use location
  117 |           bfd_close (nbfd);
      |           ^
this stmt is child function---bfd_close-----

 ================== trace ================== 
trace fucntion name:bfd_close 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# VUSE <.MEM_11>
next_10 = nbfd_3->archive_next;
bb index := 5
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 5 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
next_10 = nbfd_3->archive_next;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:116:16: warning: use location
  116 |           next = nbfd->archive_next;
      |                ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
bb index := 6
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 6 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
nbfd_3 = PHI <nbfd_9(4), next_10(5)>
lto1: warning: use location
this stmt have mutiple branch --------

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90b88
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac8ef30 nbfd>
    def_stmt nbfd_3 = PHI <nbfd_9(4), next_10(5)>
    version:3
    ptr-info 0x7fbdfac87900>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:_bfd_archive_close_and_cleanup========= [0m
[40;44m =======node_fun:bfd_openr========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_openr  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:bfd_fopen========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path bfd_fopen  function_call count: 5 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;33m =======POP node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre_check_funciton:bfd_fopen========= [0m
[40;42m =======start_check_funciton:bfd_fopen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘bfd_openr’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();

 ================== trace ptable================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---_bfd_new_bfd-----
this other function ------_bfd_new_bfd-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_1 == 0)
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
   77 |   if (nbfd == NULL)
      |      ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
Cond in fucntion bfd_fopen basic block 2
 ================== possible direct basic block ================= 
from bfd_fopen basic block 8
 ================== possible direct basic block ================= 
from bfd_fopen basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = (long int) _1;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
nbfd_10 = (struct bfd *) _2;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘bfd_openr’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = _bfd_new_bfd ();
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^
this stmt is child function---_bfd_new_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘bfd_openr’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_21>
close (fd_16(D));
close (fd_16(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:9: warning: use location
   86 |         close (fd);
      |         ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:0 
if (fd_16(D) != -1)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
   85 |       if (fd != -1)
      |          ^
if (fd_16(D) != -1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
Cond in fucntion bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 5
 ================== possible direct basic block ================= 
from bfd_fopen basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>
nbfd_10 = (struct bfd *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘bfd_openr’:
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
# .MEM_25 = VDEF <.MEM_17>
_bfd_delete_bfd (nbfd_10);
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
In function ‘bfd_openr’:
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
In function ‘bfd_openr’:
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_fopen========= [0m
[40;42m =======pre_check_funciton:bfd_openr========= [0m
[40;42m =======start_check_funciton:bfd_openr========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
  102 |   return bfd_fopen (filename, target, "r", -1);
      |          ^
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:102:10: warning: use location
this stmt is child function---bfd_fopen-----

 ================== trace ================== 
trace fucntion name:bfd_fopen 
[40;44m =======trace_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;36m ======= node_fun:bfd_fopen========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
[40;36m ======= relate stmt argument:filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;46m =======add node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;46m =======add node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;46m =======add node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;46m =======add node_fun stack:_bfd_new_bfd========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90e10
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80400 filename>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7fbdfac87960>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_openr========= [0m
[40;44m =======node_fun:bfd_fopen========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_fopen  function_call count: 5 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:_bfd_delete_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_delete_bfd========= [0m
[40;42m =======pre add _ fucntion:close========= [0m
[40;33m =======POP node_fun stack:close========= [0m
[40;42m =======pre add _ fucntion:bfd_find_target========= [0m
[40;33m =======POP node_fun stack:bfd_find_target========= [0m
[40;42m =======pre add _ fucntion:_bfd_new_bfd========= [0m
[40;33m =======POP node_fun stack:_bfd_new_bfd========= [0m
[40;42m =======pre_check_funciton:bfd_fopen========= [0m
[40;42m =======start_check_funciton:bfd_fopen========= [0m

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));

 ================== trace ptable================== 
trace fucntion name:strdup 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---strdup-----
this Reserved word function ------strdup-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
In function ‘bfd_fopen’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99048
    type <pointer_type 0x7fbdfac73738
        type <integer_type 0x7fbdfac73dc8 char public QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73738>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
        pointer_to_this <pointer_type 0x7fbdfac737e0>>
   
    def_stmt _4 = strdup (filename_13(D));
    version:4
    ptr-info 0x7fbdfac879a8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();

 ================== trace ptable================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---_bfd_new_bfd-----
this other function ------_bfd_new_bfd-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_1 == 0)
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
if (_1 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
   77 |   if (nbfd == NULL)
      |      ^
if (_1 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:77:6: warning: use location
Cond in fucntion bfd_fopen basic block 2
 ================== possible direct basic block ================= 
from bfd_fopen basic block 8
 ================== possible direct basic block ================= 
from bfd_fopen basic block 3
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_2 = (long int) _1;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_2 = (long int) _1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
nbfd_10 = (struct bfd *) _2;
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
nbfd_10 = (struct bfd *) _2;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:8: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |        ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_20 = VDEF <.MEM_19(D)>
_1 = _bfd_new_bfd ();
bb index := 2
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 2 ,possiable got to succ := 10

======================================================================
_1 = _bfd_new_bfd ();
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:76:10: warning: use location
   76 |   nbfd = _bfd_new_bfd ();       /* allocation site */
      |          ^
this stmt is child function---_bfd_new_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_new_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac90f78
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _1 = _bfd_new_bfd ();
    version:1>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99120
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80580 target>
    def_stmt GIMPLE_NOP
    version:11
    ptr-info 0x7fbdfac879f0>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================
# .MEM_24 = VDEF <.MEM_21>
close (fd_16(D));
close (fd_16(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:86:9: warning: use location
   86 |         close (fd);
      |         ^
this stmt is child function---close-----

 ================== trace ================== 
trace fucntion name:close 

 ================== trace ================== 
trace fucntion free:0 
if (fd_16(D) != -1)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
   85 |       if (fd != -1)
      |          ^
if (fd_16(D) != -1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:85:10: warning: use location
Cond in fucntion bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 5
 ================== possible direct basic block ================= 
from bfd_fopen basic block 6
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac991b0
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
    var <parm_decl 0x7fbdfac80680 fd>
    def_stmt GIMPLE_NOP
    version:16>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>
nbfd_10 = (struct bfd *) _2;

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
lto1: warning: use location
this stmt have mutiple branch --------

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
# .MEM_25 = VDEF <.MEM_17>
_bfd_delete_bfd (nbfd_10);
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac990d8
    type <pointer_type 0x7fbdfac7b690
        type <record_type 0x7fbdfac7b5e8 bfd BLK
            size <integer_cst 0x7fbdfb21f0a8 constant 576>
            unit-size <integer_cst 0x7fbdfac6a810 constant 72>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfac7b540 fields <field_decl 0x7fbdfac768e8 filename> context <translation_unit_decl 0x7fbdfb155168 ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c>
            pointer_to_this <pointer_type 0x7fbdfac7b690>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7fbdfac971b0 nbfd>
    def_stmt nbfd_10 = (struct bfd *) _2;
    version:10
    ptr-info 0x7fbdfac879d8>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>
GIMPLE_NOP

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_21>
_4 = strdup (filename_13(D));
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
_4 = strdup (filename_13(D));
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:20: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                    ^
this stmt is child function---strdup-----

 ================== trace ================== 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_23 = VDEF <.MEM_22>
nbfd_10->filename = _4;
bb index := 7
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 7 ,possiable got to succ := 16

======================================================================
nbfd_10->filename = _4;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:93:18: warning: use location
   93 |   nbfd->filename = xstrdup (filename);
      |                  ^

======================================================================
[40;31m    branch possiable have return or exit  [0m
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
bb index := 8
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 8 ,possiable got to succ := 16

======================================================================
_5 = PHI <0B(2), 0B(6), nbfd_10(7)>
lto1: warning: use location
this stmt have mutiple branch --------
_bfd_delete_bfd (nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:87:7: warning: use location
   87 |       _bfd_delete_bfd (nbfd);
      |       ^
this stmt is child function---_bfd_delete_bfd-----

 ================== trace ================== 
trace fucntion name:_bfd_delete_bfd 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_21 = VDEF <.MEM_20>
_3 = bfd_find_target (target_11(D), nbfd_10);
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
_3 = bfd_find_target (target_11(D), nbfd_10);
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:82:16: warning: use location
   82 |   target_vec = bfd_find_target (target, nbfd);
      |                ^
this stmt is child function---bfd_find_target-----

 ================== trace ================== 
trace fucntion name:bfd_find_target 

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_22>
return _7;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
  121 |   return TRUE;
      |          ^
beacuse in succ := 7 have return or exit
# VUSE <.MEM_12>
return 1;
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:121:10: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 7

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
beacuse in succ := 8 have return or exit
# VUSE <.MEM_18>
return _5;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 8

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_3 == 0)
bb index := 3
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
beacuse in succ := 10 have return or exit
# VUSE <.MEM_24>
return _9;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 10

======================================================================
if (_3 == 0)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
   83 |   if (target_vec == NULL)
      |      ^
if (_3 == 0)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:83:6: warning: use location
Cond in fucntion bfd_fopen basic block 3
 ================== possible direct basic block ================= 
from bfd_fopen basic block 4
 ================== possible direct basic block ================= 
from bfd_fopen basic block 7
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac99168
    type <pointer_type 0x7fbdfac73f18
        type <integer_type 0x7fbdfac73e70 char readonly QI
            size <integer_cst 0x7fbdfb14aca8 constant 8>
            unit-size <integer_cst 0x7fbdfb14acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f3f0 precision:8 min <integer_cst 0x7fbdfac6a738 -128> max <integer_cst 0x7fbdfac6a720 127>
            pointer_to_this <pointer_type 0x7fbdfac73f18>>
        public unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7fbdfac80500 filename>
    def_stmt GIMPLE_NOP
    version:13
    ptr-info 0x7fbdfac87a08>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_fopen========= [0m
[40;44m =======node_fun:bfd_generic_archive_p========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path bfd_generic_archive_p  function_call count: 4 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:strncmp========= [0m
[40;33m =======POP node_fun stack:strncmp========= [0m
[40;42m =======pre add _ fucntion:bfd_set_error========= [0m
[40;33m =======POP node_fun stack:bfd_set_error========= [0m
[40;42m =======pre add _ fucntion:bfd_get_error========= [0m
[40;33m =======POP node_fun stack:bfd_get_error========= [0m
[40;42m =======pre add _ fucntion:bfd_bread========= [0m
[40;33m =======POP node_fun stack:bfd_bread========= [0m
[40;42m =======pre_check_funciton:bfd_generic_archive_p========= [0m
[40;42m =======start_check_funciton:bfd_generic_archive_p========= [0m

dot graph START

======================================================================
 <addr_expr 0x7fbdfac98200
    type <pointer_type 0x7fbdfac7b9d8
        type <array_type 0x7fbdfac7b7e0 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a870 constant 72>
            unit-size <integer_cst 0x7fbdfac6a858 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7b738>
            pointer_to_this <pointer_type 0x7fbdfac7b9d8>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fbdfac97510 armag type <array_type 0x7fbdfac7b7e0>
        addressable BLK ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:50:8 size <integer_cst 0x7fbdfac6a870 72> unit-size <integer_cst 0x7fbdfac6a858 9>
        align:8 warn_if_not_align:0 context <function_decl 0x7fbdfac74a00 bfd_generic_archive_p>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:53:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7fbdfac994c8
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _2 = bfd_get_error ();
    version:2>
# .MEM_22 = VDEF <.MEM_20>
_2 = bfd_get_error ();

 ================== trace ptable================== 
trace fucntion name:bfd_get_error 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr---bfd_get_error-----
this other function ------bfd_get_error-----
 
 Start check Pointer Collect  

======================================================================

======================================================================
[40;31m    branch possiable have return or exit  [0m
if (_2 != 1)
bb index := 3
# VUSE <.MEM_46>
return 0;
In function ‘bfd_generic_archive_p’:
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
if (_2 != 1)
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:10: warning: use location
   55 |       if (bfd_get_error () != bfd_error_system_call)
      |          ^
if (_2 != 1)

 ================== find cond branch ================= 
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:10: warning: use location
Cond in fucntion bfd_generic_archive_p basic block 3
 ================== possible direct basic block ================= 
from bfd_generic_archive_p basic block 4
 ================== possible direct basic block ================= 
from bfd_generic_archive_p basic block 5
 ================== warring ================== 
[40;35m    need check this branch possible have return or exit stmt [0m

 ================== warring ================== 

 ================== find cond branch ================= 

======================================================================
[40;31m    branch possiable have return or exit  [0m
# .MEM_22 = VDEF <.MEM_20>
_2 = bfd_get_error ();
bb index := 3
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
beacuse in succ := 16 have return or exit
# VUSE <.MEM_46>
return 0;
lto1: warning: use location
gimple stmt in succ := 3 ,possiable got to succ := 16

======================================================================
_2 = bfd_get_error ();
./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:55:11: warning: use location
   55 |       if (bfd_get_error () != bfd_error_system_call)
      |           ^
this stmt is child function---bfd_get_error-----

 ================== trace ================== 
trace fucntion name:bfd_get_error 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7fbdfac994c8
    type <integer_type 0x7fbdfb15f5e8 int public SI
        size <integer_cst 0x7fbdfb14adf8 constant 32>
        unit-size <integer_cst 0x7fbdfb14ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7fbdfb15f5e8 precision:32 min <integer_cst 0x7fbdfb14adb0 -2147483648> max <integer_cst 0x7fbdfb14adc8 2147483647>
        pointer_to_this <pointer_type 0x7fbdfb1669d8>>
   
    def_stmt _2 = bfd_get_error ();
    version:2>

 ================== Start Use after free Check ================== 

dot graph END

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <integer_cst 0x7fbdfb14af78 type <integer_type 0x7fbdfb15f5e8 int> constant 3>

dot graph START

======================================================================
 <addr_expr 0x7fbdfac98280
    type <pointer_type 0x7fbdfac7b9d8
        type <array_type 0x7fbdfac7b7e0 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a870 constant 72>
            unit-size <integer_cst 0x7fbdfac6a858 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7b738>
            pointer_to_this <pointer_type 0x7fbdfac7b9d8>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fbdfac97510 armag type <array_type 0x7fbdfac7b7e0>
        addressable BLK ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:50:8 size <integer_cst 0x7fbdfac6a870 72> unit-size <integer_cst 0x7fbdfac6a858 9>
        align:8 warn_if_not_align:0 context <function_decl 0x7fbdfac74a00 bfd_generic_archive_p>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:60:33>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fbdfac98300
    type <pointer_type 0x7fbdfac7b9d8
        type <array_type 0x7fbdfac7b7e0 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a870 constant 72>
            unit-size <integer_cst 0x7fbdfac6a858 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7b738>
            pointer_to_this <pointer_type 0x7fbdfac7b9d8>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fbdfac97510 armag type <array_type 0x7fbdfac7b7e0>
        addressable BLK ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:50:8 size <integer_cst 0x7fbdfac6a870 72> unit-size <integer_cst 0x7fbdfac6a858 9>
        align:8 warn_if_not_align:0 context <function_decl 0x7fbdfac74a00 bfd_generic_archive_p>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:7 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:7 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:62:7>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

dot graph START

======================================================================
 <addr_expr 0x7fbdfac98380
    type <pointer_type 0x7fbdfac7b9d8
        type <array_type 0x7fbdfac7b7e0 type <integer_type 0x7fbdfac73dc8 char>
            BLK
            size <integer_cst 0x7fbdfac6a870 constant 72>
            unit-size <integer_cst 0x7fbdfac6a858 constant 9>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality domain <integer_type 0x7fbdfac7b738>
            pointer_to_this <pointer_type 0x7fbdfac7b9d8>>
        unsigned DI
        size <integer_cst 0x7fbdfb14abb8 constant 64>
        unit-size <integer_cst 0x7fbdfb14abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    arg:0 <var_decl 0x7fbdfac97510 armag type <array_type 0x7fbdfac7b7e0>
        addressable BLK ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:50:8 size <integer_cst 0x7fbdfac6a870 72> unit-size <integer_cst 0x7fbdfac6a858 9>
        align:8 warn_if_not_align:0 context <function_decl 0x7fbdfac74a00 bfd_generic_archive_p>>
    ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:10 start: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:10 finish: ./benchmarks/binutils/use_after_free_2/binutils_uaf_2.c:63:10>

 ================== trace ptable================== 

 ================== trace ptable ================== 
GIMPLE CODE :addr_expr--------
this other function -----------

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================
[40;33m =======POP node_fun stack:bfd_generic_archive_p========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118206146]:
if (argc_16(D) != 2)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 47282]:
printf ("usage: bfdtest1 <archive>%s", "");
exit (1);

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 118158864]:
_1 = *argv_18(D);
archive_20 = bfd_openr (_1, 0B);
if (archive_20 == 0B)
  goto <bb 5>; [0.04%]
else
  goto <bb 7>; [99.96%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 47263]:
printf ("no such archive%s", "");
exit (1);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 955630225]:
_2 = (long unsigned int) i_12;
_3 = _2 * 8;
_4 = argv_18(D) + _3;
_5 = *_4;
nbfd_34 = find_nested_archive (_5, archive_20);
_6 = MEM[(int *)nbfd_34];
printf ("%d\n", _6);
i_36 = i_12 + 1;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# i_12 = PHI <1(4), i_36(6)>
if (i_12 < argc_16(D))
  goto <bb 6>; [89.00%]
else
  goto <bb 8>; [11.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 118111600]:
_7 = bfd_check_format (archive_20, 2);
if (_7 == 0)
  goto <bb 9>; [0.04%]
else
  goto <bb 10>; [99.96%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 47245]:
bfd_close (archive_20);
printf ("bfd_check_format%s", "");
exit (1);

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 118064356]:
_bfd_archive_close_and_cleanup (archive_20);
bfd_generic_archive_p (archive_20);
_8 = archive_20->format;
if (_8 != 0)
  goto <bb 11>; [50.00%]
else
  goto <bb 14>; [50.00%]

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 59032178]:
nbfd_24 = archive_20->nested_archives;
goto <bb 13>; [100.00%]

=======is loop:1=========

 bb index 12 
<bb 12> [local count: 477623987]:
_9 = MEM[(int *)nbfd_11];
printf ("%d\n", _9);
nbfd_26 = nbfd_11->archive_next;

=======is loop:1=========

 bb index 13 
<bb 13> [local count: 536656165]:
# nbfd_11 = PHI <nbfd_24(11), nbfd_26(12)>
if (nbfd_11 != 0B)
  goto <bb 12>; [89.00%]
else
  goto <bb 14>; [11.00%]

=======is loop:0=========

 bb index 14 
<bb 14> [local count: 118064356]:
_10 = bfd_close (archive_20);
if (_10 == 0)
  goto <bb 15>; [0.04%]
else
  goto <bb 16>; [99.96%]

=======is loop:0=========

 bb index 15 
<bb 15> [local count: 47226]:
printf ("bfd_close%s", "");
exit (1);

=======is loop:0=========

 bb index 16 
<bb 16> [local count: 118017130]:
return 0;

=======Mapping node_fun:find_nested_archive=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 126766947]:
_1 = arch_bfd_11(D)->filename;
_2 = filename_cmp (filename_12(D), _1);
if (_2 == 0)
  goto <bb 3>; [9.39%]
else
  goto <bb 4>; [90.61%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 11903417]:
bfd_set_error (10);
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 114863530]:
abfd_14 = arch_bfd_11(D)->nested_archives;
goto <bb 7>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686025]:
_3 = abfd_6->filename;
_4 = filename_cmp (filename_12(D), _3);
if (_4 == 0)
  goto <bb 10>; [5.50%]
else
  goto <bb 6>; [94.50%]

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 958878294]:
abfd_20 = abfd_6->archive_next;

=======is loop:1=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# abfd_6 = PHI <abfd_14(4), abfd_20(6)>
if (abfd_6 != 0B)
  goto <bb 5>; [94.50%]
else
  goto <bb 8>; [5.50%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 59055800]:
abfd_16 = open_nested_file (filename_12(D), arch_bfd_11(D));
if (abfd_16 != 0B)
  goto <bb 9>; [70.00%]
else
  goto <bb 10>; [30.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 41339060]:
_5 = arch_bfd_11(D)->nested_archives;
abfd_16->archive_next = _5;
arch_bfd_11(D)->nested_archives = abfd_16;

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 126766948]:
# _7 = PHI <0B(3), abfd_6(5), abfd_16(8), abfd_16(9)>
return _7;

=======Mapping node_fun:open_nested_file=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = BIT_FIELD_REF <*archive_7(D), 8, 512>;
_2 = _1 & 1;
if (_2 == 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 4>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 536870913]:
_3 = archive_7(D)->xvec;
target_8 = _3->name;

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# target_4 = PHI <0B(2), target_8(3)>
n_bfd_11 = bfd_openr (filename_9(D), target_4);
if (n_bfd_11 != 0B)
  goto <bb 5>; [70.00%]
else
  goto <bb 6>; [30.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 751619281]:
n_bfd_11->my_archive = archive_7(D);

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 1073741824]:
return n_bfd_11;

=======Mapping node_fun:_bfd_archive_close_and_cleanup=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 694774112]:
_1 = bfd_read_p (abfd_7(D));
if (_1 != 0)
  goto <bb 3>; [50.00%]
else
  goto <bb 7>; [50.00%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 347387056]:
_2 = abfd_7(D)->format;
if (_2 == 2)
  goto <bb 4>; [34.00%]
else
  goto <bb 7>; [66.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 118111600]:
nbfd_9 = abfd_7(D)->nested_archives;
goto <bb 6>; [100.00%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 955630225]:
next_10 = nbfd_3->archive_next;
bfd_close (nbfd_3);

=======is loop:1=========

 bb index 6 
<bb 6> [local count: 1073741824]:
# nbfd_3 = PHI <nbfd_9(4), next_10(5)>
if (nbfd_3 != 0B)
  goto <bb 5>; [89.00%]
else
  goto <bb 7>; [11.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 694774112]:
return 1;

=======Mapping node_fun:bfd_openr=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_5 = bfd_fopen (filename_2(D), target_3(D), "r", -1);
return _5;

=======Mapping node_fun:bfd_fopen=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = _bfd_new_bfd ();
_2 = (long int) _1;
nbfd_10 = (struct bfd *) _2;
if (_1 == 0)
  goto <bb 8>; [29.93%]
else
  goto <bb 3>; [70.07%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 752370896]:
_3 = bfd_find_target (target_11(D), nbfd_10);
if (_3 == 0)
  goto <bb 4>; [29.93%]
else
  goto <bb 7>; [70.07%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 225184609]:
if (fd_16(D) != -1)
  goto <bb 5>; [48.88%]
else
  goto <bb 6>; [51.12%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 110070236]:
close (fd_16(D));

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 225184609]:
_bfd_delete_bfd (nbfd_10);
goto <bb 8>; [100.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 527186286]:
_4 = strdup (filename_13(D));
nbfd_10->filename = _4;

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 1073741824]:
# _5 = PHI <0B(2), 0B(6), nbfd_10(7)>
return _5;

=======Mapping node_fun:bfd_generic_archive_p=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741823]:
_1 = bfd_bread (&armag, 8, abfd_13(D));
if (_1 != 8)
  goto <bb 3>; [16.75%]
else
  goto <bb 6>; [83.25%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 179851752]:
_2 = bfd_get_error ();
if (_2 != 1)
  goto <bb 4>; [48.88%]
else
  goto <bb 5>; [51.12%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 87911536]:
bfd_set_error (3);

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 179851752]:
goto <bb 10>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 893890071]:
_3 = strncmp (&armag, "!<thin>\n", 8);
_4 = _3 == 0;
abfd_13(D)->is_thin_archive = _4;
_5 = strncmp (&armag, "!<arch>\n", 8);
if (_5 != 0)
  goto <bb 7>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 446945035]:
_6 = strncmp (&armag, "!<bout>\n", 8);
if (_6 != 0)
  goto <bb 8>; [50.00%]
else
  goto <bb 9>; [50.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 223472518]:
_7 = BIT_FIELD_REF <*abfd_13(D), 8, 224>;
_8 = _7 & 2;
if (_8 == 0)
  goto <bb 10>; [17.38%]
else
  goto <bb 9>; [82.62%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 855050548]:
_16 = abfd_13(D)->xvec;

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 1073741824]:
# _9 = PHI <0B(5), 0B(8), _16(9)>
armag ={v} {CLOBBER};
return _9;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 1 [0m
[40;34m    gimple free   count : 0 [0m
[40;34m    find Entry point : 15 [0m
[40;34m    used_stmt array stack totalsize of : 0.005184 mb[0m
[40;34m    collect time: : 0.000694 s [0m
[40;34m    algorithm time: 0.118160 s [0m
[40;34m    gimple stmt count : : 102 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
Profile consistency report:

                                 |mismatch     |mismatch     |                     |
Pass name                        |IN    |IN    |OUT   |OUT   |overall              |
                                 |freq  |count |freq  |count |size      |time      |
cp                   ------------|      |      |      |      |          |          |
inline               ------------|      |      |      |      |          |          |
fixup_cfg            ------------|      |      |      |      |          |          |
adjust_alignment     ------------|      |      |      |      |          |          |
ccp                  ------------|      |      |      |      |          |          |
backprop             ------------|      |      |      |      |          |          |
phiprop              ------------|      |      |      |      |          |          |
forwprop             ------------|      |      |      |      |          |          |
objsz                ------------|      |      |      |      |          |          |
alias                ------------|      |      |      |      |          |          |
retslot              ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
stdarg               ------------|      |      |      |      |          |          |
cdce                 ------------|      |      |      |      |          |          |
cselim               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
ifcombine            ------------|      |      |      |      |          |          |
mergephi             ------------|      |      |      |      |          |          |
phiopt               ------------|      |      |      |      |          |          |
ch                               |      |      |      |      |     +2.0%|     +0.0%|
cplxlower                        |      |      |      |      |     +2.0%|     +0.0%|
sra                  ------------|      |      |      |      |          |          |
dom                              |      |      |      |      |     -1.0%|     -5.7%|
copyprop                         |      |      |      |      |     -1.2%|     -6.1%|
reassoc                          |      |      |      |      |     -0.2%|     -0.0%|
dce                  ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.2%|     -0.0%|
phiopt                           |      |      |      |      |     -0.2%|     -0.0%|
ccp                  ------------|      |      |      |      |          |          |
sincos               ------------|      |      |      |      |          |          |
laddress             ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
walloca              ------------|      |      |      |      |          |          |
sink                 ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
fix_loops            ------------|      |      |      |      |          |          |
loop                 ------------|      |      |      |      |          |          |
loopinit                         |      |      |      |      |    -40.8%|    -67.3%|
sccp                 ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
ivcanon              ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
cunroll              ------------|      |      |      |      |          |          |
ivopts               ------------|      |      |      |      |          |          |
lim                  ------------|      |      |      |      |          |          |
loopdone             ------------|      |      |      |      |          |          |
no_loop                          |      |      |      |      |    +68.9%|   +205.6%|
veclower2            ------------|      |      |      |      |          |          |
switchlower          ------------|      |      |      |      |          |          |
reassoc              ------------|      |      |      |      |          |          |
slsr                 ------------|      |      |      |      |          |          |
dom                  ------------|      |      |      |      |          |          |
strlen               ------------|      |      |      |      |          |          |
copyprop             ------------|      |      |      |      |          |          |
wrestrict            ------------|      |      |      |      |          |          |
cddce                ------------|      |      |      |      |          |          |
forwprop                         |      |      |      |      |     -0.2%|     -0.0%|
phiopt                           |      |      |      |      |     -0.2%|     -0.0%|
fab                  ------------|      |      |      |      |          |          |
dce                  ------------|      |      |      |      |          |          |
crited               ------------|      |      |      |      |          |          |
uncprop              ------------|      |      |      |      |          |          |
local-pure-const     ------------|      |      |      |      |          |          |
modref               ------------|      |      |      |      |          |          |
nrv                  ------------|      |      |      |      |          |          |
isel                 ------------|      |      |      |      |          |          |
optimized            ------------|      |      |      |      |          |          |
expand                           |      |      |      |      |----------|----------|
vregs                            |      |      |      |      |    +75.8%|    +53.3%|
into_cfglayout                   |      |      |      |      |     -1.2%|     -0.7%|
jump                             |      |      |      |      |     -2.2%|     -2.4%|
subreg1                          |      |      |      |      |     -1.0%|     -1.7%|
dfinit               ------------|      |      |      |      |          |          |
cse1                 ------------|      |      |      |      |          |          |
fwprop1                          |      |      |      |      |     -0.6%|     -0.7%|
ce1                              |      |      |      |      |     -0.6%|     -0.3%|
reginfo                          |      |      |      |      |          |     +0.4%|
loop2                ------------|      |      |      |      |          |          |
loop2_init           ------------|      |      |      |      |          |          |
loop2_invariant      ------------|      |      |      |      |          |          |
loop2_done           ------------|      |      |      |      |          |          |
dse1                 ------------|      |      |      |      |          |          |
fwprop2              ------------|      |      |      |      |          |          |
init-regs            ------------|      |      |      |      |          |          |
combine                          |      |      |      |      |     +2.0%|     +3.3%|
ce2                              |      |      |      |      |     +2.0%|     +3.2%|
outof_cfglayout                  |      |      |      |      |     +0.7%|     +0.3%|
split1                           |      |      |      |      |     +0.7%|     +0.3%|
subreg3              ------------|      |      |      |      |          |          |
mode_sw              ------------|      |      |      |      |          |          |
asmcons              ------------|      |      |      |      |          |          |
ira                  ------------|      |      |      |      |          |          |
reload                           |      |      |      |      |     -6.6%|    -10.7%|
postreload                       |      |      |      |      |     -7.1%|    -12.0%|
split2                           |      |      |      |      |     -0.6%|     -0.1%|
cmpelim                          |      |      |      |      |     -0.6%|     -0.1%|
pro_and_epilogue                 |      |      |      |      |     +6.9%|    +10.8%|
dse2                             |      |      |      |      |     +6.5%|     +9.8%|
csa                  ------------|      |      |      |      |          |          |
jump2                ------------|      |      |      |      |          |          |
ce3                  ------------|      |      |      |      |          |          |
cprop_hardreg                    |      |      |      |      |     -0.1%|     -0.2%|
rtl_dce                          |      |      |      |      |     -0.1%|     -0.2%|
bbro                             |      |      |      |      |     +0.1%|     -0.2%|
split4                           |      |      |      |      |     +0.1%|     -0.2%|
stack                ------------|      |      |      |      |          |          |
zero_call_used_regs  ------------|      |      |      |      |          |          |
alignments           ------------|      |      |      |      |          |          |
/usr/bin/ld: /tmp/cctAZycf.ltrans0.ltrans.o: in function `bfd_generic_archive_p':
<artificial>:(.text+0x1b): undefined reference to `bfd_bread'
/usr/bin/ld: <artificial>:(.text+0x91): undefined reference to `bfd_get_error'
/usr/bin/ld: <artificial>:(.text+0xa7): undefined reference to `bfd_set_error'
/usr/bin/ld: /tmp/cctAZycf.ltrans0.ltrans.o: in function `bfd_fopen':
<artificial>:(.text+0xd2): undefined reference to `_bfd_new_bfd'
/usr/bin/ld: <artificial>:(.text+0xee): undefined reference to `bfd_find_target'
/usr/bin/ld: <artificial>:(.text+0x11e): undefined reference to `_bfd_delete_bfd'
/usr/bin/ld: /tmp/cctAZycf.ltrans0.ltrans.o: in function `_bfd_archive_close_and_cleanup':
<artificial>:(.text+0x17b): undefined reference to `bfd_read_p'
/usr/bin/ld: <artificial>:(.text+0x1a6): undefined reference to `bfd_close'
/usr/bin/ld: /tmp/cctAZycf.ltrans0.ltrans.o: in function `find_nested_archive':
<artificial>:(.text+0x1c4): undefined reference to `filename_cmp'
/usr/bin/ld: <artificial>:(.text+0x1e2): undefined reference to `filename_cmp'
/usr/bin/ld: <artificial>:(.text+0x222): undefined reference to `bfd_set_error'
/usr/bin/ld: /tmp/cctAZycf.ltrans0.ltrans.o: in function `main':
<artificial>:(.text+0x283): undefined reference to `bfd_check_format'
/usr/bin/ld: <artificial>:(.text+0x2d1): undefined reference to `bfd_close'
/usr/bin/ld: <artificial>:(.text+0x32a): undefined reference to `bfd_close'
collect2: error: ld returned 1 exit status
