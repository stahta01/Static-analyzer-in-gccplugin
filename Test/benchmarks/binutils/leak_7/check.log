../Compiler/newplugin.so 11.2.0 
./benchmarks/binutils/leak_7/binutils_leak_7.c: In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: implicit declaration of function ‘memcpy’ [-Wimplicit-function-declaration]
   44 |   memcpy (dirname, filename, base - filename);
      |   ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:9:1: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
    8 | #include "../include/binutils.h"
  +++ |+#include <string.h>
    9 | 
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   44 |   memcpy (dirname, filename, base - filename);
      |   ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
./benchmarks/binutils/leak_7/binutils_leak_7.c: In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: implicit declaration of function ‘strlen’ [-Wimplicit-function-declaration]
   61 |         unsigned long length = strlen (arg);
      |                                ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: note: include ‘<string.h>’ or provide a declaration of ‘strlen’
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: incompatible implicit declaration of built-in function ‘memcpy’ [-Wbuiltin-declaration-mismatch]
   62 |         memcpy (end, arg, length);
      |         ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: note: include ‘<string.h>’ or provide a declaration of ‘memcpy’
In file included from ./benchmarks/binutils/leak_7/binutils_leak_7.c:7:
./benchmarks/binutils/leak_7/binutils_leak_7.c: In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/../include/common.h:22:20: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: note: in expansion of macro ‘xstrdup’
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^~~~~~~
./benchmarks/binutils/leak_7/../include/common.h:22:20: warning: incompatible implicit declaration of built-in function ‘strdup’ [-Wbuiltin-declaration-mismatch]
   22 | #define xstrdup(a) strdup(a)
      |                    ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: note: in expansion of macro ‘xstrdup’
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^~~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:21: warning: implicit declaration of function ‘setlocale’ [-Wimplicit-function-declaration]
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |                     ^~~~~~~~~
./benchmarks/binutils/leak_7/../include/common.h:22:27: note: in definition of macro ‘xstrdup’
   22 | #define xstrdup(a) strdup(a)
      |                           ^
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:21: warning: passing argument 1 of ‘strdup’ makes pointer from integer without a cast [-Wint-conversion]
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~
      |                     |
      |                     int
./benchmarks/binutils/leak_7/../include/common.h:22:27: note: in definition of macro ‘xstrdup’
   22 | #define xstrdup(a) strdup(a)
      |                           ^
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:21: note: expected ‘const char *’ but argument is of type ‘int’
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |                     ^~~~~~~~~~~~~~~~~~~~~~~~
./benchmarks/binutils/leak_7/../include/common.h:22:27: note: in definition of macro ‘xstrdup’
   22 | #define xstrdup(a) strdup(a)
      |                           ^
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: incompatible implicit declaration of built-in function ‘strlen’ [-Wbuiltin-declaration-mismatch]
  112 |   progsize = strlen (progname);
      |              ^~~~~~
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: note: include ‘<string.h>’ or provide a declaration of ‘strlen’

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  1298k ( 48%)
 phase parsing                      :   0.03 ( 60%)   0.01 ( 50%)   0.05 ( 71%)  1152k ( 42%)
 phase opt and generate             :   0.02 ( 40%)   0.01 ( 50%)   0.02 ( 29%)   261k ( 10%)
 callgraph optimization             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    32  (  0%)
 callgraph ipa passes               :   0.02 ( 40%)   0.01 ( 50%)   0.02 ( 29%)   150k (  6%)
 lto stream compression             :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)     0  (  0%)
 ipa lto gimple out                 :   0.01 ( 20%)   0.00 (  0%)   0.00 (  0%)  3504  (  0%)
 preprocessing                      :   0.02 ( 40%)   0.00 (  0%)   0.02 ( 29%)   376k ( 14%)
 lexical analysis                   :   0.00 (  0%)   0.01 ( 50%)   0.01 ( 14%)     0  (  0%)
 parser (global)                    :   0.01 ( 20%)   0.00 (  0%)   0.01 ( 14%)   633k ( 23%)
 parser function body               :   0.00 (  0%)   0.00 (  0%)   0.01 ( 14%)    59k (  2%)
 tree CCP                           :   0.01 ( 20%)   0.01 ( 50%)   0.00 (  0%)   760  (  0%)
 TOTAL                              :   0.05          0.02          0.07         2722k
../Compiler/newplugin.so 11.2.0 

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.01 (100%)  2157k ( 96%)
 phase stream out                   :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 ipa lto decl out                   :   0.01 (100%)   0.00 (  0%)   0.00 (  0%)     0  (  0%)
 TOTAL                              :   0.01          0.00          0.01         2238k
../Compiler/newplugin.so 11.2.0 
=======ipa_pta=========
=============== The first stage : Point of interest stmt collect =================
=======node_fun:main=========
addr_expraddr_expraddr_expraddr_expraddr_expr------do_start_initialization--
addr_expraddr_expraddr_expraddr_expraddr_expr------concat--
=======node_fun:do_start_initialization=========
node:= 2 
 	next_branch :=3
	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------ldirname--
addr_expraddr_expraddr_expraddr_expraddr_expr------concat--
addr_expraddr_expraddr_expraddr_expraddr_expr------setlocale--
addr_expraddr_expraddr_expraddr_expraddr_expr------setlocale--
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
addr_expraddr_expraddr_expraddr_expraddr_expr------PyMem_Malloc--
node:= 3 
 	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_fwrite--
node:= 4 
 	next_branch :=5
	next_branch :=6
addr_expraddr_expraddr_expraddr_expraddr_expr------mbstowcs--
node:= 5 
 	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------__builtin_fwrite--
node:= 6 
 	next_branch :=7
addr_expraddr_expraddr_expraddr_expraddr_expr------setlocale--
addr_expraddr_expraddr_expraddr_expraddr_expr------Py_SetProgramName--
=======node_fun:Py_SetProgramName=========
=======node_fun:PyMem_Malloc=========
=======node_fun:concat=========
addr_expraddr_expraddr_expraddr_expraddr_expr------vconcat_copy--
=======node_fun:vconcat_copy=========
addr_expraddr_expraddr_expraddr_expraddr_expr------strlen--
addr_expraddr_expraddr_expraddr_expraddr_expr------memcpy--
=======node_fun:ldirname=========
node:= 2 
 	next_branch :=4
addr_expraddr_expraddr_expraddr_expraddr_expr------lbasename--
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=5
	next_branch :=6
node:= 5 
 	next_branch :=3
	next_branch :=6
node:= 6 
 	next_branch :=12
	next_branch :=7
node:= 7 
 	next_branch :=8
	next_branch :=11
addr_expraddr_expraddr_expraddr_expraddr_expr------memcpy--
node:= 8 
 	next_branch :=9
	next_branch :=11
node:= 9 
 	next_branch :=10
	next_branch :=11
node:= 10 
 	next_branch :=11
node:= 11 
 	next_branch :=12
=======node_fun:lbasename=========
addr_expraddr_expraddr_expraddr_expraddr_expr------unix_lbasename--
=======node_fun:unix_lbasename=========
node:= 2 
 	next_branch :=4
node:= 3 
 	next_branch :=4
node:= 4 
 	next_branch :=3
	next_branch :=5
=============== The first stage :  record fucntion =================
start PointerConstraint
ptable point 41 
===============The second stage : Mapping stmt=================
# .MEM_2 = VDEF <.MEM_1(D)>
do_start_initialization ();
# .MEM_3 = VDEF <.MEM_2>
concat ("dummy", "");
# .MEM_40 = VDEF <.MEM_39(D)>
_2 = ldirname (_1);
# .MEM_41 = VDEF <.MEM_40>
progname_16 = concat (_2, "bin");
# .MEM_42 = VDEF <.MEM_41>
_3 = setlocale ("LC_ALL", 0B);
# .MEM_43 = VDEF <.MEM_42>
oldloc_19 = strdup (_5);
# .MEM_44 = VDEF <.MEM_43>
setlocale ("LC_ALL", "");
# VUSE <.MEM_44>
progsize_21 = strlen (progname_16);
# .MEM_45 = VDEF <.MEM_44>
progname_copy_23 = PyMem_Malloc (_7);
# .MEM_55 = VDEF <.MEM_54>
__builtin_fwrite ("out of memory\n", 1, 14, _8);
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
# VUSE <.MEM_31(D)>
base_23 = lbasename (filename_22(D));
# .MEM_32 = VDEF <.MEM_31(D)>
dirname_26 = malloc (_4);
# .MEM_33 = VDEF <.MEM_32>
memcpy (dirname_26, filename_22(D), _6);
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
===============The second stage : Program slicing=================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
concat ("dummy", "");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
concat ("dummy", "");
========================================================
=============== *this point analyzable =================
_2 = ldirname (_1);
========================================================
=============== *this point analyzable =================
_2 = ldirname (_1);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
progname_16 = concat (_2, "bin");
========================================================
=============== *this point analyzable =================
progname_16 = concat (_2, "bin");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
_3 = setlocale ("LC_ALL", 0B);
========================================================
=============== *this point analyzable =================
_3 = setlocale ("LC_ALL", 0B);
========================================================
=============== *this point analyzable =================
oldloc_19 = strdup (_5);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
setlocale ("LC_ALL", "");
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
setlocale ("LC_ALL", "");
========================================================
=============== *this point analyzable =================
progsize_21 = strlen (progname_16);
========================================================
=============== *this point analyzable =================
progname_copy_23 = PyMem_Malloc (_7);
========================================================
=============== *this point analyzable =================
progname_copy_23 = PyMem_Malloc (_7);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_fwrite ("out of memory\n", 1, 14, _8);
========================================================
=============== *this point analyzable =================
__builtin_fwrite ("out of memory\n", 1, 14, _8);
========================================================
=============== *this point analyzable =================
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
========================================================
=============== *this point analyzable =================
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
========================================================
=============== *this point analyzable =================
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
========================================================
------------------VAR_DECL : LHS2------------------
=============== *this point analyzable =================
setlocale ("LC_ALL", oldloc_19);
========================================================
=============== *this point analyzable =================
ret_4 = malloc (size_2(D));
========================================================
=============== *this point analyzable =================
newstr_3 = malloc (1);
========================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
=============== *this point analyzable =================
vconcat_copy (newstr_3, first_4(D), arg_5(D));
========================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
=============== *this point analyzable =================
vconcat_copy (newstr_3, first_4(D), arg_5(D));
========================================================
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
=============== *this point analyzable =================
length_4 = strlen (arg_3(D));
========================================================
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
=============== *this point analyzable =================
length_4 = strlen (arg_3(D));
========================================================
=============== *this point analyzable =================
memcpy (dst_1(D), arg_3(D), length_4);
========================================================
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>
=============== *this point analyzable =================
base_23 = lbasename (filename_22(D));
========================================================
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>
=============== *this point analyzable =================
base_23 = lbasename (filename_22(D));
========================================================
=============== *this point analyzable =================
dirname_26 = malloc (_4);
========================================================
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>
=============== *this point analyzable =================
memcpy (dirname_26, filename_22(D), _6);
========================================================
=============== *this point analyzable =================
_3 = unix_lbasename (name_2(D));
========================================================
=============== *this point analyzable =================
_3 = unix_lbasename (name_2(D));
========================================================
=============== *this point analyzable =================
oldloc_19 = strdup (_5);
========================================================
=============== *this point analyzable =================
ret_4 = malloc (size_2(D));
========================================================
===============The second stage : build fucntion type=================
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
      |||
      |||
      |||
      |||
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;41mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

=============== The third stage : Start detection  =================
[40;44m =======node_fun:main========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path main  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre add _ fucntion:concat========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path concat  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vconcat_copy  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vconcat_copy========= [0m
[40;42m =======start_check_funciton:vconcat_copy========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
return dst_1(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:67:16: warning: use location
   67 |         return dst;
      |                ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vconcat_copy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:concat========= [0m
[40;42m =======start_check_funciton:concat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with newstr ========= [0m
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);
newstr_3 = malloc (1);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with newstr ========= [0m
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
newstr_3 = malloc (1);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with first ========= [0m
[40;36m ======= relate node_fun argument:first========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with first ========= [0m
[40;36m ======= relate node_fun argument:first========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:concat========= [0m
[40;42m =======pre add _ fucntion:do_start_initialization========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path do_start_initialization  function_call count: 10 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:Py_SetProgramName========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path Py_SetProgramName  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:Py_SetProgramName========= [0m
[40;42m =======start_check_funciton:Py_SetProgramName========= [0m
[40;33m =======POP node_fun stack:Py_SetProgramName========= [0m
[40;42m =======pre add _ fucntion:setlocale========= [0m
[40;33m =======POP node_fun stack:setlocale========= [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:mbstowcs========= [0m
[40;33m =======POP node_fun stack:mbstowcs========= [0m
[40;42m =======pre add _ fucntion:PyMem_Malloc========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path PyMem_Malloc  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:PyMem_Malloc========= [0m
[40;42m =======start_check_funciton:PyMem_Malloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2360
    type <pointer_type 0x7f1c642a6000
        type <void_type 0x7f1c6429ff18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c642a6000>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c642ab9d8>>
    var <var_decl 0x7f1c63dbcd80 ret>
    def_stmt ret_4 = malloc (size_2(D));
    version:4
    ptr-info 0x7f1c63db7870>
 <ssa_name 0x7f1c63dc2360
    type <pointer_type 0x7f1c642a6000
        type <void_type 0x7f1c6429ff18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c642a6000>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c642ab9d8>>
    var <var_decl 0x7f1c63dbcd80 ret>
    def_stmt ret_4 = malloc (size_2(D));
    version:4
    ptr-info 0x7f1c63db7870>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return ret_4;
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:87:16: warning: use location
   87 |         return ret;
      |                ^
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
ret_4 = malloc (size_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2360
    type <pointer_type 0x7f1c642a6000
        type <void_type 0x7f1c6429ff18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c642a6000>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c642ab9d8>>
    var <var_decl 0x7f1c63dbcd80 ret>
    def_stmt ret_4 = malloc (size_2(D));
    version:4
    ptr-info 0x7f1c63db7870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
ret_4 = malloc (size_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
this stmt call this function :malloc
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
ret_4 = malloc (size_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:PyMem_Malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:concat========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path concat  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vconcat_copy  function_call count: 2 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vconcat_copy========= [0m
[40;42m =======start_check_funciton:vconcat_copy========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
return dst_1(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:67:16: warning: use location
   67 |         return dst;
      |                ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vconcat_copy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:concat========= [0m
[40;42m =======start_check_funciton:concat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with newstr ========= [0m
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);
newstr_3 = malloc (1);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with newstr ========= [0m
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
newstr_3 = malloc (1);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with first ========= [0m
[40;36m ======= relate node_fun argument:first========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with first ========= [0m
[40;36m ======= relate node_fun argument:first========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:concat========= [0m
[40;42m =======pre add _ fucntion:ldirname========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ldirname  function_call count: 3 level :2========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lbasename  function_call count: 1 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path unix_lbasename  function_call count: 0 level :4========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:unix_lbasename========= [0m
[40;42m =======start_check_funciton:unix_lbasename========= [0m
[40;33m =======POP node_fun stack:unix_lbasename========= [0m
[40;42m =======pre_check_funciton:lbasename========= [0m
[40;42m =======start_check_funciton:lbasename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
   28 |   return unix_lbasename (name);
      |          ^
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>

 ================== pre trace ptable ================== 
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :888========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
is Other function unix_lbasename
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:lbasename========= [0m
[40;42m =======pre_check_funciton:ldirname========= [0m
[40;42m =======start_check_funciton:ldirname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_31(D)>
base_23 = lbasename (filename_22(D));
base_23 = lbasename (filename_22(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:34:22: warning: use location
   34 |   const char *base = lbasename (filename);
      |                      ^
this stmt call this function :lbasename
trace fucntion name:lbasename 
[40;44m =======trace_function_path lbasename  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_16 = PHI <base_23(2), base_24(3)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
base_17 = PHI <base_16(7), base_16(8), base_16(9), base_28(10)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
_13 = base_17 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                ^
_14 = (sizetype) _13;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_10 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                    ^
_11 = (sizetype) _10;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
base_28 = base_16 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:17: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                 ^
_8 = *base_16;
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:31: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                               ^
if (_8 == 47)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:28: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                            ^
_7 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:12: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |            ^
if (_7 == 2)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:6: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |      ^
_5 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:35: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |                                   ^
_6 = (long unsigned int) _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
_3 = _2 + 2;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
_4 = (long unsigned int) _3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
if (base_16 == filename_22(D))
./benchmarks/binutils/leak_7/binutils_leak_7.c:40:6: warning: use location
   40 |   if (base == filename)
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = MEM[(const char *)base_16 + -1B];
./benchmarks/binutils/leak_7/binutils_leak_7.c:37:29: warning: use location
   37 |   while (base > filename && IS_DIR_SEPARATOR (base[-1]))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_24 = base_16 + 18446744073709551615;
./benchmarks/binutils/leak_7/binutils_leak_7.c:38:5: warning: use location
   38 |     --base;
      |     ^
_9 = *filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:49:11: warning: use location
   49 |       && !IS_DIR_SEPARATOR (filename[0]))
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>

 ================== pre trace ptable ================== 
trace fucntion name:lbasename 
[40;44m =======trace_function_path lbasename  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :889========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
is Other function lbasename
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_31(D)>
base_23 = lbasename (filename_22(D));
base_23 = lbasename (filename_22(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:34:22: warning: use location
   34 |   const char *base = lbasename (filename);
      |                      ^
this stmt call this function :lbasename
trace fucntion name:lbasename 
[40;44m =======trace_function_path lbasename  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_16 = PHI <base_23(2), base_24(3)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
base_17 = PHI <base_16(7), base_16(8), base_16(9), base_28(10)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
_13 = base_17 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                ^
_14 = (sizetype) _13;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_10 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                    ^
_11 = (sizetype) _10;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
base_28 = base_16 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:17: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                 ^
_8 = *base_16;
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:31: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                               ^
if (_8 == 47)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:28: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                            ^
_7 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:12: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |            ^
if (_7 == 2)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:6: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |      ^
_5 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:35: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |                                   ^
_6 = (long unsigned int) _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
_3 = _2 + 2;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
_4 = (long unsigned int) _3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = MEM[(const char *)base_16 + -1B];
./benchmarks/binutils/leak_7/binutils_leak_7.c:37:29: warning: use location
   37 |   while (base > filename && IS_DIR_SEPARATOR (base[-1]))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_24 = base_16 + 18446744073709551615;
./benchmarks/binutils/leak_7/binutils_leak_7.c:38:5: warning: use location
   38 |     --base;
      |     ^
_9 = *filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:49:11: warning: use location
   49 |       && !IS_DIR_SEPARATOR (filename[0]))
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_32 = VDEF <.MEM_31(D)>
dirname_26 = malloc (_4);
dirname_26 = malloc (_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
# .MEM_33 = VDEF <.MEM_32>
memcpy (dirname_26, filename_22(D), _6);
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dirname_26 = malloc (_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_33 = VDEF <.MEM_32>
memcpy (dirname_26, filename_22(D), _6);
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
 <ssa_name 0x7f1c63dc2900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ldirname========= [0m
[40;42m =======pre_check_funciton:do_start_initialization========= [0m
[40;42m =======start_check_funciton:do_start_initialization========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_40 = VDEF <.MEM_39(D)>
_2 = ldirname (_1);
_2 = ldirname (_1);
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:22: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |                      ^
this stmt call this function :ldirname
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :2========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
progname_16 = concat (_2, "bin");
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_21 = strlen (progname_16);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>

 ================== pre trace ptable ================== 
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_30>
return _18;
lto1: warning: use location
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :890========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
is Other function ldirname
 
 Start check Pointer Collect  

======================================================================
# .MEM_40 = VDEF <.MEM_39(D)>
_2 = ldirname (_1);
_2 = ldirname (_1);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:22: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |                      ^
this stmt call this function :ldirname
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :2========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
progname_16 = concat (_2, "bin");
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_21 = strlen (progname_16);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>

 ================== pre trace ptable ================== 
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_30>
return _18;
lto1: warning: use location
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :890========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
is Other function ldirname
 
 Start check Pointer Collect  

======================================================================
_2 = ldirname (_1);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:22: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |                      ^
this stmt call this function :ldirname
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :2========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# .MEM_41 = VDEF <.MEM_40>
progname_16 = concat (_2, "bin");
progname_16 = concat (_2, "bin");
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_21 = strlen (progname_16);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c64486c20
    type <array_type 0x7f1c63dac9d8
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dac930 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d998e8 3>>
        pointer_to_this <pointer_type 0x7f1c63daca80>>
    readonly constant static "bin\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>

 ================== pre trace ptable ================== 
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
[40;36m ======= relate node_fun argument:progname========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:progname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
is Other function concat
 
 Start check Pointer Collect  

======================================================================
# .MEM_41 = VDEF <.MEM_40>
progname_16 = concat (_2, "bin");
progname_16 = concat (_2, "bin");
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
[40;36m ======= relate node_fun argument:progname========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:progname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_21 = strlen (progname_16);
In function ‘main’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c64486c80
    type <array_type 0x7f1c63dacf18
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d99930 constant 56>
        unit-size <integer_cst 0x7f1c63d99918 constant 7>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dace70 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99900 6>>
        pointer_to_this <pointer_type 0x7f1c63dae000>>
    readonly constant static "LC_ALL\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c642927e0
    type <integer_type 0x7f1c6429f5e8 int public SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c642a69d8>>
   
    def_stmt _3 = setlocale ("LC_ALL", 0B);
    version:3>
 <ssa_name 0x7f1c642927e0
    type <integer_type 0x7f1c6429f5e8 int public SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c642a69d8>>
   
    def_stmt _3 = setlocale ("LC_ALL", 0B);
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:setlocale 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c642927e0
    type <integer_type 0x7f1c6429f5e8 int public SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c642a69d8>>
   
    def_stmt _3 = setlocale ("LC_ALL", 0B);
    version:3>
is Other function setlocale
 
 Start check Pointer Collect  

======================================================================
# .MEM_42 = VDEF <.MEM_41>
_3 = setlocale ("LC_ALL", 0B);
_3 = setlocale ("LC_ALL", 0B);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
this stmt call this function :setlocale
trace fucntion name:setlocale 

 ================== trace ================== 
trace fucntion free:0 
_4 = (long int) _3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
_5 = (const char *) _4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
oldloc_19 = strdup (_5);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
this stmt call this function :strdup
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================

 Expand conflict 
 The same function may have multiple branches :setlocale
# .MEM_42 = VDEF <.MEM_41>
_3 = setlocale ("LC_ALL", 0B);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c642927e0
    type <integer_type 0x7f1c6429f5e8 int public SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c642a69d8>>
   
    def_stmt _3 = setlocale ("LC_ALL", 0B);
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292ab0
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc1b0 oldloc>
    def_stmt oldloc_19 = strdup (_5);
    version:19
    ptr-info 0x7f1c63db7828>
 <ssa_name 0x7f1c64292ab0
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc1b0 oldloc>
    def_stmt oldloc_19 = strdup (_5);
    version:19
    ptr-info 0x7f1c63db7828>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_43 = VDEF <.MEM_42>
oldloc_19 = strdup (_5);
oldloc_19 = strdup (_5);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
this stmt call this function :strdup
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^
this stmt call this function :setlocale
trace fucntion name:setlocale 

 ================== trace ================== 
trace fucntion free:1 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292ab0
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc1b0 oldloc>
    def_stmt oldloc_19 = strdup (_5);
    version:19
    ptr-info 0x7f1c63db7828>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c64486d00
    type <array_type 0x7f1c63dacf18
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d99930 constant 56>
        unit-size <integer_cst 0x7f1c63d99918 constant 7>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dace70 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99900 6>>
        pointer_to_this <pointer_type 0x7f1c63dae000>>
    readonly constant static "LC_ALL\000">

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c63db74e0
    type <array_type 0x7f1c63daa540
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        QI size <integer_cst 0x7f1c6428aca8 8> unit-size <integer_cst 0x7f1c6428acc0 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63daa498 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c6428abe8 0>>
        pointer_to_this <pointer_type 0x7f1c63dae150>>
    readonly constant static "\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_44>
progsize_21 = strlen (progname_16);
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with progsize ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_45 = VDEF <.MEM_44>
progname_copy_23 = PyMem_Malloc (_7);
progname_copy_23 = PyMem_Malloc (_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
this stmt call this function :PyMem_Malloc
trace fucntion name:PyMem_Malloc 
[40;44m =======trace_function_path PyMem_Malloc  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>
[40;36m ======= node_fun:PyMem_Malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>

 ================== pre trace ptable ================== 
trace fucntion name:PyMem_Malloc 
[40;44m =======trace_function_path PyMem_Malloc  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_6>
return ret_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:87:16: warning: use location
   87 |         return ret;
      |                ^
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
[40;36m ======= node_fun:PyMem_Malloc========= [0m
[40;36m ======= find relate stmt with progname_copy ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
is Other function PyMem_Malloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_45 = VDEF <.MEM_44>
progname_copy_23 = PyMem_Malloc (_7);
progname_copy_23 = PyMem_Malloc (_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
this stmt call this function :PyMem_Malloc
trace fucntion name:PyMem_Malloc 
[40;44m =======trace_function_path PyMem_Malloc  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
[40;36m ======= node_fun:PyMem_Malloc========= [0m
[40;36m ======= find relate stmt with progname_copy ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with progname_copy ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c63db89d8
    type <array_type 0x7f1c63dae540
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d99978 constant 120>
        unit-size <integer_cst 0x7f1c63d99960 constant 15>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dae498 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99948 14>>
        pointer_to_this <pointer_type 0x7f1c63dae5e8>>
    readonly constant static "out of memory\012\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c64292948
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c63db77e0>
 <ssa_name 0x7f1c64292948
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c63db77e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292948
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c63db77e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_55 = VDEF <.MEM_54>
__builtin_fwrite ("out of memory\n", 1, 14, _8);
__builtin_fwrite ("out of memory\n", 1, 14, _8);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
  117 |       fprintf (stderr, "out of memory\n");
      |       ^
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_55 = VDEF <.MEM_54>
__builtin_fwrite ("out of memory\n", 1, 14, _8);
__builtin_fwrite ("out of memory\n", 1, 14, _8);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292948
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c63db77e0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
__builtin_fwrite ("out of memory\n", 1, 14, _8);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
  117 |       fprintf (stderr, "out of memory\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
__builtin_fwrite ("out of memory\n", 1, 14, _8);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
  117 |       fprintf (stderr, "out of memory\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>

 ================== pre trace ptable ================== 
trace fucntion name:mbstowcs 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>
is Other function mbstowcs
 
 Start check Pointer Collect  

======================================================================
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with count ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c6429d040
    type <array_type 0x7f1c63dae888
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d998a0 constant 328>
        unit-size <integer_cst 0x7f1c63d999a8 constant 41>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dae7e0 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99990 40>>
        pointer_to_this <pointer_type 0x7f1c63dae930>>
    readonly constant static "Could not convert python path to string\012\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c642929d8
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _10 = stderr;
    version:10
    ptr-info 0x7f1c63db77f8>
 <ssa_name 0x7f1c642929d8
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _10 = stderr;
    version:10
    ptr-info 0x7f1c63db77f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c642929d8
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _10 = stderr;
    version:10
    ptr-info 0x7f1c63db77f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c642929d8
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _10 = stderr;
    version:10
    ptr-info 0x7f1c63db77f8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c64486f60
    type <array_type 0x7f1c63dacf18
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d99930 constant 56>
        unit-size <integer_cst 0x7f1c63d99918 constant 7>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dace70 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99900 6>>
        pointer_to_this <pointer_type 0x7f1c63dae000>>
    readonly constant static "LC_ALL\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c64292870
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = (const char *) _4;
    version:5
    ptr-info 0x7f1c63db77c8>
 <ssa_name 0x7f1c64292870
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = (const char *) _4;
    version:5
    ptr-info 0x7f1c63db77c8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292870
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = (const char *) _4;
    version:5
    ptr-info 0x7f1c63db77c8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_43 = VDEF <.MEM_42>
oldloc_19 = strdup (_5);
oldloc_19 = strdup (_5);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
this stmt call this function :strdup
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^
this stmt call this function :setlocale
trace fucntion name:setlocale 

 ================== trace ================== 
trace fucntion free:1 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292870
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = (const char *) _4;
    version:5
    ptr-info 0x7f1c63db77c8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_start_initialization========= [0m
[40;42m =======pre_check_funciton:main========= [0m
[40;42m =======start_check_funciton:main========= [0m

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c64486ac0
    type <array_type 0x7f1c63daebd0
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d999f0 constant 48>
        unit-size <integer_cst 0x7f1c63d99900 constant 6>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63daeb28 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d999d8 5>>
        pointer_to_this <pointer_type 0x7f1c63daec78>>
    readonly constant static "dummy\000">

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c63db7480
    type <array_type 0x7f1c63daa540
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        QI size <integer_cst 0x7f1c6428aca8 8> unit-size <integer_cst 0x7f1c6428acc0 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63daa498 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c6428abe8 0>>
        pointer_to_this <pointer_type 0x7f1c63dae150>>
    readonly constant static "\000">
[40;33m =======POP node_fun stack:main========= [0m
[40;44m =======node_fun:do_start_initialization========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path do_start_initialization  function_call count: 10 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:free========= [0m
[40;33m =======POP node_fun stack:free========= [0m
[40;42m =======pre add _ fucntion:Py_SetProgramName========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path Py_SetProgramName  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:Py_SetProgramName========= [0m
[40;42m =======start_check_funciton:Py_SetProgramName========= [0m
[40;33m =======POP node_fun stack:Py_SetProgramName========= [0m
[40;42m =======pre add _ fucntion:setlocale========= [0m
[40;33m =======POP node_fun stack:setlocale========= [0m
[40;42m =======pre add _ fucntion:__builtin_fwrite========= [0m
[40;33m =======POP node_fun stack:__builtin_fwrite========= [0m
[40;42m =======pre add _ fucntion:mbstowcs========= [0m
[40;33m =======POP node_fun stack:mbstowcs========= [0m
[40;42m =======pre add _ fucntion:PyMem_Malloc========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path PyMem_Malloc  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:PyMem_Malloc========= [0m
[40;42m =======start_check_funciton:PyMem_Malloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2360
    type <pointer_type 0x7f1c642a6000
        type <void_type 0x7f1c6429ff18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c642a6000>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c642ab9d8>>
    var <var_decl 0x7f1c63dbcd80 ret>
    def_stmt ret_4 = malloc (size_2(D));
    version:4
    ptr-info 0x7f1c63db7870>
 <ssa_name 0x7f1c63dc2360
    type <pointer_type 0x7f1c642a6000
        type <void_type 0x7f1c6429ff18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c642a6000>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c642ab9d8>>
    var <var_decl 0x7f1c63dbcd80 ret>
    def_stmt ret_4 = malloc (size_2(D));
    version:4
    ptr-info 0x7f1c63db7870>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return ret_4;
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:87:16: warning: use location
   87 |         return ret;
      |                ^
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
ret_4 = malloc (size_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2360
    type <pointer_type 0x7f1c642a6000
        type <void_type 0x7f1c6429ff18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c642a6000>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c642ab9d8>>
    var <var_decl 0x7f1c63dbcd80 ret>
    def_stmt ret_4 = malloc (size_2(D));
    version:4
    ptr-info 0x7f1c63db7870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
ret_4 = malloc (size_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
this stmt call this function :malloc
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
ret_4 = malloc (size_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:PyMem_Malloc========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:strdup========= [0m
[40;33m =======POP node_fun stack:strdup========= [0m
[40;42m =======pre add _ fucntion:concat========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path concat  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vconcat_copy  function_call count: 2 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vconcat_copy========= [0m
[40;42m =======start_check_funciton:vconcat_copy========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
return dst_1(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:67:16: warning: use location
   67 |         return dst;
      |                ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vconcat_copy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:concat========= [0m
[40;42m =======start_check_funciton:concat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with newstr ========= [0m
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);
newstr_3 = malloc (1);
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with newstr ========= [0m
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
newstr_3 = malloc (1);
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with first ========= [0m
[40;36m ======= relate node_fun argument:first========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with first ========= [0m
[40;36m ======= relate node_fun argument:first========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:concat========= [0m
[40;42m =======pre add _ fucntion:ldirname========= [0m
[40;44m =======print_function_type 2  ========  [0m
[40;44m =======print_function_path ldirname  function_call count: 3 level :1========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lbasename  function_call count: 1 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path unix_lbasename  function_call count: 0 level :3========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:unix_lbasename========= [0m
[40;42m =======start_check_funciton:unix_lbasename========= [0m
[40;33m =======POP node_fun stack:unix_lbasename========= [0m
[40;42m =======pre_check_funciton:lbasename========= [0m
[40;42m =======start_check_funciton:lbasename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
   28 |   return unix_lbasename (name);
      |          ^
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>

 ================== pre trace ptable ================== 
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :888========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
is Other function unix_lbasename
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:lbasename========= [0m
[40;42m =======pre_check_funciton:ldirname========= [0m
[40;42m =======start_check_funciton:ldirname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_31(D)>
base_23 = lbasename (filename_22(D));
base_23 = lbasename (filename_22(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:34:22: warning: use location
   34 |   const char *base = lbasename (filename);
      |                      ^
this stmt call this function :lbasename
trace fucntion name:lbasename 
[40;44m =======trace_function_path lbasename  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_16 = PHI <base_23(2), base_24(3)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
base_17 = PHI <base_16(7), base_16(8), base_16(9), base_28(10)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
_13 = base_17 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                ^
_14 = (sizetype) _13;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_10 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                    ^
_11 = (sizetype) _10;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
base_28 = base_16 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:17: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                 ^
_8 = *base_16;
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:31: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                               ^
if (_8 == 47)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:28: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                            ^
_7 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:12: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |            ^
if (_7 == 2)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:6: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |      ^
_5 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:35: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |                                   ^
_6 = (long unsigned int) _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
_3 = _2 + 2;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
_4 = (long unsigned int) _3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
if (base_16 == filename_22(D))
./benchmarks/binutils/leak_7/binutils_leak_7.c:40:6: warning: use location
   40 |   if (base == filename)
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = MEM[(const char *)base_16 + -1B];
./benchmarks/binutils/leak_7/binutils_leak_7.c:37:29: warning: use location
   37 |   while (base > filename && IS_DIR_SEPARATOR (base[-1]))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_24 = base_16 + 18446744073709551615;
./benchmarks/binutils/leak_7/binutils_leak_7.c:38:5: warning: use location
   38 |     --base;
      |     ^
_9 = *filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:49:11: warning: use location
   49 |       && !IS_DIR_SEPARATOR (filename[0]))
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>

 ================== pre trace ptable ================== 
trace fucntion name:lbasename 
[40;44m =======trace_function_path lbasename  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :889========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
is Other function lbasename
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_31(D)>
base_23 = lbasename (filename_22(D));
base_23 = lbasename (filename_22(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:34:22: warning: use location
   34 |   const char *base = lbasename (filename);
      |                      ^
this stmt call this function :lbasename
trace fucntion name:lbasename 
[40;44m =======trace_function_path lbasename  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_16 = PHI <base_23(2), base_24(3)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
base_17 = PHI <base_16(7), base_16(8), base_16(9), base_28(10)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
_13 = base_17 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                ^
_14 = (sizetype) _13;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_10 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                    ^
_11 = (sizetype) _10;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
base_28 = base_16 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:17: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                 ^
_8 = *base_16;
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:31: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                               ^
if (_8 == 47)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:28: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                            ^
_7 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:12: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |            ^
if (_7 == 2)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:6: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |      ^
_5 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:35: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |                                   ^
_6 = (long unsigned int) _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
_3 = _2 + 2;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
_4 = (long unsigned int) _3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = MEM[(const char *)base_16 + -1B];
./benchmarks/binutils/leak_7/binutils_leak_7.c:37:29: warning: use location
   37 |   while (base > filename && IS_DIR_SEPARATOR (base[-1]))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_24 = base_16 + 18446744073709551615;
./benchmarks/binutils/leak_7/binutils_leak_7.c:38:5: warning: use location
   38 |     --base;
      |     ^
_9 = *filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:49:11: warning: use location
   49 |       && !IS_DIR_SEPARATOR (filename[0]))
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_32 = VDEF <.MEM_31(D)>
dirname_26 = malloc (_4);
dirname_26 = malloc (_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
# .MEM_33 = VDEF <.MEM_32>
memcpy (dirname_26, filename_22(D), _6);
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dirname_26 = malloc (_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_33 = VDEF <.MEM_32>
memcpy (dirname_26, filename_22(D), _6);
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
 <ssa_name 0x7f1c63dc2900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ldirname========= [0m
[40;42m =======pre_check_funciton:do_start_initialization========= [0m
[40;42m =======start_check_funciton:do_start_initialization========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_40 = VDEF <.MEM_39(D)>
_2 = ldirname (_1);
_2 = ldirname (_1);
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:22: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |                      ^
this stmt call this function :ldirname
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :2========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
progname_16 = concat (_2, "bin");
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_21 = strlen (progname_16);
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292750
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _1 = python_libdir;
    version:1
    ptr-info 0x7f1c63db7798>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>

 ================== pre trace ptable ================== 
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_30>
return _18;
lto1: warning: use location
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :890========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
is Other function ldirname
 
 Start check Pointer Collect  

======================================================================
# .MEM_40 = VDEF <.MEM_39(D)>
_2 = ldirname (_1);
_2 = ldirname (_1);
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:22: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |                      ^
this stmt call this function :ldirname
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :2========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
progname_16 = concat (_2, "bin");
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_21 = strlen (progname_16);
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>

 ================== pre trace ptable ================== 
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_30>
return _18;
lto1: warning: use location
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :889========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :890========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
is Other function ldirname
 
 Start check Pointer Collect  

======================================================================
_2 = ldirname (_1);
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:22: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |                      ^
this stmt call this function :ldirname
trace fucntion name:ldirname 
[40;44m =======trace_function_path ldirname  function_call count: 3 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:ldirname========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
*_12

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
*_15

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;46m =======add node_fun stack:lbasename========= [0m
[40;44m =======trace_function_path lbasename  function_call count: 1 level :1========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :2========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# .MEM_41 = VDEF <.MEM_40>
progname_16 = concat (_2, "bin");
progname_16 = concat (_2, "bin");
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
[40;36m ======= relate node_fun argument:(null)========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_21 = strlen (progname_16);
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292798
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
   
    def_stmt _2 = ldirname (_1);
    version:2
    ptr-info 0x7f1c63db77b0>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c64486c20
    type <array_type 0x7f1c63dac9d8
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dac930 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d998e8 3>>
        pointer_to_this <pointer_type 0x7f1c63daca80>>
    readonly constant static "bin\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>

 ================== pre trace ptable ================== 
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_8>
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :889========  [0m
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
[40;36m ======= relate node_fun argument:progname========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:progname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
is Other function concat
 
 Start check Pointer Collect  

======================================================================
# .MEM_41 = VDEF <.MEM_40>
progname_16 = concat (_2, "bin");
progname_16 = concat (_2, "bin");
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:109:14: warning: use location
  109 |   progname = concat (ldirname (python_libdir), "bin");
      |              ^
this stmt call this function :concat
trace fucntion name:concat 
[40;44m =======trace_function_path concat  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:concat========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;46m =======add node_fun stack:vconcat_copy========= [0m
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :1========  [0m
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
[40;36m ======= relate node_fun argument:progname========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:progname========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
progsize_21 = strlen (progname_16);
In function ‘do_start_initialization’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with progname ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292a68
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc360 progname>
    def_stmt progname_16 = concat (_2, "bin");
    version:16
    ptr-info 0x7f1c63db7810>

 ================================================================= 

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c64486c80
    type <array_type 0x7f1c63dacf18
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d99930 constant 56>
        unit-size <integer_cst 0x7f1c63d99918 constant 7>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dace70 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99900 6>>
        pointer_to_this <pointer_type 0x7f1c63dae000>>
    readonly constant static "LC_ALL\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c642927e0
    type <integer_type 0x7f1c6429f5e8 int public SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c642a69d8>>
   
    def_stmt _3 = setlocale ("LC_ALL", 0B);
    version:3>
 <ssa_name 0x7f1c642927e0
    type <integer_type 0x7f1c6429f5e8 int public SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c642a69d8>>
   
    def_stmt _3 = setlocale ("LC_ALL", 0B);
    version:3>

 ================== pre trace ptable ================== 
trace fucntion name:setlocale 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c642927e0
    type <integer_type 0x7f1c6429f5e8 int public SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c642a69d8>>
   
    def_stmt _3 = setlocale ("LC_ALL", 0B);
    version:3>
is Other function setlocale
 
 Start check Pointer Collect  

======================================================================
# .MEM_42 = VDEF <.MEM_41>
_3 = setlocale ("LC_ALL", 0B);
_3 = setlocale ("LC_ALL", 0B);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
this stmt call this function :setlocale
trace fucntion name:setlocale 

 ================== trace ================== 
trace fucntion free:0 
_4 = (long int) _3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
_5 = (const char *) _4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
oldloc_19 = strdup (_5);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
this stmt call this function :strdup
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 

======================================================================

 Expand conflict 
 The same function may have multiple branches :setlocale
# .MEM_42 = VDEF <.MEM_41>
_3 = setlocale ("LC_ALL", 0B);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c642927e0
    type <integer_type 0x7f1c6429f5e8 int public SI
        size <integer_cst 0x7f1c6428adf8 constant 32>
        unit-size <integer_cst 0x7f1c6428ae10 constant 4>
        align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647>
        pointer_to_this <pointer_type 0x7f1c642a69d8>>
   
    def_stmt _3 = setlocale ("LC_ALL", 0B);
    version:3>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292ab0
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc1b0 oldloc>
    def_stmt oldloc_19 = strdup (_5);
    version:19
    ptr-info 0x7f1c63db7828>
 <ssa_name 0x7f1c64292ab0
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc1b0 oldloc>
    def_stmt oldloc_19 = strdup (_5);
    version:19
    ptr-info 0x7f1c63db7828>

 ================== pre trace ptable ================== 
trace fucntion name:strdup 

 ================== pre trace ptable finish================== 
is Reserved word function :strdup
 
 Start check Pointer Collect  

======================================================================
# .MEM_43 = VDEF <.MEM_42>
oldloc_19 = strdup (_5);
oldloc_19 = strdup (_5);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
this stmt call this function :strdup
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^
this stmt call this function :setlocale
trace fucntion name:setlocale 

 ================== trace ================== 
trace fucntion free:1 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292ab0
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbc1b0 oldloc>
    def_stmt oldloc_19 = strdup (_5);
    version:19
    ptr-info 0x7f1c63db7828>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:3 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:3 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c64486d00
    type <array_type 0x7f1c63dacf18
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d99930 constant 56>
        unit-size <integer_cst 0x7f1c63d99918 constant 7>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dace70 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99900 6>>
        pointer_to_this <pointer_type 0x7f1c63dae000>>
    readonly constant static "LC_ALL\000">

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c63db74e0
    type <array_type 0x7f1c63daa540
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        QI size <integer_cst 0x7f1c6428aca8 8> unit-size <integer_cst 0x7f1c6428acc0 1>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63daa498 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c6428abe8 0>>
        pointer_to_this <pointer_type 0x7f1c63dae150>>
    readonly constant static "\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_44>
progsize_21 = strlen (progname_16);
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with progsize ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292af8
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc2d0 progsize>
    def_stmt progsize_21 = strlen (progname_16);
    version:21>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_45 = VDEF <.MEM_44>
progname_copy_23 = PyMem_Malloc (_7);
progname_copy_23 = PyMem_Malloc (_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
this stmt call this function :PyMem_Malloc
trace fucntion name:PyMem_Malloc 
[40;44m =======trace_function_path PyMem_Malloc  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>
[40;36m ======= node_fun:PyMem_Malloc========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _7 = _6 * 4;
    version:7>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>

 ================== pre trace ptable ================== 
trace fucntion name:PyMem_Malloc 
[40;44m =======trace_function_path PyMem_Malloc  function_call count: 1 level :888========  [0m
[40;31m  find return stmt  [0m
[40;31m  this fucntion return heap-object  [0m
# VUSE <.MEM_6>
return ret_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:87:16: warning: use location
   87 |         return ret;
      |                ^
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
[40;36m ======= node_fun:PyMem_Malloc========= [0m
[40;36m ======= find relate stmt with progname_copy ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
is Other function PyMem_Malloc
 
 Start check Pointer Collect  

======================================================================
# .MEM_45 = VDEF <.MEM_44>
progname_copy_23 = PyMem_Malloc (_7);
progname_copy_23 = PyMem_Malloc (_7);
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
this stmt call this function :PyMem_Malloc
trace fucntion name:PyMem_Malloc 
[40;44m =======trace_function_path PyMem_Malloc  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
[40;36m ======= node_fun:PyMem_Malloc========= [0m
[40;36m ======= find relate stmt with progname_copy ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;46m =======add node_fun stack:malloc========= [0m

 ================== trace ================== 
trace fucntion free:0 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with progname_copy ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292b40
    type <pointer_type 0x7f1c63dac2a0
        type <integer_type 0x7f1c63dac1f8 wchar_t SI
            size <integer_cst 0x7f1c6428adf8 constant 32>
            unit-size <integer_cst 0x7f1c6428ae10 constant 4>
            align:32 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f5e8 precision:32 min <integer_cst 0x7f1c6428adb0 -2147483648> max <integer_cst 0x7f1c6428adc8 2147483647> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63dac2a0>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dbc120 progname_copy>
    def_stmt progname_copy_23 = PyMem_Malloc (_7);
    version:23
    ptr-info 0x7f1c63db7840>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:2 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:2 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c63db89d8
    type <array_type 0x7f1c63dae540
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d99978 constant 120>
        unit-size <integer_cst 0x7f1c63d99960 constant 15>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dae498 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99948 14>>
        pointer_to_this <pointer_type 0x7f1c63dae5e8>>
    readonly constant static "out of memory\012\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c64292948
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c63db77e0>
 <ssa_name 0x7f1c64292948
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c63db77e0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292948
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c63db77e0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_55 = VDEF <.MEM_54>
__builtin_fwrite ("out of memory\n", 1, 14, _8);
__builtin_fwrite ("out of memory\n", 1, 14, _8);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
  117 |       fprintf (stderr, "out of memory\n");
      |       ^
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_55 = VDEF <.MEM_54>
__builtin_fwrite ("out of memory\n", 1, 14, _8);
__builtin_fwrite ("out of memory\n", 1, 14, _8);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292948
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _8 = stderr;
    version:8
    ptr-info 0x7f1c63db77e0>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
__builtin_fwrite ("out of memory\n", 1, 14, _8);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
  117 |       fprintf (stderr, "out of memory\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_55 = VDEF <.MEM_54>
__builtin_fwrite ("out of memory\n", 1, 14, _8);
./benchmarks/binutils/leak_7/binutils_leak_7.c:117:7: warning: use location
  117 |       fprintf (stderr, "out of memory\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:0 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _9 = progsize_21 + 1;
    version:9>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>

 ================== pre trace ptable ================== 
trace fucntion name:mbstowcs 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>
is Other function mbstowcs
 
 Start check Pointer Collect  

======================================================================
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^
this stmt call this function :Py_SetProgramName
trace fucntion name:Py_SetProgramName 
[40;44m =======trace_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>
[40;36m ======= node_fun:Py_SetProgramName========= [0m
[40;36m ======= find relate stmt with count ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:printf========= [0m
[40;46m =======add node_fun stack:printf========= [0m

 ================== trace ================== 
trace fucntion free:1 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
this stmt call this function :free

 ================== find free stmt ================== 
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
this stmt call this function :mbstowcs
trace fucntion name:mbstowcs 

 ================== trace ================== 
trace fucntion free:2 
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^
progsize_21 = strlen (progname_16);
./benchmarks/binutils/leak_7/binutils_leak_7.c:112:14: warning: use location
  112 |   progsize = strlen (progname);
      |              ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:2 
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^
_6 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:55: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                                                       ^
_7 = _6 * 4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:113:31: warning: use location
  113 |   progname_copy = (wchar_t *) PyMem_Malloc ((progsize + 1) * sizeof (wchar_t));
      |                               ^
if (progname_copy_23 == 0B)
./benchmarks/binutils/leak_7/binutils_leak_7.c:114:6: warning: use location
  114 |   if (!progname_copy)
      |      ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292b88
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <var_decl 0x7f1c63dbc240 count>
    def_stmt count_25 = mbstowcs (progname_copy_23, progname_16, _9);
    version:25>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: free in this location
  129 |   xfree (oldloc);
      |   ^

===== possiable asias =====
# .MEM_49 = VDEF <.MEM_48>
Py_SetProgramName (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:134:3: warning: use location
  134 |   Py_SetProgramName (progname_copy);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_46 = VDEF <.MEM_45>
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
if (count_25 == 18446744073709551615)
./benchmarks/binutils/leak_7/binutils_leak_7.c:121:6: warning: use location
  121 |   if (count == (size_t) -1)
      |      ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
_9 = progsize_21 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:120:11: warning: use location
  120 |   count = mbstowcs (progname_copy, progname, progsize + 1);
      |           ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:2 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:2 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c6429d040
    type <array_type 0x7f1c63dae888
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d998a0 constant 328>
        unit-size <integer_cst 0x7f1c63d999a8 constant 41>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dae7e0 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99990 40>>
        pointer_to_this <pointer_type 0x7f1c63dae930>>
    readonly constant static "Could not convert python path to string\012\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c642929d8
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _10 = stderr;
    version:10
    ptr-info 0x7f1c63db77f8>
 <ssa_name 0x7f1c642929d8
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _10 = stderr;
    version:10
    ptr-info 0x7f1c63db77f8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c642929d8
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _10 = stderr;
    version:10
    ptr-info 0x7f1c63db77f8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
this stmt call this function :__builtin_fwrite
trace fucntion name:__builtin_fwrite 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c642929d8
    type <pointer_type 0x7f1c63daaa80
        type <record_type 0x7f1c63daa9d8 FILE BLK
            size <integer_cst 0x7f1c6435f0a8 constant 1728>
            unit-size <integer_cst 0x7f1c63d99888 constant 216>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c63daa930 fields <field_decl 0x7f1c63dab260 _flags> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
            pointer_to_this <pointer_type 0x7f1c63daaa80>>
        unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c63dae348>>
   
    def_stmt _10 = stderr;
    version:10
    ptr-info 0x7f1c63db77f8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_53 = VDEF <.MEM_52>
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
./benchmarks/binutils/leak_7/binutils_leak_7.c:125:7: warning: use location
  125 |       fprintf (stderr, "Could not convert python path to string\n");
      |       ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:0 [0m
[40;31m  	possible double free [Looserules]:5 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================

 ================== collect possiable invalid ================== 
 <string_cst 0x7f1c64486f60
    type <array_type 0x7f1c63dacf18
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        BLK
        size <integer_cst 0x7f1c63d99930 constant 56>
        unit-size <integer_cst 0x7f1c63d99918 constant 7>
        align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        domain <integer_type 0x7f1c63dace70 type <integer_type 0x7f1c6429f000 sizetype>
            DI
            size <integer_cst 0x7f1c6428abb8 constant 64>
            unit-size <integer_cst 0x7f1c6428abd0 constant 8>
            align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428abe8 0> max <integer_cst 0x7f1c63d99900 6>>
        pointer_to_this <pointer_type 0x7f1c63dae000>>
    readonly constant static "LC_ALL\000">

dot graph START

======================================================================
 <ssa_name 0x7f1c64292870
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = (const char *) _4;
    version:5
    ptr-info 0x7f1c63db77c8>
 <ssa_name 0x7f1c64292870
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = (const char *) _4;
    version:5
    ptr-info 0x7f1c63db77c8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c64292870
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = (const char *) _4;
    version:5
    ptr-info 0x7f1c63db77c8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_43 = VDEF <.MEM_42>
oldloc_19 = strdup (_5);
oldloc_19 = strdup (_5);
./benchmarks/binutils/leak_7/binutils_leak_7.c:110:12: warning: use location
  110 |   oldloc = xstrdup (setlocale (LC_ALL, NULL));
      |            ^
this stmt call this function :strdup
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
[40;32m    HAS FREE STMT count:1 name:free [0m

 ================== find free stmt ================== 
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^
this stmt call this function :setlocale
trace fucntion name:setlocale 

 ================== trace ================== 
trace fucntion free:1 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
[40;32m    HAS FREE STMT count:2 name:free [0m

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
  116 |       xfree (oldloc);
      |       ^
this stmt call this function :free

 ================== find free stmt ================== 
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;32m    HAS FREE STMT count:3 name:free [0m

 ================== find free stmt ================== 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c64292870
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _5 = (const char *) _4;
    version:5
    ptr-info 0x7f1c63db77c8>

 ================================================================= 
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: use location
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: use location
  123 |       xfree (oldloc);
      |       ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: use location
  124 |                         xfree(progname_copy);
      |                         ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_48 = VDEF <.MEM_47>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:129:3: warning: use location
  129 |   xfree (oldloc);
      |   ^
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_50 = VDEF <.MEM_49>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:135:9: warning: use location
  135 |         xfree(progname_copy);
      |         ^

 ================== Start Use after free Check ================== 

============================================================
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_54 = VDEF <.MEM_45>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:116:7: warning: free in this location
  116 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_51 = VDEF <.MEM_46>
free (oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:123:7: warning: free in this location
  123 |       xfree (oldloc);
      |       ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

============================================================
[40;35m <Looserules> find free stmt free same pointer [0m
# .MEM_52 = VDEF <.MEM_51>
free (progname_copy_23);
./benchmarks/binutils/leak_7/binutils_leak_7.c:124:25: warning: free in this location
  124 |                         xfree(progname_copy);
      |                         ^

===== possiable asias =====
# .MEM_47 = VDEF <.MEM_46>
setlocale ("LC_ALL", oldloc_19);
./benchmarks/binutils/leak_7/binutils_leak_7.c:128:3: warning: use location
  128 |   setlocale (LC_ALL, oldloc);
      |   ^

 ================== warring ================== 
[40;35m    Use after free error! [0m

 ================== warring ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:5 [0m
[40;31m  	free count:3 [0m
[40;31m  	possible double free [Looserules]:5 [0m
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;31m  	possible double free [rigorous]:3 [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:do_start_initialization========= [0m
[40;44m =======node_fun:Py_SetProgramName========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path Py_SetProgramName  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:printf========= [0m
[40;33m =======POP node_fun stack:printf========= [0m
[40;42m =======pre_check_funciton:Py_SetProgramName========= [0m
[40;42m =======start_check_funciton:Py_SetProgramName========= [0m
[40;33m =======POP node_fun stack:Py_SetProgramName========= [0m
[40;44m =======node_fun:PyMem_Malloc========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path PyMem_Malloc  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:PyMem_Malloc========= [0m
[40;42m =======start_check_funciton:PyMem_Malloc========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2360
    type <pointer_type 0x7f1c642a6000
        type <void_type 0x7f1c6429ff18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c642a6000>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c642ab9d8>>
    var <var_decl 0x7f1c63dbcd80 ret>
    def_stmt ret_4 = malloc (size_2(D));
    version:4
    ptr-info 0x7f1c63db7870>
 <ssa_name 0x7f1c63dc2360
    type <pointer_type 0x7f1c642a6000
        type <void_type 0x7f1c6429ff18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c642a6000>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c642ab9d8>>
    var <var_decl 0x7f1c63dbcd80 ret>
    def_stmt ret_4 = malloc (size_2(D));
    version:4
    ptr-info 0x7f1c63db7870>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return ret_4;
In function ‘PyMem_Malloc’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:87:16: warning: use location
   87 |         return ret;
      |                ^
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
ret_4 = malloc (size_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
   86 |         void *ret = malloc(size);
      |                     ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2360
    type <pointer_type 0x7f1c642a6000
        type <void_type 0x7f1c6429ff18 void VOID
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
            pointer_to_this <pointer_type 0x7f1c642a6000>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality
        pointer_to_this <pointer_type 0x7f1c642ab9d8>>
    var <var_decl 0x7f1c63dbcd80 ret>
    def_stmt ret_4 = malloc (size_2(D));
    version:4
    ptr-info 0x7f1c63db7870>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
ret_4 = malloc (size_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
this stmt call this function :malloc
# .MEM_6 = VDEF <.MEM_5(D)>
ret_4 = malloc (size_2(D));
ret_4 = malloc (size_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:86:21: warning: use location
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2318
    type <integer_type 0x7f1c63da2f18 size_t public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615> context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>>
    var <parm_decl 0x7f1c63db2300 size>
    def_stmt GIMPLE_NOP
    version:2>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:PyMem_Malloc========= [0m
[40;44m =======node_fun:concat========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path concat  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:vconcat_copy========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path vconcat_copy  function_call count: 2 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vconcat_copy========= [0m
[40;42m =======start_check_funciton:vconcat_copy========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
In function ‘concat’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
return dst_1(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:67:16: warning: use location
   67 |         return dst;
      |                ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vconcat_copy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre_check_funciton:concat========= [0m
[40;42m =======start_check_funciton:concat========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with newstr ========= [0m
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_7 = VDEF <.MEM_6(D)>
newstr_3 = malloc (1);
newstr_3 = malloc (1);
In function ‘concat’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
return newstr_3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:81:10: warning: use location
   81 |   return newstr;
      |          ^
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with newstr ========= [0m
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:end========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
[40;36m ======= relate node_fun argument:newstr========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
newstr_3 = malloc (1);
In function ‘concat’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:76:12: warning: use location
   76 |   newstr = XNEWVEC (char, 1);
      |            ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2438
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dbcf30 newstr>
    def_stmt newstr_3 = malloc (1);
    version:3
    ptr-info 0x7f1c63db7888>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with first ========= [0m
[40;36m ======= relate node_fun argument:first========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘concat’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with first ========= [0m
[40;36m ======= relate node_fun argument:first========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2480
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2380 first>
    def_stmt GIMPLE_NOP
    version:4
    ptr-info 0x7f1c63db78a0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘concat’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7>
vconcat_copy (newstr_3, first_4(D), arg_5(D));
vconcat_copy (newstr_3, first_4(D), arg_5(D));
In function ‘concat’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:79:3: warning: use location
   79 |   vconcat_copy (newstr, first, arg);
      |   ^
this stmt call this function :vconcat_copy
trace fucntion name:vconcat_copy 
[40;44m =======trace_function_path vconcat_copy  function_call count: 2 level :0========  [0m
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>
[40;36m ======= node_fun:vconcat_copy========= [0m
[40;36m ======= find relate stmt with arg ========= [0m
[40;36m ======= relate node_fun argument:arg========= [0m
[40;36m ======= relate gimple_assign_lhs:(null)========= [0m
In function ‘vconcat_copy’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
*end_6

 ================== warring ================== 
[40;35m this pointer possible reference other address [0m
[40;35m or assign other value [0m

 ================== warring ================== 
fucntion collect path finsh
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;46m =======add node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;46m =======add node_fun stack:strlen========= [0m

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc24c8
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2400 arg>
    def_stmt GIMPLE_NOP
    version:5
    ptr-info 0x7f1c63db78b8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:concat========= [0m
[40;44m =======node_fun:vconcat_copy========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path vconcat_copy  function_call count: 2 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:strlen========= [0m
[40;33m =======POP node_fun stack:strlen========= [0m
[40;42m =======pre_check_funciton:vconcat_copy========= [0m
[40;42m =======start_check_funciton:vconcat_copy========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2678
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2580 arg>
    def_stmt GIMPLE_NOP
    version:3
    ptr-info 0x7f1c63db78e8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================== pre trace ptable ================== 
trace fucntion name:strlen 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>
is Other function strlen
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_7(D)>
length_4 = strlen (arg_3(D));
length_4 = strlen (arg_3(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:61:32: warning: use location
   61 |         unsigned long length = strlen (arg);
      |                                ^
this stmt call this function :strlen
trace fucntion name:strlen 

 ================== trace ================== 
trace fucntion free:0 
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc26c0
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
    var <var_decl 0x7f1c63dc4090 length>
    def_stmt length_4 = strlen (arg_3(D));
    version:4>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>
is Other function 
 
 Start check Pointer Collect  

======================================================================
return dst_1(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:67:16: warning: use location
   67 |         return dst;
      |                ^
end_6 = dst_1(D) + length_4;
./benchmarks/binutils/leak_7/binutils_leak_7.c:63:13: warning: use location
   63 |         end += length;
      |             ^
*end_6 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:65:14: warning: use location
   65 |         *end = '\000';
      |              ^
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
   62 |         memcpy (end, arg, length);
      |         ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_8 = VDEF <.MEM_7(D)>
memcpy (dst_1(D), arg_3(D), length_4);
memcpy (dst_1(D), arg_3(D), length_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:62:9: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2630
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <parm_decl 0x7f1c63db2480 dst>
    def_stmt GIMPLE_NOP
    version:1
    ptr-info 0x7f1c63db78d0>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:vconcat_copy========= [0m
[40;44m =======node_fun:ldirname========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path ldirname  function_call count: 3 level :0========  [0m
[40;44m =======print_function_type 2  ========  [0m
[40;42m =======pre add _ fucntion:memcpy========= [0m
[40;33m =======POP node_fun stack:memcpy========= [0m
[40;42m =======pre add _ fucntion:malloc========= [0m
[40;33m =======POP node_fun stack:malloc========= [0m
[40;42m =======pre add _ fucntion:lbasename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path lbasename  function_call count: 1 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path unix_lbasename  function_call count: 0 level :2========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:unix_lbasename========= [0m
[40;42m =======start_check_funciton:unix_lbasename========= [0m
[40;33m =======POP node_fun stack:unix_lbasename========= [0m
[40;42m =======pre_check_funciton:lbasename========= [0m
[40;42m =======start_check_funciton:lbasename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
In function ‘ldirname’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
   28 |   return unix_lbasename (name);
      |          ^
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>

 ================== pre trace ptable ================== 
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :888========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
is Other function unix_lbasename
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:lbasename========= [0m
[40;42m =======pre_check_funciton:ldirname========= [0m
[40;42m =======start_check_funciton:ldirname========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_31(D)>
base_23 = lbasename (filename_22(D));
base_23 = lbasename (filename_22(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:34:22: warning: use location
   34 |   const char *base = lbasename (filename);
      |                      ^
this stmt call this function :lbasename
trace fucntion name:lbasename 
[40;44m =======trace_function_path lbasename  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with filename ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_16 = PHI <base_23(2), base_24(3)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
base_17 = PHI <base_16(7), base_16(8), base_16(9), base_28(10)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
_13 = base_17 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                ^
_14 = (sizetype) _13;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_10 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                    ^
_11 = (sizetype) _10;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
base_28 = base_16 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:17: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                 ^
_8 = *base_16;
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:31: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                               ^
if (_8 == 47)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:28: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                            ^
_7 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:12: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |            ^
if (_7 == 2)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:6: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |      ^
_5 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:35: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |                                   ^
_6 = (long unsigned int) _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
_3 = _2 + 2;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
_4 = (long unsigned int) _3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
if (base_16 == filename_22(D))
./benchmarks/binutils/leak_7/binutils_leak_7.c:40:6: warning: use location
   40 |   if (base == filename)
      |      ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = MEM[(const char *)base_16 + -1B];
./benchmarks/binutils/leak_7/binutils_leak_7.c:37:29: warning: use location
   37 |   while (base > filename && IS_DIR_SEPARATOR (base[-1]))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_24 = base_16 + 18446744073709551615;
./benchmarks/binutils/leak_7/binutils_leak_7.c:38:5: warning: use location
   38 |     --base;
      |     ^
_9 = *filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:49:11: warning: use location
   49 |       && !IS_DIR_SEPARATOR (filename[0]))
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2d38
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2600 filename>
    def_stmt GIMPLE_NOP
    version:22
    ptr-info 0x7f1c63db7990>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>

 ================== pre trace ptable ================== 
trace fucntion name:lbasename 
[40;44m =======trace_function_path lbasename  function_call count: 1 level :888========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :889========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
is Other function lbasename
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_31(D)>
base_23 = lbasename (filename_22(D));
base_23 = lbasename (filename_22(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:34:22: warning: use location
   34 |   const char *base = lbasename (filename);
      |                      ^
this stmt call this function :lbasename
trace fucntion name:lbasename 
[40;44m =======trace_function_path lbasename  function_call count: 1 level :0========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;46m =======add node_fun stack:unix_lbasename========= [0m
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :1========  [0m
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with base ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_16 = PHI <base_23(2), base_24(3)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
base_17 = PHI <base_16(7), base_16(8), base_16(9), base_28(10)>
lto1: warning: use location
this stmt have mutiple branch ---lbasename-----
_13 = base_17 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                ^
_14 = (sizetype) _13;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:16: warning: use location
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_10 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                    ^
_11 = (sizetype) _10;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:20: warning: use location
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
base_28 = base_16 + 1;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:17: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                 ^
_8 = *base_16;
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:31: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                               ^
if (_8 == 47)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:28: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |                            ^
_7 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:12: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |            ^
if (_7 == 2)
./benchmarks/binutils/leak_7/binutils_leak_7.c:48:6: warning: use location
   48 |   if (base - filename == 2 && IS_ABSOLUTE_PATH (base)
      |      ^
_5 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:35: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |                                   ^
_6 = (long unsigned int) _5;
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_2 = base_16 - filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
_3 = _2 + 2;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
_4 = (long unsigned int) _3;
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
_1 = MEM[(const char *)base_16 + -1B];
./benchmarks/binutils/leak_7/binutils_leak_7.c:37:29: warning: use location
   37 |   while (base > filename && IS_DIR_SEPARATOR (base[-1]))
      |                             ^

======================================================================
[40;31m    collect Stmt in loop [0m

======================================================================
base_24 = base_16 + 18446744073709551615;
./benchmarks/binutils/leak_7/binutils_leak_7.c:38:5: warning: use location
   38 |     --base;
      |     ^
_9 = *filename_22(D);
./benchmarks/binutils/leak_7/binutils_leak_7.c:49:11: warning: use location
   49 |       && !IS_DIR_SEPARATOR (filename[0]))
      |           ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2d80
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <var_decl 0x7f1c63dc43f0 base>
    def_stmt base_23 = lbasename (filename_22(D));
    version:23
    ptr-info 0x7f1c63db79a8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
# .MEM_32 = VDEF <.MEM_31(D)>
dirname_26 = malloc (_4);
dirname_26 = malloc (_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================== pre trace ptable ================== 
trace fucntion name:malloc 

 ================== pre trace ptable finish================== 
is Reserved word function :malloc
 
 Start check Pointer Collect  

======================================================================
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---malloc-----
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^
# .MEM_33 = VDEF <.MEM_32>
memcpy (dirname_26, filename_22(D), _6);
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
dirname_26 = malloc (_4);
./benchmarks/binutils/leak_7/binutils_leak_7.c:43:22: warning: use location
   43 |   dirname = (char *) xmalloc (base - filename + 2);         /* allocation site */
      |                      ^
this stmt call this function :malloc

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2e10
    type <pointer_type 0x7f1c63da2c78
        type <integer_type 0x7f1c63da29d8 char public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2c78>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality context <translation_unit_decl 0x7f1c64295168 ./benchmarks/binutils/leak_7/binutils_leak_7.c>
        pointer_to_this <pointer_type 0x7f1c63dacbd0>>
    var <var_decl 0x7f1c63dc4360 dirname>
    def_stmt dirname_26 = malloc (_4);
    version:26
    ptr-info 0x7f1c63db79d8>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# .MEM_33 = VDEF <.MEM_32>
memcpy (dirname_26, filename_22(D), _6);
memcpy (dirname_26, filename_22(D), _6);
./benchmarks/binutils/leak_7/binutils_leak_7.c:44:3: warning: use location
   44 |   memcpy (dirname, filename, base - filename);
      |   ^
this stmt call this function :memcpy
trace fucntion name:memcpy 

 ================== trace ================== 
trace fucntion free:0 
_18 = PHI <0B(6), dirname_26(11)>
lto1: warning: use location
this stmt have mutiple branch ---memcpy-----
_15 = dirname_26 + _14;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:10: warning: use location
   52 |   dirname[base - filename] = '\0';
      |          ^
*_15 = 0;
./benchmarks/binutils/leak_7/binutils_leak_7.c:52:28: warning: use location
   52 |   dirname[base - filename] = '\0';
      |                            ^
_12 = dirname_26 + _11;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:12: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |            ^
*_12 = 46;
./benchmarks/binutils/leak_7/binutils_leak_7.c:50:32: warning: use location
   50 |     dirname[base++ - filename] = '.';
      |                                ^

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dc2990
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _6 = (long unsigned int) _5;
    version:6>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	this stmt need double check [0m

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dc2900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
 <ssa_name 0x7f1c63dc2900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dc2900
    type <integer_type 0x7f1c6429f7e0 long unsigned int public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f738 precision:64 min <integer_cst 0x7f1c6428ae88 0> max <integer_cst 0x7f1c6428b500 18446744073709551615>
        pointer_to_this <pointer_type 0x7f1c642ab7e0>>
   
    def_stmt _4 = (long unsigned int) _3;
    version:4>
is Other function 

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m 	Can't find this fucntion in Pointer table [0m
[40;31m 	Possiable no other stmt relate with this stmt [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:ldirname========= [0m
[40;44m =======node_fun:lbasename========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path lbasename  function_call count: 1 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre add _ fucntion:unix_lbasename========= [0m
[40;44m =======print_function_type 0  ========  [0m
[40;44m =======print_function_path unix_lbasename  function_call count: 0 level :1========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:unix_lbasename========= [0m
[40;42m =======start_check_funciton:unix_lbasename========= [0m
[40;33m =======POP node_fun stack:unix_lbasename========= [0m
[40;42m =======pre_check_funciton:lbasename========= [0m
[40;42m =======start_check_funciton:lbasename========= [0m

dot graph START

======================================================================
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>

 ================== pre trace ptable ================== 

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
is Other function 
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
In function ‘lbasename’:
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
   28 |   return unix_lbasename (name);
      |          ^
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with name ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dcb048
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
    var <parm_decl 0x7f1c63db2680 name>
    def_stmt GIMPLE_NOP
    version:2
    ptr-info 0x7f1c63db7a08>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================

dot graph START

======================================================================
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>

 ================== pre trace ptable ================== 
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :888========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== pre trace ptable finish================== 
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
is Other function unix_lbasename
 
 Start check Pointer Collect  

======================================================================
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 
# VUSE <.MEM_4(D)>
_3 = unix_lbasename (name_2(D));
_3 = unix_lbasename (name_2(D));
./benchmarks/binutils/leak_7/binutils_leak_7.c:28:10: warning: use location
this stmt call this function :unix_lbasename
trace fucntion name:unix_lbasename 
[40;44m =======trace_function_path unix_lbasename  function_call count: 0 level :0========  [0m
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>
[40;36m ======= node_fun:unix_lbasename========= [0m
[40;36m ======= find relate stmt with (null) ========= [0m
fucntion collect path finsh

 ================== trace ================== 
trace fucntion free:0 

 ================== Start Looserules free Check ================== 

 ================== warring ================== 
[40;35m   this module possiable false positives [0m

 ================== warring ================== 
 <ssa_name 0x7f1c63dcb090
    type <pointer_type 0x7f1c63da2b28
        type <integer_type 0x7f1c63da2a80 char readonly public QI
            size <integer_cst 0x7f1c6428aca8 constant 8>
            unit-size <integer_cst 0x7f1c6428acc0 constant 1>
            align:8 warn_if_not_align:0 symtab:0 alias-set -1 canonical-type 0x7f1c6429f3f0 precision:8 min <integer_cst 0x7f1c63d99720 -128> max <integer_cst 0x7f1c63d99708 127>
            pointer_to_this <pointer_type 0x7f1c63da2b28>>
        public unsigned DI
        size <integer_cst 0x7f1c6428abb8 constant 64>
        unit-size <integer_cst 0x7f1c6428abd0 constant 8>
        align:64 warn_if_not_align:0 symtab:0 alias-set -1 structural-equality>
   
    def_stmt _3 = unix_lbasename (name_2(D));
    version:3
    ptr-info 0x7f1c63db7a20>

 ================================================================= 

 ================== Start Use after free Check ================== 

dot graph END
 
 Finish check Pointer Collect  

======================================================================
[40;35m  	Looserules free count:0 [0m
[40;31m  	free count:0 [0m

======================================================================

======================================================================
[40;31m    no free stmt possible memory leak [0m

======================================================================

======================================================================
[40;33m =======POP node_fun stack:lbasename========= [0m
[40;44m =======node_fun:unix_lbasename========= [0m
[40;44m fucntion collect path  [0m
[40;44m =======print_function_path unix_lbasename  function_call count: 0 level :0========  [0m
[40;44m =======print_function_type 0  ========  [0m
[40;42m =======pre_check_funciton:unix_lbasename========= [0m
[40;42m =======start_check_funciton:unix_lbasename========= [0m
[40;33m =======POP node_fun stack:unix_lbasename========= [0m
fucntion collect path finsh

=============== The third stage : detection  End=================

===============Print ALL GIMPLE IR=================
=======Mapping node_fun:main=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
do_start_initialization ();
concat ("dummy", "");
printf ("%d\n", 1835890020);
return 0;

=======Mapping node_fun:do_start_initialization=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = python_libdir;
_2 = ldirname (_1);
progname_16 = concat (_2, "bin");
_3 = setlocale ("LC_ALL", 0B);
_4 = (long int) _3;
_5 = (const char *) _4;
oldloc_19 = strdup (_5);
setlocale ("LC_ALL", "");
progsize_21 = strlen (progname_16);
_6 = progsize_21 + 1;
_7 = _6 * 4;
progname_copy_23 = PyMem_Malloc (_7);
if (progname_copy_23 == 0B)
  goto <bb 3>; [0.04%]
else
  goto <bb 4>; [99.96%]

=======is loop:0=========

 bb index 3 
<bb 3> [local count: 429496]:
free (oldloc_19);
_8 = stderr;
__builtin_fwrite ("out of memory\n", 1, 14, _8);
_37 = false;
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 4 
<bb 4> [local count: 1073312329]:
_9 = progsize_21 + 1;
count_25 = mbstowcs (progname_copy_23, progname_16, _9);
if (count_25 == 18446744073709551615)
  goto <bb 5>; [20.97%]
else
  goto <bb 6>; [79.03%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 225073599]:
free (oldloc_19);
free (progname_copy_23);
_10 = stderr;
__builtin_fwrite ("Could not convert python path to string\n", 1, 40, _10);
_34 = false;
goto <bb 7>; [100.00%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 848238730]:
setlocale ("LC_ALL", oldloc_19);
free (oldloc_19);
Py_SetProgramName (progname_copy_23);
free (progname_copy_23);
_30 = true;

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 1073741824]:
# _11 = PHI <_37(3), _34(5), _30(6)>
return _11;

=======Mapping node_fun:Py_SetProgramName=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_1 = MEM[(int *)progname_3(D)];
printf ("%d\n", _1);
return;

=======Mapping node_fun:PyMem_Malloc=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
ret_4 = malloc (size_2(D));
return ret_4;

=======Mapping node_fun:concat=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
newstr_3 = malloc (1);
vconcat_copy (newstr_3, first_4(D), arg_5(D));
return newstr_3;

=======Mapping node_fun:vconcat_copy=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
length_4 = strlen (arg_3(D));
memcpy (dst_1(D), arg_3(D), length_4);
end_6 = dst_1(D) + length_4;
*end_6 = 0;
return dst_1(D);

=======Mapping node_fun:ldirname=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 114863530]:
base_23 = lbasename (filename_22(D));
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 958878296]:
base_24 = base_16 + 18446744073709551615;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# base_16 = PHI <base_23(2), base_24(3)>
if (base_16 > filename_22(D))
  goto <bb 5>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:1=========

 bb index 5 
<bb 5> [local count: 1014686026]:
_1 = MEM[(const char *)base_16 + -1B];
if (_1 == 47)
  goto <bb 3>; [94.50%]
else
  goto <bb 6>; [5.50%]

=======is loop:0=========

 bb index 6 
<bb 6> [local count: 114863531]:
if (base_16 == filename_22(D))
  goto <bb 12>; [15.47%]
else
  goto <bb 7>; [84.53%]

=======is loop:0=========

 bb index 7 
<bb 7> [local count: 97094143]:
_2 = base_16 - filename_22(D);
_3 = _2 + 2;
_4 = (long unsigned int) _3;
dirname_26 = malloc (_4);
_5 = base_16 - filename_22(D);
_6 = (long unsigned int) _5;
memcpy (dirname_26, filename_22(D), _6);
_7 = base_16 - filename_22(D);
if (_7 == 2)
  goto <bb 8>; [34.00%]
else
  goto <bb 11>; [66.00%]

=======is loop:0=========

 bb index 8 
<bb 8> [local count: 33012009]:
_8 = *base_16;
if (_8 == 47)
  goto <bb 9>; [34.00%]
else
  goto <bb 11>; [66.00%]

=======is loop:0=========

 bb index 9 
<bb 9> [local count: 11224083]:
_9 = *filename_22(D);
if (_9 != 47)
  goto <bb 10>; [66.00%]
else
  goto <bb 11>; [34.00%]

=======is loop:0=========

 bb index 10 
<bb 10> [local count: 7407895]:
base_28 = base_16 + 1;
_10 = base_16 - filename_22(D);
_11 = (sizetype) _10;
_12 = dirname_26 + _11;
*_12 = 46;

=======is loop:0=========

 bb index 11 
<bb 11> [local count: 97094143]:
# base_17 = PHI <base_16(7), base_16(8), base_16(9), base_28(10)>
_13 = base_17 - filename_22(D);
_14 = (sizetype) _13;
_15 = dirname_26 + _14;
*_15 = 0;

=======is loop:0=========

 bb index 12 
<bb 12> [local count: 114863532]:
# _18 = PHI <0B(6), dirname_26(11)>
return _18;

=======Mapping node_fun:lbasename=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 1073741824]:
_3 = unix_lbasename (name_2(D));
return _3;

=======Mapping node_fun:unix_lbasename=========
=======is loop:0=========

 bb index 2 
<bb 2> [local count: 118111600]:
goto <bb 4>; [100.00%]

=======is loop:1=========

 bb index 3 
<bb 3> [local count: 955630225]:
base_6 = name_2 + 1;
name_7 = name_2 + 1;

=======is loop:1=========

 bb index 4 
<bb 4> [local count: 1073741824]:
# name_2 = PHI <name_4(D)(2), name_7(3)>
# base_3 = PHI <name_4(D)(2), base_6(3)>
_1 = *name_2;
if (_1 != 0)
  goto <bb 3>; [89.00%]
else
  goto <bb 5>; [11.00%]

=======is loop:0=========

 bb index 5 
<bb 5> [local count: 118111600]:
return base_3;


===============Print ALL GIMPLE IR=================
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
    =()=
 ,/'_||_
  (___  `.
 ./  `=='
                   
    ~~~~~~~~~~~  
 ~~~~~~
           ~~~~~~~
[40;34m    gimple malloc count : 4 [0m
[40;34m    gimple free   count : 5 [0m
[40;34m    all ptable point : 44 [0m
[40;34m    analyzable ptable point : 36 [0m
[40;34m    used_stmt array stack totalsize of : 0.003720 mb[0m
[40;34m    collect time: : 0.004312 s [0m
[40;34m    algorithm time: 0.223135 s [0m
[40;34m    gimple stmt count : : 84 [0m
[40;34m    this report analysis in Fri Feb 18 12:18:46 2022
 [0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m
[40;32mSTART CHECKSTART CHECKSTART CHECKSTART CHECKSTART CHECK[0m

Time variable                                   usr           sys          wall           GGC
 phase setup                        :   0.00 (  0%)   0.00 (  0%)   0.00 (  0%)  2157k ( 77%)
 phase opt and generate             :   0.05 (100%)   0.21 (100%)   0.26 (100%)   589k ( 21%)
 callgraph functions expansion      :   0.01 ( 20%)   0.03 ( 14%)   0.03 ( 12%)   482k ( 17%)
 ipa points-to                      :   0.00 (  0%)   0.01 (  5%)   0.00 (  0%)  6000  (  0%)
 tree CCP                           :   0.00 (  0%)   0.00 (  0%)   0.01 (  4%)   224  (  0%)
 tree iv optimization               :   0.01 ( 20%)   0.01 (  5%)   0.00 (  0%)    12k (  0%)
 plugin execution                   :   0.04 ( 80%)   0.17 ( 81%)   0.23 ( 88%)  1144  (  0%)
 rest of compilation                :   0.00 (  0%)   0.02 ( 10%)   0.02 (  8%)    24k (  1%)
 TOTAL                              :   0.05          0.21          0.26         2803k
